        -:    0:Source:pk7_attr.c
        -:    0:Graph:pk7_attr.gcno
        -:    0:Data:pk7_attr.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* pk7_attr.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 2001.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 2001-2004 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <stdlib.h>
        -:   61:#include <openssl/bio.h>
        -:   62:#include <openssl/asn1.h>
        -:   63:#include <openssl/asn1t.h>
        -:   64:#include <openssl/pem.h>
        -:   65:#include <openssl/pkcs7.h>
        -:   66:#include <openssl/x509.h>
        -:   67:#include <openssl/err.h>
        -:   68:
    #####:   69:int PKCS7_add_attrib_smimecap(PKCS7_SIGNER_INFO *si, STACK_OF(X509_ALGOR) *cap)
        -:   70:{
        -:   71:	ASN1_STRING *seq;
    #####:   72:	if(!(seq = ASN1_STRING_new())) {
    #####:   73:		PKCS7err(PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP,ERR_R_MALLOC_FAILURE);
    #####:   74:		return 0;
        -:   75:	}
    #####:   76:	seq->length = ASN1_item_i2d((ASN1_VALUE *)cap,&seq->data,
        -:   77:				ASN1_ITEM_rptr(X509_ALGORS));
    #####:   78:        return PKCS7_add_signed_attribute(si, NID_SMIMECapabilities,
        -:   79:							V_ASN1_SEQUENCE, seq);
        -:   80:}
        -:   81:
    #####:   82:STACK_OF(X509_ALGOR) *PKCS7_get_smimecap(PKCS7_SIGNER_INFO *si)
        -:   83:	{
        -:   84:	ASN1_TYPE *cap;
        -:   85:	const unsigned char *p;
        -:   86:
    #####:   87:	cap = PKCS7_get_signed_attribute(si, NID_SMIMECapabilities);
    #####:   88:	if (!cap || (cap->type != V_ASN1_SEQUENCE))
        -:   89:		return NULL;
    #####:   90:	p = cap->value.sequence->data;
    #####:   91:	return (STACK_OF(X509_ALGOR) *)
    #####:   92:		ASN1_item_d2i(NULL, &p, cap->value.sequence->length,
        -:   93:				ASN1_ITEM_rptr(X509_ALGORS));
        -:   94:	}
        -:   95:
        -:   96:/* Basic smime-capabilities OID and optional integer arg */
    #####:   97:int PKCS7_simple_smimecap(STACK_OF(X509_ALGOR) *sk, int nid, int arg)
        -:   98:{
        -:   99:	X509_ALGOR *alg;
        -:  100:
    #####:  101:	if(!(alg = X509_ALGOR_new())) {
    #####:  102:		PKCS7err(PKCS7_F_PKCS7_SIMPLE_SMIMECAP,ERR_R_MALLOC_FAILURE);
    #####:  103:		return 0;
        -:  104:	}
    #####:  105:	ASN1_OBJECT_free(alg->algorithm);
    #####:  106:	alg->algorithm = OBJ_nid2obj (nid);
    #####:  107:	if (arg > 0) {
        -:  108:		ASN1_INTEGER *nbit;
    #####:  109:		if(!(alg->parameter = ASN1_TYPE_new())) {
    #####:  110:			PKCS7err(PKCS7_F_PKCS7_SIMPLE_SMIMECAP,ERR_R_MALLOC_FAILURE);
    #####:  111:			return 0;
        -:  112:		}
    #####:  113:		if(!(nbit = ASN1_INTEGER_new())) {
    #####:  114:			PKCS7err(PKCS7_F_PKCS7_SIMPLE_SMIMECAP,ERR_R_MALLOC_FAILURE);
    #####:  115:			return 0;
        -:  116:		}
    #####:  117:		if(!ASN1_INTEGER_set (nbit, arg)) {
    #####:  118:			PKCS7err(PKCS7_F_PKCS7_SIMPLE_SMIMECAP,ERR_R_MALLOC_FAILURE);
    #####:  119:			return 0;
        -:  120:		}
    #####:  121:		alg->parameter->value.integer = nbit;
    #####:  122:		alg->parameter->type = V_ASN1_INTEGER;
        -:  123:	}
    #####:  124:	sk_X509_ALGOR_push (sk, alg);
    #####:  125:	return 1;
        -:  126:}
        -:  127:
    #####:  128:int PKCS7_add_attrib_content_type(PKCS7_SIGNER_INFO *si, ASN1_OBJECT *coid)
        -:  129:	{
    #####:  130:	if (PKCS7_get_signed_attribute(si, NID_pkcs9_contentType))
        -:  131:		return 0;
    #####:  132:	if (!coid)
    #####:  133:		coid = OBJ_nid2obj(NID_pkcs7_data);
    #####:  134:	return PKCS7_add_signed_attribute(si, NID_pkcs9_contentType,
        -:  135:				V_ASN1_OBJECT, coid);
        -:  136:	}
        -:  137:
    #####:  138:int PKCS7_add0_attrib_signing_time(PKCS7_SIGNER_INFO *si, ASN1_TIME *t)
        -:  139:	{
    #####:  140:	if (!t && !(t=X509_gmtime_adj(NULL,0)))
        -:  141:		{
    #####:  142:		PKCS7err(PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME,
        -:  143:				ERR_R_MALLOC_FAILURE);
    #####:  144:		return 0;
        -:  145:		}
    #####:  146:	return PKCS7_add_signed_attribute(si, NID_pkcs9_signingTime,
        -:  147:						V_ASN1_UTCTIME, t);
        -:  148:	}
        -:  149:
    #####:  150:int PKCS7_add1_attrib_digest(PKCS7_SIGNER_INFO *si,
        -:  151:				const unsigned char *md, int mdlen)
        -:  152:	{
        -:  153:	ASN1_OCTET_STRING *os;
    #####:  154:	os = ASN1_OCTET_STRING_new();
    #####:  155:	if (!os)
        -:  156:		return 0;
    #####:  157:	if (!ASN1_STRING_set(os, md, mdlen)
    #####:  158:		|| !PKCS7_add_signed_attribute(si, NID_pkcs9_messageDigest,
        -:  159:						V_ASN1_OCTET_STRING, os))
        -:  160:		{
    #####:  161:		ASN1_OCTET_STRING_free(os);
    #####:  162:		return 0;
        -:  163:		}
        -:  164:	return 1;
        -:  165:	}
