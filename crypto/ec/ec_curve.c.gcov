        -:    0:Source:ec_curve.c
        -:    0:Graph:ec_curve.gcno
        -:    0:Data:ec_curve.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/ec/ec_curve.c */
        -:    2:/*
        -:    3: * Written by Nils Larsch for the OpenSSL project.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1998-2010 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    openssl-core@openssl.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:/* ====================================================================
        -:   59: * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED.
        -:   60: *
        -:   61: * Portions of the attached software ("Contribution") are developed by 
        -:   62: * SUN MICROSYSTEMS, INC., and are contributed to the OpenSSL project.
        -:   63: *
        -:   64: * The Contribution is licensed pursuant to the OpenSSL open source
        -:   65: * license provided above.
        -:   66: *
        -:   67: * The elliptic curve binary polynomial software is originally written by 
        -:   68: * Sheueling Chang Shantz and Douglas Stebila of Sun Microsystems Laboratories.
        -:   69: *
        -:   70: */
        -:   71:
        -:   72:#include "ec_lcl.h"
        -:   73:#include <openssl/err.h>
        -:   74:#include <openssl/obj_mac.h>
        -:   75:#include <openssl/opensslconf.h>
        -:   76:
        -:   77:typedef struct {
        -:   78:	int	field_type,	/* either NID_X9_62_prime_field or
        -:   79:				 * NID_X9_62_characteristic_two_field */
        -:   80:		seed_len,
        -:   81:		param_len;
        -:   82:	unsigned int cofactor;	/* promoted to BN_ULONG */
        -:   83:} EC_CURVE_DATA;
        -:   84:
        -:   85:/* the nist prime curves */
        -:   86:static const struct { EC_CURVE_DATA h; unsigned char data[20+24*6]; }
        -:   87:	_EC_NIST_PRIME_192 = {
        -:   88:	{ NID_X9_62_prime_field,20,24,1 },
        -:   89:	{ 0x30,0x45,0xAE,0x6F,0xC8,0x42,0x2F,0x64,0xED,0x57,	/* seed */
        -:   90:	  0x95,0x28,0xD3,0x81,0x20,0xEA,0xE1,0x21,0x96,0xD5,
        -:   91:
        -:   92:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:   93:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:   94:	  0xFF,0xFF,0xFF,0xFF,
        -:   95:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:   96:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:   97:	  0xFF,0xFF,0xFF,0xFC,
        -:   98:	  0x64,0x21,0x05,0x19,0xE5,0x9C,0x80,0xE7,0x0F,0xA7,	/* b */
        -:   99:	  0xE9,0xAB,0x72,0x24,0x30,0x49,0xFE,0xB8,0xDE,0xEC,
        -:  100:	  0xC1,0x46,0xB9,0xB1,
        -:  101:	  0x18,0x8D,0xA8,0x0E,0xB0,0x30,0x90,0xF6,0x7C,0xBF,	/* x */
        -:  102:	  0x20,0xEB,0x43,0xA1,0x88,0x00,0xF4,0xFF,0x0A,0xFD,
        -:  103:	  0x82,0xFF,0x10,0x12,
        -:  104:	  0x07,0x19,0x2b,0x95,0xff,0xc8,0xda,0x78,0x63,0x10,	/* y */
        -:  105:	  0x11,0xed,0x6b,0x24,0xcd,0xd5,0x73,0xf9,0x77,0xa1,
        -:  106:	  0x1e,0x79,0x48,0x11,
        -:  107:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  108:	  0xFF,0xFF,0x99,0xDE,0xF8,0x36,0x14,0x6B,0xC9,0xB1,
        -:  109:	  0xB4,0xD2,0x28,0x31 }
        -:  110:	};
        -:  111:
        -:  112:static const struct { EC_CURVE_DATA h; unsigned char data[20+28*6]; }
        -:  113:	_EC_NIST_PRIME_224 = {
        -:  114:	{ NID_X9_62_prime_field,20,28,1 },
        -:  115:	{ 0xBD,0x71,0x34,0x47,0x99,0xD5,0xC7,0xFC,0xDC,0x45,	/* seed */
        -:  116:	  0xB5,0x9F,0xA3,0xB9,0xAB,0x8F,0x6A,0x94,0x8B,0xC5,
        -:  117:
        -:  118:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  119:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
        -:  120:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  121:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  122:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:  123:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,
        -:  124:	  0xB4,0x05,0x0A,0x85,0x0C,0x04,0xB3,0xAB,0xF5,0x41,	/* b */
        -:  125:	  0x32,0x56,0x50,0x44,0xB0,0xB7,0xD7,0xBF,0xD8,0xBA,
        -:  126:	  0x27,0x0B,0x39,0x43,0x23,0x55,0xFF,0xB4,
        -:  127:	  0xB7,0x0E,0x0C,0xBD,0x6B,0xB4,0xBF,0x7F,0x32,0x13,	/* x */
        -:  128:	  0x90,0xB9,0x4A,0x03,0xC1,0xD3,0x56,0xC2,0x11,0x22,
        -:  129:	  0x34,0x32,0x80,0xD6,0x11,0x5C,0x1D,0x21,
        -:  130:	  0xbd,0x37,0x63,0x88,0xb5,0xf7,0x23,0xfb,0x4c,0x22,	/* y */
        -:  131:	  0xdf,0xe6,0xcd,0x43,0x75,0xa0,0x5a,0x07,0x47,0x64,
        -:  132:	  0x44,0xd5,0x81,0x99,0x85,0x00,0x7e,0x34,
        -:  133:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  134:	  0xFF,0xFF,0xFF,0xFF,0x16,0xA2,0xE0,0xB8,0xF0,0x3E,
        -:  135:	  0x13,0xDD,0x29,0x45,0x5C,0x5C,0x2A,0x3D }
        -:  136:	};
        -:  137:
        -:  138:static const struct { EC_CURVE_DATA h; unsigned char data[20+48*6]; }
        -:  139:	_EC_NIST_PRIME_384 = {
        -:  140:	{ NID_X9_62_prime_field,20,48,1 },
        -:  141:	{ 0xA3,0x35,0x92,0x6A,0xA3,0x19,0xA2,0x7A,0x1D,0x00,	/* seed */
        -:  142:	  0x89,0x6A,0x67,0x73,0xA4,0x82,0x7A,0xCD,0xAC,0x73,
        -:  143:
        -:  144:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  145:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  146:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  147:	  0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
        -:  148:	  0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
        -:  149:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  150:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  151:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  152:	  0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
        -:  153:	  0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFC,
        -:  154:	  0xB3,0x31,0x2F,0xA7,0xE2,0x3E,0xE7,0xE4,0x98,0x8E,	/* b */
        -:  155:	  0x05,0x6B,0xE3,0xF8,0x2D,0x19,0x18,0x1D,0x9C,0x6E,
        -:  156:	  0xFE,0x81,0x41,0x12,0x03,0x14,0x08,0x8F,0x50,0x13,
        -:  157:	  0x87,0x5A,0xC6,0x56,0x39,0x8D,0x8A,0x2E,0xD1,0x9D,
        -:  158:	  0x2A,0x85,0xC8,0xED,0xD3,0xEC,0x2A,0xEF,
        -:  159:	  0xAA,0x87,0xCA,0x22,0xBE,0x8B,0x05,0x37,0x8E,0xB1,	/* x */
        -:  160:	  0xC7,0x1E,0xF3,0x20,0xAD,0x74,0x6E,0x1D,0x3B,0x62,
        -:  161:	  0x8B,0xA7,0x9B,0x98,0x59,0xF7,0x41,0xE0,0x82,0x54,
        -:  162:	  0x2A,0x38,0x55,0x02,0xF2,0x5D,0xBF,0x55,0x29,0x6C,
        -:  163:	  0x3A,0x54,0x5E,0x38,0x72,0x76,0x0A,0xB7,
        -:  164:	  0x36,0x17,0xde,0x4a,0x96,0x26,0x2c,0x6f,0x5d,0x9e,	/* y */
        -:  165:	  0x98,0xbf,0x92,0x92,0xdc,0x29,0xf8,0xf4,0x1d,0xbd,
        -:  166:	  0x28,0x9a,0x14,0x7c,0xe9,0xda,0x31,0x13,0xb5,0xf0,
        -:  167:	  0xb8,0xc0,0x0a,0x60,0xb1,0xce,0x1d,0x7e,0x81,0x9d,
        -:  168:	  0x7a,0x43,0x1d,0x7c,0x90,0xea,0x0e,0x5f,
        -:  169:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  170:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  171:	  0xFF,0xFF,0xFF,0xFF,0xC7,0x63,0x4D,0x81,0xF4,0x37,
        -:  172:	  0x2D,0xDF,0x58,0x1A,0x0D,0xB2,0x48,0xB0,0xA7,0x7A,
        -:  173:	  0xEC,0xEC,0x19,0x6A,0xCC,0xC5,0x29,0x73 }
        -:  174:	};
        -:  175:
        -:  176:static const struct { EC_CURVE_DATA h; unsigned char data[20+66*6]; }
        -:  177:	_EC_NIST_PRIME_521 = {
        -:  178:	{ NID_X9_62_prime_field,20,66,1 },
        -:  179:	{ 0xD0,0x9E,0x88,0x00,0x29,0x1C,0xB8,0x53,0x96,0xCC,	/* seed */
        -:  180:	  0x67,0x17,0x39,0x32,0x84,0xAA,0xA0,0xDA,0x64,0xBA,
        -:  181:
        -:  182:	  0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  183:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  184:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  185:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  186:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  187:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  188:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  189:	  0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  190:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  191:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  192:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  193:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  194:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  195:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,
        -:  196:	  0x00,0x51,0x95,0x3E,0xB9,0x61,0x8E,0x1C,0x9A,0x1F,	/* b */
        -:  197:	  0x92,0x9A,0x21,0xA0,0xB6,0x85,0x40,0xEE,0xA2,0xDA,
        -:  198:	  0x72,0x5B,0x99,0xB3,0x15,0xF3,0xB8,0xB4,0x89,0x91,
        -:  199:	  0x8E,0xF1,0x09,0xE1,0x56,0x19,0x39,0x51,0xEC,0x7E,
        -:  200:	  0x93,0x7B,0x16,0x52,0xC0,0xBD,0x3B,0xB1,0xBF,0x07,
        -:  201:	  0x35,0x73,0xDF,0x88,0x3D,0x2C,0x34,0xF1,0xEF,0x45,
        -:  202:	  0x1F,0xD4,0x6B,0x50,0x3F,0x00,
        -:  203:	  0x00,0xC6,0x85,0x8E,0x06,0xB7,0x04,0x04,0xE9,0xCD,	/* x */
        -:  204:	  0x9E,0x3E,0xCB,0x66,0x23,0x95,0xB4,0x42,0x9C,0x64,
        -:  205:	  0x81,0x39,0x05,0x3F,0xB5,0x21,0xF8,0x28,0xAF,0x60,
        -:  206:	  0x6B,0x4D,0x3D,0xBA,0xA1,0x4B,0x5E,0x77,0xEF,0xE7,
        -:  207:	  0x59,0x28,0xFE,0x1D,0xC1,0x27,0xA2,0xFF,0xA8,0xDE,
        -:  208:	  0x33,0x48,0xB3,0xC1,0x85,0x6A,0x42,0x9B,0xF9,0x7E,
        -:  209:	  0x7E,0x31,0xC2,0xE5,0xBD,0x66,
        -:  210:	  0x01,0x18,0x39,0x29,0x6a,0x78,0x9a,0x3b,0xc0,0x04,	/* y */
        -:  211:	  0x5c,0x8a,0x5f,0xb4,0x2c,0x7d,0x1b,0xd9,0x98,0xf5,
        -:  212:	  0x44,0x49,0x57,0x9b,0x44,0x68,0x17,0xaf,0xbd,0x17,
        -:  213:	  0x27,0x3e,0x66,0x2c,0x97,0xee,0x72,0x99,0x5e,0xf4,
        -:  214:	  0x26,0x40,0xc5,0x50,0xb9,0x01,0x3f,0xad,0x07,0x61,
        -:  215:	  0x35,0x3c,0x70,0x86,0xa2,0x72,0xc2,0x40,0x88,0xbe,
        -:  216:	  0x94,0x76,0x9f,0xd1,0x66,0x50,
        -:  217:	  0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  218:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  219:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  220:	  0xFF,0xFF,0xFF,0xFA,0x51,0x86,0x87,0x83,0xBF,0x2F,
        -:  221:	  0x96,0x6B,0x7F,0xCC,0x01,0x48,0xF7,0x09,0xA5,0xD0,
        -:  222:	  0x3B,0xB5,0xC9,0xB8,0x89,0x9C,0x47,0xAE,0xBB,0x6F,
        -:  223:	  0xB7,0x1E,0x91,0x38,0x64,0x09 }
        -:  224:	};
        -:  225:
        -:  226:/* the x9.62 prime curves (minus the nist prime curves) */
        -:  227:static const struct { EC_CURVE_DATA h; unsigned char data[20+24*6]; }
        -:  228:	_EC_X9_62_PRIME_192V2 = {
        -:  229:	{ NID_X9_62_prime_field,20,24,1 },
        -:  230:	{ 0x31,0xA9,0x2E,0xE2,0x02,0x9F,0xD1,0x0D,0x90,0x1B,	/* seed */
        -:  231:	  0x11,0x3E,0x99,0x07,0x10,0xF0,0xD2,0x1A,0xC6,0xB6,
        -:  232:
        -:  233:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  234:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:  235:	  0xFF,0xFF,0xFF,0xFF,
        -:  236:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  237:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:  238:	  0xFF,0xFF,0xFF,0xFC,
        -:  239:	  0xCC,0x22,0xD6,0xDF,0xB9,0x5C,0x6B,0x25,0xE4,0x9C,	/* b */
        -:  240:	  0x0D,0x63,0x64,0xA4,0xE5,0x98,0x0C,0x39,0x3A,0xA2,
        -:  241:	  0x16,0x68,0xD9,0x53,
        -:  242:	  0xEE,0xA2,0xBA,0xE7,0xE1,0x49,0x78,0x42,0xF2,0xDE,	/* x */
        -:  243:	  0x77,0x69,0xCF,0xE9,0xC9,0x89,0xC0,0x72,0xAD,0x69,
        -:  244:	  0x6F,0x48,0x03,0x4A,
        -:  245:	  0x65,0x74,0xd1,0x1d,0x69,0xb6,0xec,0x7a,0x67,0x2b,	/* y */
        -:  246:	  0xb8,0x2a,0x08,0x3d,0xf2,0xf2,0xb0,0x84,0x7d,0xe9,
        -:  247:	  0x70,0xb2,0xde,0x15,
        -:  248:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  249:	  0xFF,0xFE,0x5F,0xB1,0xA7,0x24,0xDC,0x80,0x41,0x86,
        -:  250:	  0x48,0xD8,0xDD,0x31 }
        -:  251:	};
        -:  252:
        -:  253:static const struct { EC_CURVE_DATA h; unsigned char data[20+24*6]; }
        -:  254:	_EC_X9_62_PRIME_192V3 = {
        -:  255:	{ NID_X9_62_prime_field,20,24,1 },
        -:  256:	{ 0xC4,0x69,0x68,0x44,0x35,0xDE,0xB3,0x78,0xC4,0xB6,	/* seed */
        -:  257:	  0x5C,0xA9,0x59,0x1E,0x2A,0x57,0x63,0x05,0x9A,0x2E,
        -:  258:
        -:  259:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  260:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:  261:	  0xFF,0xFF,0xFF,0xFF,
        -:  262:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  263:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:  264:	  0xFF,0xFF,0xFF,0xFC,
        -:  265:	  0x22,0x12,0x3D,0xC2,0x39,0x5A,0x05,0xCA,0xA7,0x42,	/* b */
        -:  266:	  0x3D,0xAE,0xCC,0xC9,0x47,0x60,0xA7,0xD4,0x62,0x25,
        -:  267:	  0x6B,0xD5,0x69,0x16,
        -:  268:	  0x7D,0x29,0x77,0x81,0x00,0xC6,0x5A,0x1D,0xA1,0x78,	/* x */
        -:  269:	  0x37,0x16,0x58,0x8D,0xCE,0x2B,0x8B,0x4A,0xEE,0x8E,
        -:  270:	  0x22,0x8F,0x18,0x96,
        -:  271:	  0x38,0xa9,0x0f,0x22,0x63,0x73,0x37,0x33,0x4b,0x49,	/* y */
        -:  272:	  0xdc,0xb6,0x6a,0x6d,0xc8,0xf9,0x97,0x8a,0xca,0x76,
        -:  273:	  0x48,0xa9,0x43,0xb0,
        -:  274:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  275:	  0xFF,0xFF,0x7A,0x62,0xD0,0x31,0xC8,0x3F,0x42,0x94,
        -:  276:	  0xF6,0x40,0xEC,0x13 }
        -:  277:	};
        -:  278:
        -:  279:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -:  280:	_EC_X9_62_PRIME_239V1 = {
        -:  281:	{ NID_X9_62_prime_field,20,30,1 },
        -:  282:	{ 0xE4,0x3B,0xB4,0x60,0xF0,0xB8,0x0C,0xC0,0xC0,0xB0,	/* seed */
        -:  283:	  0x75,0x79,0x8E,0x94,0x80,0x60,0xF8,0x32,0x1B,0x7D,
        -:  284:
        -:  285:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  286:	  0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
        -:  287:	  0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  288:
        -:  289:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  290:	  0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
        -:  291:	  0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFC,
        -:  292:
        -:  293:	  0x6B,0x01,0x6C,0x3B,0xDC,0xF1,0x89,0x41,0xD0,0xD6,	/* b */
        -:  294:	  0x54,0x92,0x14,0x75,0xCA,0x71,0xA9,0xDB,0x2F,0xB2,
        -:  295:	  0x7D,0x1D,0x37,0x79,0x61,0x85,0xC2,0x94,0x2C,0x0A,
        -:  296:
        -:  297:	  0x0F,0xFA,0x96,0x3C,0xDC,0xA8,0x81,0x6C,0xCC,0x33,	/* x */
        -:  298:	  0xB8,0x64,0x2B,0xED,0xF9,0x05,0xC3,0xD3,0x58,0x57,
        -:  299:	  0x3D,0x3F,0x27,0xFB,0xBD,0x3B,0x3C,0xB9,0xAA,0xAF,
        -:  300:
        -:  301:	  0x7d,0xeb,0xe8,0xe4,0xe9,0x0a,0x5d,0xae,0x6e,0x40,	/* y */
        -:  302:	  0x54,0xca,0x53,0x0b,0xa0,0x46,0x54,0xb3,0x68,0x18,
        -:  303:	  0xce,0x22,0x6b,0x39,0xfc,0xcb,0x7b,0x02,0xf1,0xae,
        -:  304:
        -:  305:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  306:	  0xFF,0xFF,0x7F,0xFF,0xFF,0x9E,0x5E,0x9A,0x9F,0x5D,
        -:  307:	  0x90,0x71,0xFB,0xD1,0x52,0x26,0x88,0x90,0x9D,0x0B }
        -:  308:	};
        -:  309:
        -:  310:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -:  311:	_EC_X9_62_PRIME_239V2 = {
        -:  312:	{ NID_X9_62_prime_field,20,30,1 },
        -:  313:	{ 0xE8,0xB4,0x01,0x16,0x04,0x09,0x53,0x03,0xCA,0x3B,	/* seed */
        -:  314:	  0x80,0x99,0x98,0x2B,0xE0,0x9F,0xCB,0x9A,0xE6,0x16,
        -:  315:
        -:  316:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  317:	  0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
        -:  318:	  0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  319:
        -:  320:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  321:	  0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
        -:  322:	  0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFC,
        -:  323:
        -:  324:	  0x61,0x7F,0xAB,0x68,0x32,0x57,0x6C,0xBB,0xFE,0xD5,	/* b */
        -:  325:	  0x0D,0x99,0xF0,0x24,0x9C,0x3F,0xEE,0x58,0xB9,0x4B,
        -:  326:	  0xA0,0x03,0x8C,0x7A,0xE8,0x4C,0x8C,0x83,0x2F,0x2C,
        -:  327:
        -:  328:	  0x38,0xAF,0x09,0xD9,0x87,0x27,0x70,0x51,0x20,0xC9,	/* x */
        -:  329:	  0x21,0xBB,0x5E,0x9E,0x26,0x29,0x6A,0x3C,0xDC,0xF2,
        -:  330:	  0xF3,0x57,0x57,0xA0,0xEA,0xFD,0x87,0xB8,0x30,0xE7,
        -:  331:
        -:  332:	  0x5b,0x01,0x25,0xe4,0xdb,0xea,0x0e,0xc7,0x20,0x6d,	/* y */
        -:  333:	  0xa0,0xfc,0x01,0xd9,0xb0,0x81,0x32,0x9f,0xb5,0x55,
        -:  334:	  0xde,0x6e,0xf4,0x60,0x23,0x7d,0xff,0x8b,0xe4,0xba,
        -:  335:
        -:  336:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  337:	  0xFF,0xFF,0x80,0x00,0x00,0xCF,0xA7,0xE8,0x59,0x43,
        -:  338:	  0x77,0xD4,0x14,0xC0,0x38,0x21,0xBC,0x58,0x20,0x63 }
        -:  339:	};
        -:  340:
        -:  341:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -:  342:	_EC_X9_62_PRIME_239V3 = {
        -:  343:	{ NID_X9_62_prime_field,20,30,1 },
        -:  344:	{ 0x7D,0x73,0x74,0x16,0x8F,0xFE,0x34,0x71,0xB6,0x0A,	/* seed */
        -:  345:	  0x85,0x76,0x86,0xA1,0x94,0x75,0xD3,0xBF,0xA2,0xFF,
        -:  346:
        -:  347:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  348:	  0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
        -:  349:	  0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  350:
        -:  351:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  352:	  0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
        -:  353:	  0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFC,
        -:  354:
        -:  355:	  0x25,0x57,0x05,0xFA,0x2A,0x30,0x66,0x54,0xB1,0xF4,	/* b */
        -:  356:	  0xCB,0x03,0xD6,0xA7,0x50,0xA3,0x0C,0x25,0x01,0x02,
        -:  357:	  0xD4,0x98,0x87,0x17,0xD9,0xBA,0x15,0xAB,0x6D,0x3E,
        -:  358:
        -:  359:	  0x67,0x68,0xAE,0x8E,0x18,0xBB,0x92,0xCF,0xCF,0x00,	/* x */
        -:  360:	  0x5C,0x94,0x9A,0xA2,0xC6,0xD9,0x48,0x53,0xD0,0xE6,
        -:  361:	  0x60,0xBB,0xF8,0x54,0xB1,0xC9,0x50,0x5F,0xE9,0x5A,
        -:  362:
        -:  363:	  0x16,0x07,0xe6,0x89,0x8f,0x39,0x0c,0x06,0xbc,0x1d,	/* y */
        -:  364:	  0x55,0x2b,0xad,0x22,0x6f,0x3b,0x6f,0xcf,0xe4,0x8b,
        -:  365:	  0x6e,0x81,0x84,0x99,0xaf,0x18,0xe3,0xed,0x6c,0xf3,
        -:  366:
        -:  367:	  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  368:	  0xFF,0xFF,0x7F,0xFF,0xFF,0x97,0x5D,0xEB,0x41,0xB3,
        -:  369:	  0xA6,0x05,0x7C,0x3C,0x43,0x21,0x46,0x52,0x65,0x51 }
        -:  370:	};
        -:  371:
        -:  372:
        -:  373:static const struct { EC_CURVE_DATA h; unsigned char data[20+32*6]; }
        -:  374:	_EC_X9_62_PRIME_256V1 = {
        -:  375:	{ NID_X9_62_prime_field,20,32,1 },
        -:  376:	{ 0xC4,0x9D,0x36,0x08,0x86,0xE7,0x04,0x93,0x6A,0x66,	/* seed */
        -:  377:	  0x78,0xE1,0x13,0x9D,0x26,0xB7,0x81,0x9F,0x7E,0x90,
        -:  378:
        -:  379:	  0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x01,0x00,0x00,	/* p */
        -:  380:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  381:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  382:	  0xFF,0xFF,
        -:  383:	  0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x01,0x00,0x00,	/* a */
        -:  384:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  385:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  386:	  0xFF,0xFC,
        -:  387:	  0x5A,0xC6,0x35,0xD8,0xAA,0x3A,0x93,0xE7,0xB3,0xEB,	/* b */
        -:  388:	  0xBD,0x55,0x76,0x98,0x86,0xBC,0x65,0x1D,0x06,0xB0,
        -:  389:	  0xCC,0x53,0xB0,0xF6,0x3B,0xCE,0x3C,0x3E,0x27,0xD2,
        -:  390:	  0x60,0x4B,
        -:  391:	  0x6B,0x17,0xD1,0xF2,0xE1,0x2C,0x42,0x47,0xF8,0xBC,	/* x */
        -:  392:	  0xE6,0xE5,0x63,0xA4,0x40,0xF2,0x77,0x03,0x7D,0x81,
        -:  393:	  0x2D,0xEB,0x33,0xA0,0xF4,0xA1,0x39,0x45,0xD8,0x98,
        -:  394:	  0xC2,0x96,
        -:  395:	  0x4f,0xe3,0x42,0xe2,0xfe,0x1a,0x7f,0x9b,0x8e,0xe7,	/* y */
        -:  396:	  0xeb,0x4a,0x7c,0x0f,0x9e,0x16,0x2b,0xce,0x33,0x57,
        -:  397:	  0x6b,0x31,0x5e,0xce,0xcb,0xb6,0x40,0x68,0x37,0xbf,
        -:  398:	  0x51,0xf5,
        -:  399:	  0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,	/* order */
        -:  400:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBC,0xE6,0xFA,0xAD,
        -:  401:	  0xA7,0x17,0x9E,0x84,0xF3,0xB9,0xCA,0xC2,0xFC,0x63,
        -:  402:	  0x25,0x51 }
        -:  403:	};
        -:  404:
        -:  405:/* the secg prime curves (minus the nist and x9.62 prime curves) */
        -:  406:static const struct { EC_CURVE_DATA h; unsigned char data[20+14*6]; }
        -:  407:	_EC_SECG_PRIME_112R1 = {
        -:  408:	{ NID_X9_62_prime_field,20,14,1 },
        -:  409:	{ 0x00,0xF5,0x0B,0x02,0x8E,0x4D,0x69,0x6E,0x67,0x68,	/* seed */
        -:  410:	  0x75,0x61,0x51,0x75,0x29,0x04,0x72,0x78,0x3F,0xB1,
        -:  411:
        -:  412:	  0xDB,0x7C,0x2A,0xBF,0x62,0xE3,0x5E,0x66,0x80,0x76,	/* p */
        -:  413:	  0xBE,0xAD,0x20,0x8B,
        -:  414:	  0xDB,0x7C,0x2A,0xBF,0x62,0xE3,0x5E,0x66,0x80,0x76,	/* a */
        -:  415:	  0xBE,0xAD,0x20,0x88,
        -:  416:	  0x65,0x9E,0xF8,0xBA,0x04,0x39,0x16,0xEE,0xDE,0x89,	/* b */
        -:  417:	  0x11,0x70,0x2B,0x22,
        -:  418:	  0x09,0x48,0x72,0x39,0x99,0x5A,0x5E,0xE7,0x6B,0x55,	/* x */
        -:  419:	  0xF9,0xC2,0xF0,0x98,
        -:  420:	  0xa8,0x9c,0xe5,0xaf,0x87,0x24,0xc0,0xa2,0x3e,0x0e,	/* y */
        -:  421:	  0x0f,0xf7,0x75,0x00,
        -:  422:	  0xDB,0x7C,0x2A,0xBF,0x62,0xE3,0x5E,0x76,0x28,0xDF,	/* order */
        -:  423:	  0xAC,0x65,0x61,0xC5 }
        -:  424:	};
        -:  425:
        -:  426:static const struct { EC_CURVE_DATA h; unsigned char data[20+14*6]; }
        -:  427:	_EC_SECG_PRIME_112R2 = {
        -:  428:	{ NID_X9_62_prime_field,20,14,4 },
        -:  429:	{ 0x00,0x27,0x57,0xA1,0x11,0x4D,0x69,0x6E,0x67,0x68,	/* seed */
        -:  430:	  0x75,0x61,0x51,0x75,0x53,0x16,0xC0,0x5E,0x0B,0xD4,
        -:  431:
        -:  432:	  0xDB,0x7C,0x2A,0xBF,0x62,0xE3,0x5E,0x66,0x80,0x76,	/* p */
        -:  433:	  0xBE,0xAD,0x20,0x8B,
        -:  434:	  0x61,0x27,0xC2,0x4C,0x05,0xF3,0x8A,0x0A,0xAA,0xF6,	/* a */
        -:  435:	  0x5C,0x0E,0xF0,0x2C,
        -:  436:	  0x51,0xDE,0xF1,0x81,0x5D,0xB5,0xED,0x74,0xFC,0xC3,	/* b */
        -:  437:	  0x4C,0x85,0xD7,0x09,
        -:  438:	  0x4B,0xA3,0x0A,0xB5,0xE8,0x92,0xB4,0xE1,0x64,0x9D,	/* x */
        -:  439:	  0xD0,0x92,0x86,0x43,
        -:  440:	  0xad,0xcd,0x46,0xf5,0x88,0x2e,0x37,0x47,0xde,0xf3,	/* y */
        -:  441:	  0x6e,0x95,0x6e,0x97,
        -:  442:	  0x36,0xDF,0x0A,0xAF,0xD8,0xB8,0xD7,0x59,0x7C,0xA1,	/* order */
        -:  443:	  0x05,0x20,0xD0,0x4B }
        -:  444:	};
        -:  445:
        -:  446:static const struct { EC_CURVE_DATA h; unsigned char data[20+16*6]; }
        -:  447:	_EC_SECG_PRIME_128R1 = {
        -:  448:	{ NID_X9_62_prime_field,20,16,1 },
        -:  449:	{ 0x00,0x0E,0x0D,0x4D,0x69,0x6E,0x67,0x68,0x75,0x61,	/* seed */
        -:  450:	  0x51,0x75,0x0C,0xC0,0x3A,0x44,0x73,0xD0,0x36,0x79,
        -:  451:
        -:  452:	  0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  453:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  454:	  0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  455:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,
        -:  456:	  0xE8,0x75,0x79,0xC1,0x10,0x79,0xF4,0x3D,0xD8,0x24,	/* b */
        -:  457:	  0x99,0x3C,0x2C,0xEE,0x5E,0xD3,
        -:  458:	  0x16,0x1F,0xF7,0x52,0x8B,0x89,0x9B,0x2D,0x0C,0x28,	/* x */
        -:  459:	  0x60,0x7C,0xA5,0x2C,0x5B,0x86,
        -:  460:	  0xcf,0x5a,0xc8,0x39,0x5b,0xaf,0xeb,0x13,0xc0,0x2d,	/* y */
        -:  461:	  0xa2,0x92,0xdd,0xed,0x7a,0x83,
        -:  462:	  0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x75,0xA3,	/* order */
        -:  463:	  0x0D,0x1B,0x90,0x38,0xA1,0x15 }
        -:  464:	};
        -:  465:
        -:  466:static const struct { EC_CURVE_DATA h; unsigned char data[20+16*6]; }
        -:  467:	_EC_SECG_PRIME_128R2 = {
        -:  468:	{ NID_X9_62_prime_field,20,16,4 },
        -:  469:	{ 0x00,0x4D,0x69,0x6E,0x67,0x68,0x75,0x61,0x51,0x75,	/* seed */
        -:  470:	  0x12,0xD8,0xF0,0x34,0x31,0xFC,0xE6,0x3B,0x88,0xF4,
        -:  471:
        -:  472:	  0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  473:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  474:	  0xD6,0x03,0x19,0x98,0xD1,0xB3,0xBB,0xFE,0xBF,0x59,	/* a */
        -:  475:	  0xCC,0x9B,0xBF,0xF9,0xAE,0xE1,
        -:  476:	  0x5E,0xEE,0xFC,0xA3,0x80,0xD0,0x29,0x19,0xDC,0x2C,	/* b */
        -:  477:	  0x65,0x58,0xBB,0x6D,0x8A,0x5D,
        -:  478:	  0x7B,0x6A,0xA5,0xD8,0x5E,0x57,0x29,0x83,0xE6,0xFB,	/* x */
        -:  479:	  0x32,0xA7,0xCD,0xEB,0xC1,0x40,
        -:  480:	  0x27,0xb6,0x91,0x6a,0x89,0x4d,0x3a,0xee,0x71,0x06,	/* y */
        -:  481:	  0xfe,0x80,0x5f,0xc3,0x4b,0x44,
        -:  482:	  0x3F,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xBE,0x00,	/* order */
        -:  483:	  0x24,0x72,0x06,0x13,0xB5,0xA3 }
        -:  484:	};
        -:  485:
        -:  486:static const struct { EC_CURVE_DATA h; unsigned char data[0+21*6]; }
        -:  487:	_EC_SECG_PRIME_160K1 = {
        -:  488:	{ NID_X9_62_prime_field,0,21,1 },
        -:  489:	{							/* no seed */
        -:  490:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  491:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xAC,
        -:  492:	  0x73,
        -:  493:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  494:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  495:	  0x00,
        -:  496:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  497:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  498:	  0x07,
        -:  499:	  0x00,0x3B,0x4C,0x38,0x2C,0xE3,0x7A,0xA1,0x92,0xA4,	/* x */
        -:  500:	  0x01,0x9E,0x76,0x30,0x36,0xF4,0xF5,0xDD,0x4D,0x7E,
        -:  501:	  0xBB,
        -:  502:	  0x00,0x93,0x8c,0xf9,0x35,0x31,0x8f,0xdc,0xed,0x6b,	/* y */
        -:  503:	  0xc2,0x82,0x86,0x53,0x17,0x33,0xc3,0xf0,0x3c,0x4f,
        -:  504:	  0xee,
        -:  505:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  506:	  0x01,0xB8,0xFA,0x16,0xDF,0xAB,0x9A,0xCA,0x16,0xB6,
        -:  507:	  0xB3 }
        -:  508:	};
        -:  509:
        -:  510:static const struct { EC_CURVE_DATA h; unsigned char data[20+21*6]; }
        -:  511:	_EC_SECG_PRIME_160R1 = {
        -:  512:	{ NID_X9_62_prime_field,20,21,1 },
        -:  513:	{ 0x10,0x53,0xCD,0xE4,0x2C,0x14,0xD6,0x96,0xE6,0x76,	/* seed */
        -:  514:	  0x87,0x56,0x15,0x17,0x53,0x3B,0xF3,0xF8,0x33,0x45,
        -:  515:
        -:  516:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  517:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,
        -:  518:	  0xFF,
        -:  519:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  520:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,
        -:  521:	  0xFC,
        -:  522:	  0x00,0x1C,0x97,0xBE,0xFC,0x54,0xBD,0x7A,0x8B,0x65,	/* b */
        -:  523:	  0xAC,0xF8,0x9F,0x81,0xD4,0xD4,0xAD,0xC5,0x65,0xFA,
        -:  524:	  0x45,
        -:  525:	  0x00,0x4A,0x96,0xB5,0x68,0x8E,0xF5,0x73,0x28,0x46,	/* x */
        -:  526:	  0x64,0x69,0x89,0x68,0xC3,0x8B,0xB9,0x13,0xCB,0xFC,
        -:  527:	  0x82,
        -:  528:	  0x00,0x23,0xa6,0x28,0x55,0x31,0x68,0x94,0x7d,0x59,	/* y */
        -:  529:	  0xdc,0xc9,0x12,0x04,0x23,0x51,0x37,0x7a,0xc5,0xfb,
        -:  530:	  0x32,
        -:  531:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  532:	  0x01,0xF4,0xC8,0xF9,0x27,0xAE,0xD3,0xCA,0x75,0x22,
        -:  533:	  0x57 }
        -:  534:	};
        -:  535:
        -:  536:static const struct { EC_CURVE_DATA h; unsigned char data[20+21*6]; }
        -:  537:	_EC_SECG_PRIME_160R2 = {
        -:  538:	{ NID_X9_62_prime_field,20,21,1 },
        -:  539:	{ 0xB9,0x9B,0x99,0xB0,0x99,0xB3,0x23,0xE0,0x27,0x09,	/* seed */
        -:  540:	  0xA4,0xD6,0x96,0xE6,0x76,0x87,0x56,0x15,0x17,0x51,
        -:  541:
        -:  542:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  543:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xAC,
        -:  544:	  0x73,
        -:  545:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  546:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xAC,
        -:  547:	  0x70,
        -:  548:	  0x00,0xB4,0xE1,0x34,0xD3,0xFB,0x59,0xEB,0x8B,0xAB,	/* b */
        -:  549:	  0x57,0x27,0x49,0x04,0x66,0x4D,0x5A,0xF5,0x03,0x88,
        -:  550:	  0xBA,
        -:  551:	  0x00,0x52,0xDC,0xB0,0x34,0x29,0x3A,0x11,0x7E,0x1F,	/* x */
        -:  552:	  0x4F,0xF1,0x1B,0x30,0xF7,0x19,0x9D,0x31,0x44,0xCE,
        -:  553:	  0x6D,
        -:  554:	  0x00,0xfe,0xaf,0xfe,0xf2,0xe3,0x31,0xf2,0x96,0xe0,	/* y */
        -:  555:	  0x71,0xfa,0x0d,0xf9,0x98,0x2c,0xfe,0xa7,0xd4,0x3f,
        -:  556:	  0x2e,
        -:  557:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  558:	  0x00,0x35,0x1E,0xE7,0x86,0xA8,0x18,0xF3,0xA1,0xA1,
        -:  559:	  0x6B }
        -:  560:	};
        -:  561:
        -:  562:static const struct { EC_CURVE_DATA h; unsigned char data[0+24*6]; }
        -:  563:	_EC_SECG_PRIME_192K1 = {
        -:  564:	{ NID_X9_62_prime_field,0,24,1 },
        -:  565:	{							/* no seed */
        -:  566:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  567:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,
        -:  568:	  0xFF,0xFF,0xEE,0x37,
        -:  569:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  570:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  571:	  0x00,0x00,0x00,0x00,
        -:  572:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  573:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  574:	  0x00,0x00,0x00,0x03,
        -:  575:	  0xDB,0x4F,0xF1,0x0E,0xC0,0x57,0xE9,0xAE,0x26,0xB0,	/* x */
        -:  576:	  0x7D,0x02,0x80,0xB7,0xF4,0x34,0x1D,0xA5,0xD1,0xB1,
        -:  577:	  0xEA,0xE0,0x6C,0x7D,
        -:  578:	  0x9b,0x2f,0x2f,0x6d,0x9c,0x56,0x28,0xa7,0x84,0x41,	/* y */
        -:  579:	  0x63,0xd0,0x15,0xbe,0x86,0x34,0x40,0x82,0xaa,0x88,
        -:  580:	  0xd9,0x5e,0x2f,0x9d,
        -:  581:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  582:	  0xFF,0xFE,0x26,0xF2,0xFC,0x17,0x0F,0x69,0x46,0x6A,
        -:  583:	  0x74,0xDE,0xFD,0x8D }
        -:  584:	};
        -:  585:
        -:  586:static const struct { EC_CURVE_DATA h; unsigned char data[0+29*6]; }
        -:  587:	_EC_SECG_PRIME_224K1 = {
        -:  588:	{ NID_X9_62_prime_field,0,29,1 },
        -:  589:	{							/* no seed */
        -:  590:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  591:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  592:	  0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xE5,0x6D,
        -:  593:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  594:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  595:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  596:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  597:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  598:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,
        -:  599:	  0x00,0xA1,0x45,0x5B,0x33,0x4D,0xF0,0x99,0xDF,0x30,	/* x */
        -:  600:	  0xFC,0x28,0xA1,0x69,0xA4,0x67,0xE9,0xE4,0x70,0x75,
        -:  601:	  0xA9,0x0F,0x7E,0x65,0x0E,0xB6,0xB7,0xA4,0x5C,
        -:  602:	  0x00,0x7e,0x08,0x9f,0xed,0x7f,0xba,0x34,0x42,0x82,	/* y */
        -:  603:	  0xca,0xfb,0xd6,0xf7,0xe3,0x19,0xf7,0xc0,0xb0,0xbd,
        -:  604:	  0x59,0xe2,0xca,0x4b,0xdb,0x55,0x6d,0x61,0xa5,
        -:  605:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  606:	  0x00,0x00,0x00,0x00,0x01,0xDC,0xE8,0xD2,0xEC,0x61,
        -:  607:	  0x84,0xCA,0xF0,0xA9,0x71,0x76,0x9F,0xB1,0xF7 }
        -:  608:	};
        -:  609:
        -:  610:static const struct { EC_CURVE_DATA h; unsigned char data[0+32*6]; }
        -:  611:	_EC_SECG_PRIME_256K1 = {
        -:  612:	{ NID_X9_62_prime_field,0,32,1 },
        -:  613:	{							/* no seed */
        -:  614:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  615:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -:  616:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,
        -:  617:	  0xFC,0x2F,
        -:  618:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  619:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  620:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  621:	  0x00,0x00,
        -:  622:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  623:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  624:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  625:	  0x00,0x07,
        -:  626:	  0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,	/* x */
        -:  627:	  0x62,0x95,0xCE,0x87,0x0B,0x07,0x02,0x9B,0xFC,0xDB,
        -:  628:	  0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,
        -:  629:	  0x17,0x98,
        -:  630:	  0x48,0x3a,0xda,0x77,0x26,0xa3,0xc4,0x65,0x5d,0xa4,	/* y */
        -:  631:	  0xfb,0xfc,0x0e,0x11,0x08,0xa8,0xfd,0x17,0xb4,0x48,
        -:  632:	  0xa6,0x85,0x54,0x19,0x9c,0x47,0xd0,0x8f,0xfb,0x10,
        -:  633:	  0xd4,0xb8,
        -:  634:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  635:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,
        -:  636:	  0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,0x8C,0xD0,0x36,
        -:  637:	  0x41,0x41 }
        -:  638:	};
        -:  639:
        -:  640:/* some wap/wtls curves */
        -:  641:static const struct { EC_CURVE_DATA h; unsigned char data[0+15*6]; }
        -:  642:	_EC_WTLS_8 = {
        -:  643:	{ NID_X9_62_prime_field,0,15,1 },
        -:  644:	{							/* no seed */
        -:  645:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  646:	  0xFF,0xFF,0xFF,0xFD,0xE7,
        -:  647:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  648:	  0x00,0x00,0x00,0x00,0x00,
        -:  649:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  650:	  0x00,0x00,0x00,0x00,0x03,
        -:  651:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* x */
        -:  652:	  0x00,0x00,0x00,0x00,0x01,
        -:  653:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* y */
        -:  654:	  0x00,0x00,0x00,0x00,0x02,
        -:  655:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xEC,0xEA,	/* order */
        -:  656:	  0x55,0x1A,0xD8,0x37,0xE9 }
        -:  657:	};
        -:  658:
        -:  659:static const struct { EC_CURVE_DATA h; unsigned char data[0+21*6]; }
        -:  660:	_EC_WTLS_9 = {
        -:  661:	{ NID_X9_62_prime_field,0,21,1 },
        -:  662:	{							/* no seed */
        -:  663:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  664:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x80,
        -:  665:	  0x8F,
        -:  666:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  667:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  668:	  0x00,
        -:  669:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  670:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  671:	  0x03,
        -:  672:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* x */
        -:  673:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  674:	  0x01,
        -:  675:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* y */
        -:  676:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  677:	  0x02,
        -:  678:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  679:	  0x01,0xCD,0xC9,0x8A,0xE0,0xE2,0xDE,0x57,0x4A,0xBF,
        -:  680:	  0x33 }
        -:  681:	};
        -:  682:
        -:  683:static const struct { EC_CURVE_DATA h; unsigned char data[0+28*6]; }
        -:  684:	_EC_WTLS_12 = {
        -:  685:	{ NID_X9_62_prime_field,0,28,1 },
        -:  686:	{							/* no seed */
        -:  687:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* p */
        -:  688:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
        -:  689:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  690:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* a */
        -:  691:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,
        -:  692:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,
        -:  693:	  0xB4,0x05,0x0A,0x85,0x0C,0x04,0xB3,0xAB,0xF5,0x41,	/* b */
        -:  694:	  0x32,0x56,0x50,0x44,0xB0,0xB7,0xD7,0xBF,0xD8,0xBA,
        -:  695:	  0x27,0x0B,0x39,0x43,0x23,0x55,0xFF,0xB4,
        -:  696:	  0xB7,0x0E,0x0C,0xBD,0x6B,0xB4,0xBF,0x7F,0x32,0x13,	/* x */
        -:  697:	  0x90,0xB9,0x4A,0x03,0xC1,0xD3,0x56,0xC2,0x11,0x22,
        -:  698:	  0x34,0x32,0x80,0xD6,0x11,0x5C,0x1D,0x21,
        -:  699:	  0xbd,0x37,0x63,0x88,0xb5,0xf7,0x23,0xfb,0x4c,0x22,	/* y */
        -:  700:	  0xdf,0xe6,0xcd,0x43,0x75,0xa0,0x5a,0x07,0x47,0x64,
        -:  701:	  0x44,0xd5,0x81,0x99,0x85,0x00,0x7e,0x34,
        -:  702:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  703:	  0xFF,0xFF,0xFF,0xFF,0x16,0xA2,0xE0,0xB8,0xF0,0x3E,
        -:  704:	  0x13,0xDD,0x29,0x45,0x5C,0x5C,0x2A,0x3D }
        -:  705:	};
        -:  706:
        -:  707:#ifndef OPENSSL_NO_EC2M
        -:  708:
        -:  709:/* characteristic two curves */
        -:  710:static const struct { EC_CURVE_DATA h; unsigned char data[20+15*6]; }
        -:  711:	_EC_SECG_CHAR2_113R1 = {
        -:  712:	{ NID_X9_62_characteristic_two_field,20,15,2 },
        -:  713:	{ 0x10,0xE7,0x23,0xAB,0x14,0xD6,0x96,0xE6,0x76,0x87,	/* seed */
        -:  714:	  0x56,0x15,0x17,0x56,0xFE,0xBF,0x8F,0xCB,0x49,0xA9,
        -:  715:
        -:  716:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  717:	  0x00,0x00,0x00,0x02,0x01,
        -:  718:	  0x00,0x30,0x88,0x25,0x0C,0xA6,0xE7,0xC7,0xFE,0x64,	/* a */
        -:  719:	  0x9C,0xE8,0x58,0x20,0xF7,
        -:  720:	  0x00,0xE8,0xBE,0xE4,0xD3,0xE2,0x26,0x07,0x44,0x18,	/* b */
        -:  721:	  0x8B,0xE0,0xE9,0xC7,0x23,
        -:  722:	  0x00,0x9D,0x73,0x61,0x6F,0x35,0xF4,0xAB,0x14,0x07,	/* x */
        -:  723:	  0xD7,0x35,0x62,0xC1,0x0F,
        -:  724:	  0x00,0xA5,0x28,0x30,0x27,0x79,0x58,0xEE,0x84,0xD1,	/* y */
        -:  725:	  0x31,0x5E,0xD3,0x18,0x86,
        -:  726:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD9,0xCC,	/* order */
        -:  727:	  0xEC,0x8A,0x39,0xE5,0x6F }
        -:  728:	};
        -:  729:
        -:  730:static const struct { EC_CURVE_DATA h; unsigned char data[20+15*6]; }
        -:  731:	_EC_SECG_CHAR2_113R2 = {
        -:  732:	{ NID_X9_62_characteristic_two_field,20,15,2 },
        -:  733:	{ 0x10,0xC0,0xFB,0x15,0x76,0x08,0x60,0xDE,0xF1,0xEE,	/* seed */
        -:  734:	  0xF4,0xD6,0x96,0xE6,0x76,0x87,0x56,0x15,0x17,0x5D,
        -:  735:
        -:  736:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  737:	  0x00,0x00,0x00,0x02,0x01,
        -:  738:	  0x00,0x68,0x99,0x18,0xDB,0xEC,0x7E,0x5A,0x0D,0xD6,	/* a */
        -:  739:	  0xDF,0xC0,0xAA,0x55,0xC7,
        -:  740:	  0x00,0x95,0xE9,0xA9,0xEC,0x9B,0x29,0x7B,0xD4,0xBF,	/* b */
        -:  741:	  0x36,0xE0,0x59,0x18,0x4F,
        -:  742:	  0x01,0xA5,0x7A,0x6A,0x7B,0x26,0xCA,0x5E,0xF5,0x2F,	/* x */
        -:  743:	  0xCD,0xB8,0x16,0x47,0x97,
        -:  744:	  0x00,0xB3,0xAD,0xC9,0x4E,0xD1,0xFE,0x67,0x4C,0x06,	/* y */
        -:  745:	  0xE6,0x95,0xBA,0xBA,0x1D,
        -:  746:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x08,0x78,	/* order */
        -:  747:	  0x9B,0x24,0x96,0xAF,0x93 }
        -:  748:	};
        -:  749:
        -:  750:static const struct { EC_CURVE_DATA h; unsigned char data[20+17*6]; }
        -:  751:	_EC_SECG_CHAR2_131R1 = {
        -:  752:	{ NID_X9_62_characteristic_two_field,20,17,2 },
        -:  753:	{ 0x4D,0x69,0x6E,0x67,0x68,0x75,0x61,0x51,0x75,0x98,	/* seed */
        -:  754:	  0x5B,0xD3,0xAD,0xBA,0xDA,0x21,0xB4,0x3A,0x97,0xE2,
        -:  755:
        -:  756:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  757:	  0x00,0x00,0x00,0x00,0x00,0x01,0x0D,
        -:  758:	  0x07,0xA1,0x1B,0x09,0xA7,0x6B,0x56,0x21,0x44,0x41,	/* a */
        -:  759:	  0x8F,0xF3,0xFF,0x8C,0x25,0x70,0xB8,
        -:  760:	  0x02,0x17,0xC0,0x56,0x10,0x88,0x4B,0x63,0xB9,0xC6,	/* b */
        -:  761:	  0xC7,0x29,0x16,0x78,0xF9,0xD3,0x41,
        -:  762:	  0x00,0x81,0xBA,0xF9,0x1F,0xDF,0x98,0x33,0xC4,0x0F,	/* x */
        -:  763:	  0x9C,0x18,0x13,0x43,0x63,0x83,0x99,
        -:  764:	  0x07,0x8C,0x6E,0x7E,0xA3,0x8C,0x00,0x1F,0x73,0xC8,	/* y */
        -:  765:	  0x13,0x4B,0x1B,0x4E,0xF9,0xE1,0x50,
        -:  766:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x31,	/* order */
        -:  767:	  0x23,0x95,0x3A,0x94,0x64,0xB5,0x4D }
        -:  768:	};
        -:  769:
        -:  770:static const struct { EC_CURVE_DATA h; unsigned char data[20+17*6]; }
        -:  771:	_EC_SECG_CHAR2_131R2 = {
        -:  772:	{ NID_X9_62_characteristic_two_field,20,17,2 },
        -:  773:	{ 0x98,0x5B,0xD3,0xAD,0xBA,0xD4,0xD6,0x96,0xE6,0x76,	/* seed */
        -:  774:	  0x87,0x56,0x15,0x17,0x5A,0x21,0xB4,0x3A,0x97,0xE3,
        -:  775:
        -:  776:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  777:	  0x00,0x00,0x00,0x00,0x00,0x01,0x0D,
        -:  778:	  0x03,0xE5,0xA8,0x89,0x19,0xD7,0xCA,0xFC,0xBF,0x41,	/* a */
        -:  779:	  0x5F,0x07,0xC2,0x17,0x65,0x73,0xB2,
        -:  780:	  0x04,0xB8,0x26,0x6A,0x46,0xC5,0x56,0x57,0xAC,0x73,	/* b */
        -:  781:	  0x4C,0xE3,0x8F,0x01,0x8F,0x21,0x92,
        -:  782:	  0x03,0x56,0xDC,0xD8,0xF2,0xF9,0x50,0x31,0xAD,0x65,	/* x */
        -:  783:	  0x2D,0x23,0x95,0x1B,0xB3,0x66,0xA8,
        -:  784:	  0x06,0x48,0xF0,0x6D,0x86,0x79,0x40,0xA5,0x36,0x6D,	/* y */
        -:  785:	  0x9E,0x26,0x5D,0xE9,0xEB,0x24,0x0F,
        -:  786:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x69,	/* order */
        -:  787:	  0x54,0xA2,0x33,0x04,0x9B,0xA9,0x8F }
        -:  788:	};
        -:  789:
        -:  790:static const struct { EC_CURVE_DATA h; unsigned char data[0+21*6]; }
        -:  791:	_EC_NIST_CHAR2_163K = {
        -:  792:	{ NID_X9_62_characteristic_two_field,0,21,2 },
        -:  793:	{							/* no seed */
        -:  794:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  795:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  796:	  0xC9,
        -:  797:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  798:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  799:	  0x01,
        -:  800:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  801:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  802:	  0x01,
        -:  803:	  0x02,0xFE,0x13,0xC0,0x53,0x7B,0xBC,0x11,0xAC,0xAA,	/* x */
        -:  804:	  0x07,0xD7,0x93,0xDE,0x4E,0x6D,0x5E,0x5C,0x94,0xEE,
        -:  805:	  0xE8,
        -:  806:	  0x02,0x89,0x07,0x0F,0xB0,0x5D,0x38,0xFF,0x58,0x32,	/* y */
        -:  807:	  0x1F,0x2E,0x80,0x05,0x36,0xD5,0x38,0xCC,0xDA,0xA3,
        -:  808:	  0xD9,
        -:  809:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  810:	  0x02,0x01,0x08,0xA2,0xE0,0xCC,0x0D,0x99,0xF8,0xA5,
        -:  811:	  0xEF }
        -:  812:	};
        -:  813:
        -:  814:static const struct { EC_CURVE_DATA h; unsigned char data[0+21*6]; }
        -:  815:	_EC_SECG_CHAR2_163R1 = {
        -:  816:	{ NID_X9_62_characteristic_two_field,0,21,2 },
        -:  817:	{							/* no seed */
        -:  818:#if 0
        -:  819:/* The algorithm used to derive the curve parameters from
        -:  820: * the seed used here is slightly different than the
        -:  821: * algorithm described in X9.62 . */
        -:  822:	  0x24,0xB7,0xB1,0x37,0xC8,0xA1,0x4D,0x69,0x6E,0x67,
        -:  823:	  0x68,0x75,0x61,0x51,0x75,0x6F,0xD0,0xDA,0x2E,0x5C,
        -:  824:#endif
        -:  825:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  826:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  827:	  0xC9,
        -:  828:	  0x07,0xB6,0x88,0x2C,0xAA,0xEF,0xA8,0x4F,0x95,0x54,	/* a */
        -:  829:	  0xFF,0x84,0x28,0xBD,0x88,0xE2,0x46,0xD2,0x78,0x2A,
        -:  830:	  0xE2,
        -:  831:	  0x07,0x13,0x61,0x2D,0xCD,0xDC,0xB4,0x0A,0xAB,0x94,	/* b */
        -:  832:	  0x6B,0xDA,0x29,0xCA,0x91,0xF7,0x3A,0xF9,0x58,0xAF,
        -:  833:	  0xD9,
        -:  834:	  0x03,0x69,0x97,0x96,0x97,0xAB,0x43,0x89,0x77,0x89,	/* x */
        -:  835:	  0x56,0x67,0x89,0x56,0x7F,0x78,0x7A,0x78,0x76,0xA6,
        -:  836:	  0x54,
        -:  837:	  0x00,0x43,0x5E,0xDB,0x42,0xEF,0xAF,0xB2,0x98,0x9D,	/* y */
        -:  838:	  0x51,0xFE,0xFC,0xE3,0xC8,0x09,0x88,0xF4,0x1F,0xF8,
        -:  839:	  0x83,
        -:  840:	  0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -:  841:	  0xFF,0x48,0xAA,0xB6,0x89,0xC2,0x9C,0xA7,0x10,0x27,
        -:  842:	  0x9B }
        -:  843:	};
        -:  844:
        -:  845:static const struct { EC_CURVE_DATA h; unsigned char data[0+21*6]; }
        -:  846:	_EC_NIST_CHAR2_163B = {
        -:  847:	{ NID_X9_62_characteristic_two_field,0,21,2 },
        -:  848:	{							/* no seed */
        -:  849:#if 0
        -:  850:/* The seed here was used to created the curve parameters in normal
        -:  851: * basis representation (and not the polynomial representation used here) */
        -:  852:	  0x85,0xE2,0x5B,0xFE,0x5C,0x86,0x22,0x6C,0xDB,0x12,
        -:  853:	  0x01,0x6F,0x75,0x53,0xF9,0xD0,0xE6,0x93,0xA2,0x68,
        -:  854:#endif
        -:  855:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  856:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  857:	  0xC9,
        -:  858:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  859:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  860:	  0x01,
        -:  861:	  0x02,0x0A,0x60,0x19,0x07,0xB8,0xC9,0x53,0xCA,0x14,	/* b */
        -:  862:	  0x81,0xEB,0x10,0x51,0x2F,0x78,0x74,0x4A,0x32,0x05,
        -:  863:	  0xFD,
        -:  864:	  0x03,0xF0,0xEB,0xA1,0x62,0x86,0xA2,0xD5,0x7E,0xA0,	/* x */
        -:  865:	  0x99,0x11,0x68,0xD4,0x99,0x46,0x37,0xE8,0x34,0x3E,
        -:  866:	  0x36,
        -:  867:	  0x00,0xD5,0x1F,0xBC,0x6C,0x71,0xA0,0x09,0x4F,0xA2,	/* y */
        -:  868:	  0xCD,0xD5,0x45,0xB1,0x1C,0x5C,0x0C,0x79,0x73,0x24,
        -:  869:	  0xF1,
        -:  870:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  871:	  0x02,0x92,0xFE,0x77,0xE7,0x0C,0x12,0xA4,0x23,0x4C,
        -:  872:	  0x33 }
        -:  873:	};
        -:  874:
        -:  875:static const struct { EC_CURVE_DATA h; unsigned char data[20+25*6]; }
        -:  876:	_EC_SECG_CHAR2_193R1 = {
        -:  877:	{ NID_X9_62_characteristic_two_field,20,25,2 },
        -:  878:	{ 0x10,0x3F,0xAE,0xC7,0x4D,0x69,0x6E,0x67,0x68,0x75,	/* seed */
        -:  879:	  0x61,0x51,0x75,0x77,0x7F,0xC5,0xB1,0x91,0xEF,0x30,
        -:  880:
        -:  881:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  882:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  883:	  0x00,0x00,0x00,0x80,0x01,
        -:  884:	  0x00,0x17,0x85,0x8F,0xEB,0x7A,0x98,0x97,0x51,0x69,	/* a */
        -:  885:	  0xE1,0x71,0xF7,0x7B,0x40,0x87,0xDE,0x09,0x8A,0xC8,
        -:  886:	  0xA9,0x11,0xDF,0x7B,0x01,
        -:  887:	  0x00,0xFD,0xFB,0x49,0xBF,0xE6,0xC3,0xA8,0x9F,0xAC,	/* b */
        -:  888:	  0xAD,0xAA,0x7A,0x1E,0x5B,0xBC,0x7C,0xC1,0xC2,0xE5,
        -:  889:	  0xD8,0x31,0x47,0x88,0x14,
        -:  890:	  0x01,0xF4,0x81,0xBC,0x5F,0x0F,0xF8,0x4A,0x74,0xAD,	/* x */
        -:  891:	  0x6C,0xDF,0x6F,0xDE,0xF4,0xBF,0x61,0x79,0x62,0x53,
        -:  892:	  0x72,0xD8,0xC0,0xC5,0xE1,
        -:  893:	  0x00,0x25,0xE3,0x99,0xF2,0x90,0x37,0x12,0xCC,0xF3,	/* y */
        -:  894:	  0xEA,0x9E,0x3A,0x1A,0xD1,0x7F,0xB0,0xB3,0x20,0x1B,
        -:  895:	  0x6A,0xF7,0xCE,0x1B,0x05,
        -:  896:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  897:	  0x00,0x00,0x00,0xC7,0xF3,0x4A,0x77,0x8F,0x44,0x3A,
        -:  898:	  0xCC,0x92,0x0E,0xBA,0x49 }
        -:  899:	};
        -:  900:
        -:  901:static const struct { EC_CURVE_DATA h; unsigned char data[20+25*6]; }
        -:  902:	_EC_SECG_CHAR2_193R2 = {
        -:  903:	{ NID_X9_62_characteristic_two_field,20,25,2 },
        -:  904:	{ 0x10,0xB7,0xB4,0xD6,0x96,0xE6,0x76,0x87,0x56,0x15,	/* seed */
        -:  905:	  0x17,0x51,0x37,0xC8,0xA1,0x6F,0xD0,0xDA,0x22,0x11,
        -:  906:
        -:  907:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  908:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  909:	  0x00,0x00,0x00,0x80,0x01,
        -:  910:	  0x01,0x63,0xF3,0x5A,0x51,0x37,0xC2,0xCE,0x3E,0xA6,	/* a */
        -:  911:	  0xED,0x86,0x67,0x19,0x0B,0x0B,0xC4,0x3E,0xCD,0x69,
        -:  912:	  0x97,0x77,0x02,0x70,0x9B,
        -:  913:	  0x00,0xC9,0xBB,0x9E,0x89,0x27,0xD4,0xD6,0x4C,0x37,	/* b */
        -:  914:	  0x7E,0x2A,0xB2,0x85,0x6A,0x5B,0x16,0xE3,0xEF,0xB7,
        -:  915:	  0xF6,0x1D,0x43,0x16,0xAE,
        -:  916:	  0x00,0xD9,0xB6,0x7D,0x19,0x2E,0x03,0x67,0xC8,0x03,	/* x */
        -:  917:	  0xF3,0x9E,0x1A,0x7E,0x82,0xCA,0x14,0xA6,0x51,0x35,
        -:  918:	  0x0A,0xAE,0x61,0x7E,0x8F,
        -:  919:	  0x01,0xCE,0x94,0x33,0x56,0x07,0xC3,0x04,0xAC,0x29,	/* y */
        -:  920:	  0xE7,0xDE,0xFB,0xD9,0xCA,0x01,0xF5,0x96,0xF9,0x27,
        -:  921:	  0x22,0x4C,0xDE,0xCF,0x6C,
        -:  922:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  923:	  0x00,0x00,0x01,0x5A,0xAB,0x56,0x1B,0x00,0x54,0x13,
        -:  924:	  0xCC,0xD4,0xEE,0x99,0xD5 }
        -:  925:	};
        -:  926:
        -:  927:static const struct { EC_CURVE_DATA h; unsigned char data[0+30*6]; }
        -:  928:	_EC_NIST_CHAR2_233K = {
        -:  929:	{ NID_X9_62_characteristic_two_field,0,30,4 },
        -:  930:	{							/* no seed */
        -:  931:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  932:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  933:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  934:
        -:  935:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  936:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  937:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  938:
        -:  939:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -:  940:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  941:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  942:
        -:  943:	  0x01,0x72,0x32,0xBA,0x85,0x3A,0x7E,0x73,0x1A,0xF1,	/* x */
        -:  944:	  0x29,0xF2,0x2F,0xF4,0x14,0x95,0x63,0xA4,0x19,0xC2,
        -:  945:	  0x6B,0xF5,0x0A,0x4C,0x9D,0x6E,0xEF,0xAD,0x61,0x26,
        -:  946:
        -:  947:	  0x01,0xDB,0x53,0x7D,0xEC,0xE8,0x19,0xB7,0xF7,0x0F,	/* y */
        -:  948:	  0x55,0x5A,0x67,0xC4,0x27,0xA8,0xCD,0x9B,0xF1,0x8A,
        -:  949:	  0xEB,0x9B,0x56,0xE0,0xC1,0x10,0x56,0xFA,0xE6,0xA3,
        -:  950:
        -:  951:	  0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  952:	  0x00,0x00,0x00,0x00,0x00,0x06,0x9D,0x5B,0xB9,0x15,
        -:  953:	  0xBC,0xD4,0x6E,0xFB,0x1A,0xD5,0xF1,0x73,0xAB,0xDF }
        -:  954:	};
        -:  955:
        -:  956:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -:  957:	_EC_NIST_CHAR2_233B = {
        -:  958:	{ NID_X9_62_characteristic_two_field,20,30,2 },
        -:  959:	{ 0x74,0xD5,0x9F,0xF0,0x7F,0x6B,0x41,0x3D,0x0E,0xA1,	/* seed */
        -:  960:	  0x4B,0x34,0x4B,0x20,0xA2,0xDB,0x04,0x9B,0x50,0xC3,
        -:  961:
        -:  962:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -:  963:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  964:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  965:
        -:  966:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  967:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  968:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  969:
        -:  970:	  0x00,0x66,0x64,0x7E,0xDE,0x6C,0x33,0x2C,0x7F,0x8C,	/* b */
        -:  971:	  0x09,0x23,0xBB,0x58,0x21,0x3B,0x33,0x3B,0x20,0xE9,
        -:  972:	  0xCE,0x42,0x81,0xFE,0x11,0x5F,0x7D,0x8F,0x90,0xAD,
        -:  973:
        -:  974:	  0x00,0xFA,0xC9,0xDF,0xCB,0xAC,0x83,0x13,0xBB,0x21,	/* x */
        -:  975:	  0x39,0xF1,0xBB,0x75,0x5F,0xEF,0x65,0xBC,0x39,0x1F,
        -:  976:	  0x8B,0x36,0xF8,0xF8,0xEB,0x73,0x71,0xFD,0x55,0x8B,
        -:  977:
        -:  978:	  0x01,0x00,0x6A,0x08,0xA4,0x19,0x03,0x35,0x06,0x78,	/* y */
        -:  979:	  0xE5,0x85,0x28,0xBE,0xBF,0x8A,0x0B,0xEF,0xF8,0x67,
        -:  980:	  0xA7,0xCA,0x36,0x71,0x6F,0x7E,0x01,0xF8,0x10,0x52,
        -:  981:
        -:  982:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -:  983:	  0x00,0x00,0x00,0x00,0x00,0x13,0xE9,0x74,0xE7,0x2F,
        -:  984:	  0x8A,0x69,0x22,0x03,0x1D,0x26,0x03,0xCF,0xE0,0xD7 }
        -:  985:	};
        -:  986:
        -:  987:static const struct { EC_CURVE_DATA h; unsigned char data[0+30*6]; }
        -:  988:	_EC_SECG_CHAR2_239K1 = {
        -:  989:	{ NID_X9_62_characteristic_two_field,0,30,4 },
        -:  990:	{							/* no seed */
        -:  991:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  992:	  0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  993:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -:  994:
        -:  995:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -:  996:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  997:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -:  998:
        -:  999:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1000:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1001:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1002:
        -: 1003:	  0x29,0xA0,0xB6,0xA8,0x87,0xA9,0x83,0xE9,0x73,0x09,	/* x */
        -: 1004:	  0x88,0xA6,0x87,0x27,0xA8,0xB2,0xD1,0x26,0xC4,0x4C,
        -: 1005:	  0xC2,0xCC,0x7B,0x2A,0x65,0x55,0x19,0x30,0x35,0xDC,
        -: 1006:
        -: 1007:	  0x76,0x31,0x08,0x04,0xF1,0x2E,0x54,0x9B,0xDB,0x01,	/* y */
        -: 1008:	  0x1C,0x10,0x30,0x89,0xE7,0x35,0x10,0xAC,0xB2,0x75,
        -: 1009:	  0xFC,0x31,0x2A,0x5D,0xC6,0xB7,0x65,0x53,0xF0,0xCA,
        -: 1010:
        -: 1011:	  0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1012:	  0x00,0x00,0x00,0x00,0x00,0x5A,0x79,0xFE,0xC6,0x7C,
        -: 1013:	  0xB6,0xE9,0x1F,0x1C,0x1D,0xA8,0x00,0xE4,0x78,0xA5 }
        -: 1014:	};
        -: 1015:
        -: 1016:static const struct { EC_CURVE_DATA h; unsigned char data[0+36*6]; }
        -: 1017:	_EC_NIST_CHAR2_283K = {
        -: 1018:	{ NID_X9_62_characteristic_two_field,0,36,4 },
        -: 1019:	{							/* no seed */
        -: 1020:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1021:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1022:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1023:	  0x00,0x00,0x00,0x00,0x10,0xA1,
        -: 1024:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1025:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1026:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1027:	  0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1028:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1029:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1030:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1031:	  0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1032:	  0x05,0x03,0x21,0x3F,0x78,0xCA,0x44,0x88,0x3F,0x1A,	/* x */
        -: 1033:	  0x3B,0x81,0x62,0xF1,0x88,0xE5,0x53,0xCD,0x26,0x5F,
        -: 1034:	  0x23,0xC1,0x56,0x7A,0x16,0x87,0x69,0x13,0xB0,0xC2,
        -: 1035:	  0xAC,0x24,0x58,0x49,0x28,0x36,
        -: 1036:	  0x01,0xCC,0xDA,0x38,0x0F,0x1C,0x9E,0x31,0x8D,0x90,	/* y */
        -: 1037:	  0xF9,0x5D,0x07,0xE5,0x42,0x6F,0xE8,0x7E,0x45,0xC0,
        -: 1038:	  0xE8,0x18,0x46,0x98,0xE4,0x59,0x62,0x36,0x4E,0x34,
        -: 1039:	  0x11,0x61,0x77,0xDD,0x22,0x59,
        -: 1040:	  0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1041:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE9,0xAE,
        -: 1042:	  0x2E,0xD0,0x75,0x77,0x26,0x5D,0xFF,0x7F,0x94,0x45,
        -: 1043:	  0x1E,0x06,0x1E,0x16,0x3C,0x61 }
        -: 1044:	};
        -: 1045:
        -: 1046:static const struct { EC_CURVE_DATA h; unsigned char data[20+36*6]; }
        -: 1047:	_EC_NIST_CHAR2_283B = {
        -: 1048:	{ NID_X9_62_characteristic_two_field,20,36,2 },
        -: 1049:	{ 0x77,0xE2,0xB0,0x73,0x70,0xEB,0x0F,0x83,0x2A,0x6D,	/* no seed */
        -: 1050:	  0xD5,0xB6,0x2D,0xFC,0x88,0xCD,0x06,0xBB,0x84,0xBE,
        -: 1051:
        -: 1052:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1053:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1054:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1055:	  0x00,0x00,0x00,0x00,0x10,0xA1,
        -: 1056:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1057:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1058:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1059:	  0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1060:	  0x02,0x7B,0x68,0x0A,0xC8,0xB8,0x59,0x6D,0xA5,0xA4,	/* b */
        -: 1061:	  0xAF,0x8A,0x19,0xA0,0x30,0x3F,0xCA,0x97,0xFD,0x76,
        -: 1062:	  0x45,0x30,0x9F,0xA2,0xA5,0x81,0x48,0x5A,0xF6,0x26,
        -: 1063:	  0x3E,0x31,0x3B,0x79,0xA2,0xF5,
        -: 1064:	  0x05,0xF9,0x39,0x25,0x8D,0xB7,0xDD,0x90,0xE1,0x93,	/* x */
        -: 1065:	  0x4F,0x8C,0x70,0xB0,0xDF,0xEC,0x2E,0xED,0x25,0xB8,
        -: 1066:	  0x55,0x7E,0xAC,0x9C,0x80,0xE2,0xE1,0x98,0xF8,0xCD,
        -: 1067:	  0xBE,0xCD,0x86,0xB1,0x20,0x53,
        -: 1068:	  0x03,0x67,0x68,0x54,0xFE,0x24,0x14,0x1C,0xB9,0x8F,	/* y */
        -: 1069:	  0xE6,0xD4,0xB2,0x0D,0x02,0xB4,0x51,0x6F,0xF7,0x02,
        -: 1070:	  0x35,0x0E,0xDD,0xB0,0x82,0x67,0x79,0xC8,0x13,0xF0,
        -: 1071:	  0xDF,0x45,0xBE,0x81,0x12,0xF4,
        -: 1072:	  0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1073:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0x90,
        -: 1074:	  0x39,0x96,0x60,0xFC,0x93,0x8A,0x90,0x16,0x5B,0x04,
        -: 1075:	  0x2A,0x7C,0xEF,0xAD,0xB3,0x07 }
        -: 1076:	};
        -: 1077:
        -: 1078:static const struct { EC_CURVE_DATA h; unsigned char data[0+52*6]; }
        -: 1079:	_EC_NIST_CHAR2_409K = {
        -: 1080:	{ NID_X9_62_characteristic_two_field,0,52,4 },
        -: 1081:	{							/* no seed */
        -: 1082:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1083:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1084:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1085:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1086:	  0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1087:	  0x00,0x01,
        -: 1088:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1089:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1090:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1091:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1092:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1093:	  0x00,0x00,
        -: 1094:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1095:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1096:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1097:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1098:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1099:	  0x00,0x01,
        -: 1100:	  0x00,0x60,0xF0,0x5F,0x65,0x8F,0x49,0xC1,0xAD,0x3A,	/* x */
        -: 1101:	  0xB1,0x89,0x0F,0x71,0x84,0x21,0x0E,0xFD,0x09,0x87,
        -: 1102:	  0xE3,0x07,0xC8,0x4C,0x27,0xAC,0xCF,0xB8,0xF9,0xF6,
        -: 1103:	  0x7C,0xC2,0xC4,0x60,0x18,0x9E,0xB5,0xAA,0xAA,0x62,
        -: 1104:	  0xEE,0x22,0x2E,0xB1,0xB3,0x55,0x40,0xCF,0xE9,0x02,
        -: 1105:	  0x37,0x46,
        -: 1106:	  0x01,0xE3,0x69,0x05,0x0B,0x7C,0x4E,0x42,0xAC,0xBA,	/* y */
        -: 1107:	  0x1D,0xAC,0xBF,0x04,0x29,0x9C,0x34,0x60,0x78,0x2F,
        -: 1108:	  0x91,0x8E,0xA4,0x27,0xE6,0x32,0x51,0x65,0xE9,0xEA,
        -: 1109:	  0x10,0xE3,0xDA,0x5F,0x6C,0x42,0xE9,0xC5,0x52,0x15,
        -: 1110:	  0xAA,0x9C,0xA2,0x7A,0x58,0x63,0xEC,0x48,0xD8,0xE0,
        -: 1111:	  0x28,0x6B,
        -: 1112:	  0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1113:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -: 1114:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x5F,0x83,0xB2,
        -: 1115:	  0xD4,0xEA,0x20,0x40,0x0E,0xC4,0x55,0x7D,0x5E,0xD3,
        -: 1116:	  0xE3,0xE7,0xCA,0x5B,0x4B,0x5C,0x83,0xB8,0xE0,0x1E,
        -: 1117:	  0x5F,0xCF }
        -: 1118:	};
        -: 1119:
        -: 1120:static const struct { EC_CURVE_DATA h; unsigned char data[20+52*6]; }
        -: 1121:	_EC_NIST_CHAR2_409B = {
        -: 1122:	{ NID_X9_62_characteristic_two_field,20,52,2 },
        -: 1123:	{ 0x40,0x99,0xB5,0xA4,0x57,0xF9,0xD6,0x9F,0x79,0x21,	/* seed */
        -: 1124:	  0x3D,0x09,0x4C,0x4B,0xCD,0x4D,0x42,0x62,0x21,0x0B,
        -: 1125:
        -: 1126:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1127:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1128:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1129:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1130:	  0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1131:	  0x00,0x01,
        -: 1132:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1133:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1134:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1135:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1136:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1137:	  0x00,0x01,
        -: 1138:	  0x00,0x21,0xA5,0xC2,0xC8,0xEE,0x9F,0xEB,0x5C,0x4B,	/* b */
        -: 1139:	  0x9A,0x75,0x3B,0x7B,0x47,0x6B,0x7F,0xD6,0x42,0x2E,
        -: 1140:	  0xF1,0xF3,0xDD,0x67,0x47,0x61,0xFA,0x99,0xD6,0xAC,
        -: 1141:	  0x27,0xC8,0xA9,0xA1,0x97,0xB2,0x72,0x82,0x2F,0x6C,
        -: 1142:	  0xD5,0x7A,0x55,0xAA,0x4F,0x50,0xAE,0x31,0x7B,0x13,
        -: 1143:	  0x54,0x5F,
        -: 1144:	  0x01,0x5D,0x48,0x60,0xD0,0x88,0xDD,0xB3,0x49,0x6B,	/* x */
        -: 1145:	  0x0C,0x60,0x64,0x75,0x62,0x60,0x44,0x1C,0xDE,0x4A,
        -: 1146:	  0xF1,0x77,0x1D,0x4D,0xB0,0x1F,0xFE,0x5B,0x34,0xE5,
        -: 1147:	  0x97,0x03,0xDC,0x25,0x5A,0x86,0x8A,0x11,0x80,0x51,
        -: 1148:	  0x56,0x03,0xAE,0xAB,0x60,0x79,0x4E,0x54,0xBB,0x79,
        -: 1149:	  0x96,0xA7,
        -: 1150:	  0x00,0x61,0xB1,0xCF,0xAB,0x6B,0xE5,0xF3,0x2B,0xBF,	/* y */
        -: 1151:	  0xA7,0x83,0x24,0xED,0x10,0x6A,0x76,0x36,0xB9,0xC5,
        -: 1152:	  0xA7,0xBD,0x19,0x8D,0x01,0x58,0xAA,0x4F,0x54,0x88,
        -: 1153:	  0xD0,0x8F,0x38,0x51,0x4F,0x1F,0xDF,0x4B,0x4F,0x40,
        -: 1154:	  0xD2,0x18,0x1B,0x36,0x81,0xC3,0x64,0xBA,0x02,0x73,
        -: 1155:	  0xC7,0x06,
        -: 1156:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1157:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1158:	  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xE2,0xAA,0xD6,
        -: 1159:	  0xA6,0x12,0xF3,0x33,0x07,0xBE,0x5F,0xA4,0x7C,0x3C,
        -: 1160:	  0x9E,0x05,0x2F,0x83,0x81,0x64,0xCD,0x37,0xD9,0xA2,
        -: 1161:	  0x11,0x73 }
        -: 1162:	};
        -: 1163:
        -: 1164:static const struct { EC_CURVE_DATA h; unsigned char data[0+72*6]; }
        -: 1165:	_EC_NIST_CHAR2_571K = {
        -: 1166:	{ NID_X9_62_characteristic_two_field,0,72,4 },
        -: 1167:	{							/* no seed */
        -: 1168:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1169:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1170:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1171:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1172:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1173:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1174:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1175:	  0x04,0x25,
        -: 1176:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1177:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1178:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1179:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1180:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1181:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1182:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1183:	  0x00,0x00,
        -: 1184:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1185:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1186:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1187:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1188:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1189:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1190:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1191:	  0x00,0x01,
        -: 1192:	  0x02,0x6E,0xB7,0xA8,0x59,0x92,0x3F,0xBC,0x82,0x18,	/* x */
        -: 1193:	  0x96,0x31,0xF8,0x10,0x3F,0xE4,0xAC,0x9C,0xA2,0x97,
        -: 1194:	  0x00,0x12,0xD5,0xD4,0x60,0x24,0x80,0x48,0x01,0x84,
        -: 1195:	  0x1C,0xA4,0x43,0x70,0x95,0x84,0x93,0xB2,0x05,0xE6,
        -: 1196:	  0x47,0xDA,0x30,0x4D,0xB4,0xCE,0xB0,0x8C,0xBB,0xD1,
        -: 1197:	  0xBA,0x39,0x49,0x47,0x76,0xFB,0x98,0x8B,0x47,0x17,
        -: 1198:	  0x4D,0xCA,0x88,0xC7,0xE2,0x94,0x52,0x83,0xA0,0x1C,
        -: 1199:	  0x89,0x72,
        -: 1200:	  0x03,0x49,0xDC,0x80,0x7F,0x4F,0xBF,0x37,0x4F,0x4A,	/* y */
        -: 1201:	  0xEA,0xDE,0x3B,0xCA,0x95,0x31,0x4D,0xD5,0x8C,0xEC,
        -: 1202:	  0x9F,0x30,0x7A,0x54,0xFF,0xC6,0x1E,0xFC,0x00,0x6D,
        -: 1203:	  0x8A,0x2C,0x9D,0x49,0x79,0xC0,0xAC,0x44,0xAE,0xA7,
        -: 1204:	  0x4F,0xBE,0xBB,0xB9,0xF7,0x72,0xAE,0xDC,0xB6,0x20,
        -: 1205:	  0xB0,0x1A,0x7B,0xA7,0xAF,0x1B,0x32,0x04,0x30,0xC8,
        -: 1206:	  0x59,0x19,0x84,0xF6,0x01,0xCD,0x4C,0x14,0x3E,0xF1,
        -: 1207:	  0xC7,0xA3,
        -: 1208:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1209:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1210:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1211:	  0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x18,0x50,0xE1,
        -: 1212:	  0xF1,0x9A,0x63,0xE4,0xB3,0x91,0xA8,0xDB,0x91,0x7F,
        -: 1213:	  0x41,0x38,0xB6,0x30,0xD8,0x4B,0xE5,0xD6,0x39,0x38,
        -: 1214:	  0x1E,0x91,0xDE,0xB4,0x5C,0xFE,0x77,0x8F,0x63,0x7C,
        -: 1215:	  0x10,0x01 }
        -: 1216:	};
        -: 1217:
        -: 1218:static const struct { EC_CURVE_DATA h; unsigned char data[20+72*6]; }
        -: 1219:	_EC_NIST_CHAR2_571B = {
        -: 1220:	{ NID_X9_62_characteristic_two_field,20,72,2 },
        -: 1221:	{ 0x2A,0xA0,0x58,0xF7,0x3A,0x0E,0x33,0xAB,0x48,0x6B,	/* seed */
        -: 1222:	  0x0F,0x61,0x04,0x10,0xC5,0x3A,0x7F,0x13,0x23,0x10,
        -: 1223:
        -: 1224:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1225:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1226:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1227:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1228:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1229:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1230:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1231:	  0x04,0x25,
        -: 1232:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1233:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1234:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1235:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1236:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1237:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1238:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1239:	  0x00,0x01,
        -: 1240:	  0x02,0xF4,0x0E,0x7E,0x22,0x21,0xF2,0x95,0xDE,0x29,	/* b */
        -: 1241:	  0x71,0x17,0xB7,0xF3,0xD6,0x2F,0x5C,0x6A,0x97,0xFF,
        -: 1242:	  0xCB,0x8C,0xEF,0xF1,0xCD,0x6B,0xA8,0xCE,0x4A,0x9A,
        -: 1243:	  0x18,0xAD,0x84,0xFF,0xAB,0xBD,0x8E,0xFA,0x59,0x33,
        -: 1244:	  0x2B,0xE7,0xAD,0x67,0x56,0xA6,0x6E,0x29,0x4A,0xFD,
        -: 1245:	  0x18,0x5A,0x78,0xFF,0x12,0xAA,0x52,0x0E,0x4D,0xE7,
        -: 1246:	  0x39,0xBA,0xCA,0x0C,0x7F,0xFE,0xFF,0x7F,0x29,0x55,
        -: 1247:	  0x72,0x7A,
        -: 1248:	  0x03,0x03,0x00,0x1D,0x34,0xB8,0x56,0x29,0x6C,0x16,	/* x */
        -: 1249:	  0xC0,0xD4,0x0D,0x3C,0xD7,0x75,0x0A,0x93,0xD1,0xD2,
        -: 1250:	  0x95,0x5F,0xA8,0x0A,0xA5,0xF4,0x0F,0xC8,0xDB,0x7B,
        -: 1251:	  0x2A,0xBD,0xBD,0xE5,0x39,0x50,0xF4,0xC0,0xD2,0x93,
        -: 1252:	  0xCD,0xD7,0x11,0xA3,0x5B,0x67,0xFB,0x14,0x99,0xAE,
        -: 1253:	  0x60,0x03,0x86,0x14,0xF1,0x39,0x4A,0xBF,0xA3,0xB4,
        -: 1254:	  0xC8,0x50,0xD9,0x27,0xE1,0xE7,0x76,0x9C,0x8E,0xEC,
        -: 1255:	  0x2D,0x19,
        -: 1256:	  0x03,0x7B,0xF2,0x73,0x42,0xDA,0x63,0x9B,0x6D,0xCC,	/* y */
        -: 1257:	  0xFF,0xFE,0xB7,0x3D,0x69,0xD7,0x8C,0x6C,0x27,0xA6,
        -: 1258:	  0x00,0x9C,0xBB,0xCA,0x19,0x80,0xF8,0x53,0x39,0x21,
        -: 1259:	  0xE8,0xA6,0x84,0x42,0x3E,0x43,0xBA,0xB0,0x8A,0x57,
        -: 1260:	  0x62,0x91,0xAF,0x8F,0x46,0x1B,0xB2,0xA8,0xB3,0x53,
        -: 1261:	  0x1D,0x2F,0x04,0x85,0xC1,0x9B,0x16,0xE2,0xF1,0x51,
        -: 1262:	  0x6E,0x23,0xDD,0x3C,0x1A,0x48,0x27,0xAF,0x1B,0x8A,
        -: 1263:	  0xC1,0x5B,
        -: 1264:	  0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1265:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -: 1266:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        -: 1267:	  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE6,0x61,0xCE,0x18,
        -: 1268:	  0xFF,0x55,0x98,0x73,0x08,0x05,0x9B,0x18,0x68,0x23,
        -: 1269:	  0x85,0x1E,0xC7,0xDD,0x9C,0xA1,0x16,0x1D,0xE9,0x3D,
        -: 1270:	  0x51,0x74,0xD6,0x6E,0x83,0x82,0xE9,0xBB,0x2F,0xE8,
        -: 1271:	  0x4E,0x47 }
        -: 1272:	};
        -: 1273:
        -: 1274:static const struct { EC_CURVE_DATA h; unsigned char data[20+21*6]; }
        -: 1275:	_EC_X9_62_CHAR2_163V1 = {
        -: 1276:	{ NID_X9_62_characteristic_two_field,20,21,2 },
        -: 1277:	{ 0xD2,0xC0,0xFB,0x15,0x76,0x08,0x60,0xDE,0xF1,0xEE,
        -: 1278:	  0xF4,0xD6,0x96,0xE6,0x76,0x87,0x56,0x15,0x17,0x54,	/* seed */
        -: 1279:
        -: 1280:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1281:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1282:	  0x07,
        -: 1283:	  0x07,0x25,0x46,0xB5,0x43,0x52,0x34,0xA4,0x22,0xE0,	/* a */
        -: 1284:	  0x78,0x96,0x75,0xF4,0x32,0xC8,0x94,0x35,0xDE,0x52,
        -: 1285:	  0x42,
        -: 1286:	  0x00,0xC9,0x51,0x7D,0x06,0xD5,0x24,0x0D,0x3C,0xFF,	/* b */
        -: 1287:	  0x38,0xC7,0x4B,0x20,0xB6,0xCD,0x4D,0x6F,0x9D,0xD4,
        -: 1288:	  0xD9,
        -: 1289:	  0x07,0xAF,0x69,0x98,0x95,0x46,0x10,0x3D,0x79,0x32,	/* x */
        -: 1290:	  0x9F,0xCC,0x3D,0x74,0x88,0x0F,0x33,0xBB,0xE8,0x03,
        -: 1291:	  0xCB,
        -: 1292:	  0x01,0xEC,0x23,0x21,0x1B,0x59,0x66,0xAD,0xEA,0x1D,	/* y */
        -: 1293:	  0x3F,0x87,0xF7,0xEA,0x58,0x48,0xAE,0xF0,0xB7,0xCA,
        -: 1294:	  0x9F,
        -: 1295:	  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1296:	  0x01,0xE6,0x0F,0xC8,0x82,0x1C,0xC7,0x4D,0xAE,0xAF,
        -: 1297:	  0xC1 }
        -: 1298:	};
        -: 1299:
        -: 1300:static const struct { EC_CURVE_DATA h; unsigned char data[20+21*6]; }
        -: 1301:	_EC_X9_62_CHAR2_163V2 = {
        -: 1302:	{ NID_X9_62_characteristic_two_field,20,21,2 },
        -: 1303:	{ 0x53,0x81,0x4C,0x05,0x0D,0x44,0xD6,0x96,0xE6,0x76,	/* seed */
        -: 1304:	  0x87,0x56,0x15,0x17,0x58,0x0C,0xA4,0xE2,0x9F,0xFD,
        -: 1305:
        -: 1306:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1307:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1308:	  0x07,
        -: 1309:	  0x01,0x08,0xB3,0x9E,0x77,0xC4,0xB1,0x08,0xBE,0xD9,	/* a */
        -: 1310:	  0x81,0xED,0x0E,0x89,0x0E,0x11,0x7C,0x51,0x1C,0xF0,
        -: 1311:	  0x72,
        -: 1312:	  0x06,0x67,0xAC,0xEB,0x38,0xAF,0x4E,0x48,0x8C,0x40,	/* b */
        -: 1313:	  0x74,0x33,0xFF,0xAE,0x4F,0x1C,0x81,0x16,0x38,0xDF,
        -: 1314:	  0x20,
        -: 1315:	  0x00,0x24,0x26,0x6E,0x4E,0xB5,0x10,0x6D,0x0A,0x96,	/* x */
        -: 1316:	  0x4D,0x92,0xC4,0x86,0x0E,0x26,0x71,0xDB,0x9B,0x6C,
        -: 1317:	  0xC5,
        -: 1318:	  0x07,0x9F,0x68,0x4D,0xDF,0x66,0x84,0xC5,0xCD,0x25,	/* y */
        -: 1319:	  0x8B,0x38,0x90,0x02,0x1B,0x23,0x86,0xDF,0xD1,0x9F,
        -: 1320:	  0xC5,
        -: 1321:	  0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1322:	  0xFD,0xF6,0x4D,0xE1,0x15,0x1A,0xDB,0xB7,0x8F,0x10,
        -: 1323:	  0xA7 }
        -: 1324:	};
        -: 1325:
        -: 1326:static const struct { EC_CURVE_DATA h; unsigned char data[20+21*6]; }
        -: 1327:	_EC_X9_62_CHAR2_163V3 = {
        -: 1328:	{ NID_X9_62_characteristic_two_field,20,21,2 },
        -: 1329:	{ 0x50,0xCB,0xF1,0xD9,0x5C,0xA9,0x4D,0x69,0x6E,0x67,	/* seed */
        -: 1330:	  0x68,0x75,0x61,0x51,0x75,0xF1,0x6A,0x36,0xA3,0xB8,
        -: 1331:
        -: 1332:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1333:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1334:	  0x07,
        -: 1335:	  0x07,0xA5,0x26,0xC6,0x3D,0x3E,0x25,0xA2,0x56,0xA0,	/* a */
        -: 1336:	  0x07,0x69,0x9F,0x54,0x47,0xE3,0x2A,0xE4,0x56,0xB5,
        -: 1337:	  0x0E,
        -: 1338:	  0x03,0xF7,0x06,0x17,0x98,0xEB,0x99,0xE2,0x38,0xFD,	/* b */
        -: 1339:	  0x6F,0x1B,0xF9,0x5B,0x48,0xFE,0xEB,0x48,0x54,0x25,
        -: 1340:	  0x2B,
        -: 1341:	  0x02,0xF9,0xF8,0x7B,0x7C,0x57,0x4D,0x0B,0xDE,0xCF,	/* x */
        -: 1342:	  0x8A,0x22,0xE6,0x52,0x47,0x75,0xF9,0x8C,0xDE,0xBD,
        -: 1343:	  0xCB,
        -: 1344:	  0x05,0xB9,0x35,0x59,0x0C,0x15,0x5E,0x17,0xEA,0x48,	/* y */
        -: 1345:	  0xEB,0x3F,0xF3,0x71,0x8B,0x89,0x3D,0xF5,0x9A,0x05,
        -: 1346:	  0xD0,
        -: 1347:	  0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1348:	  0xFE,0x1A,0xEE,0x14,0x0F,0x11,0x0A,0xFF,0x96,0x13,
        -: 1349:	  0x09 }
        -: 1350:	};
        -: 1351:
        -: 1352:static const struct { EC_CURVE_DATA h; unsigned char data[0+23*6]; }
        -: 1353:	_EC_X9_62_CHAR2_176V1 = {
        -: 1354:	{ NID_X9_62_characteristic_two_field,0,23,0xFF6E },
        -: 1355:	{							/* no seed */
        -: 1356:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1357:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,
        -: 1358:	  0x00,0x00,0x07,
        -: 1359:	  0x00,0xE4,0xE6,0xDB,0x29,0x95,0x06,0x5C,0x40,0x7D,	/* a */
        -: 1360:	  0x9D,0x39,0xB8,0xD0,0x96,0x7B,0x96,0x70,0x4B,0xA8,
        -: 1361:	  0xE9,0xC9,0x0B,
        -: 1362:	  0x00,0x5D,0xDA,0x47,0x0A,0xBE,0x64,0x14,0xDE,0x8E,	/* b */
        -: 1363:	  0xC1,0x33,0xAE,0x28,0xE9,0xBB,0xD7,0xFC,0xEC,0x0A,
        -: 1364:	  0xE0,0xFF,0xF2,
        -: 1365:	  0x00,0x8D,0x16,0xC2,0x86,0x67,0x98,0xB6,0x00,0xF9,	/* x */
        -: 1366:	  0xF0,0x8B,0xB4,0xA8,0xE8,0x60,0xF3,0x29,0x8C,0xE0,
        -: 1367:	  0x4A,0x57,0x98,
        -: 1368:	  0x00,0x6F,0xA4,0x53,0x9C,0x2D,0xAD,0xDD,0xD6,0xBA,	/* y */
        -: 1369:	  0xB5,0x16,0x7D,0x61,0xB4,0x36,0xE1,0xD9,0x2B,0xB1,
        -: 1370:	  0x6A,0x56,0x2C,
        -: 1371:	  0x00,0x00,0x01,0x00,0x92,0x53,0x73,0x97,0xEC,0xA4,	/* order */
        -: 1372:	  0xF6,0x14,0x57,0x99,0xD6,0x2B,0x0A,0x19,0xCE,0x06,
        -: 1373:	  0xFE,0x26,0xAD }
        -: 1374:	};
        -: 1375:
        -: 1376:static const struct { EC_CURVE_DATA h; unsigned char data[20+24*6]; }
        -: 1377:	_EC_X9_62_CHAR2_191V1 = {
        -: 1378:	{ NID_X9_62_characteristic_two_field,20,24,2 },
        -: 1379:	{ 0x4E,0x13,0xCA,0x54,0x27,0x44,0xD6,0x96,0xE6,0x76,	/* seed */
        -: 1380:	  0x87,0x56,0x15,0x17,0x55,0x2F,0x27,0x9A,0x8C,0x84,
        -: 1381:
        -: 1382:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1383:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1384:	  0x00,0x00,0x02,0x01,
        -: 1385:	  0x28,0x66,0x53,0x7B,0x67,0x67,0x52,0x63,0x6A,0x68,	/* a */
        -: 1386:	  0xF5,0x65,0x54,0xE1,0x26,0x40,0x27,0x6B,0x64,0x9E,
        -: 1387:	  0xF7,0x52,0x62,0x67,
        -: 1388:	  0x2E,0x45,0xEF,0x57,0x1F,0x00,0x78,0x6F,0x67,0xB0,	/* b */
        -: 1389:	  0x08,0x1B,0x94,0x95,0xA3,0xD9,0x54,0x62,0xF5,0xDE,
        -: 1390:	  0x0A,0xA1,0x85,0xEC,
        -: 1391:	  0x36,0xB3,0xDA,0xF8,0xA2,0x32,0x06,0xF9,0xC4,0xF2,	/* x */
        -: 1392:	  0x99,0xD7,0xB2,0x1A,0x9C,0x36,0x91,0x37,0xF2,0xC8,
        -: 1393:	  0x4A,0xE1,0xAA,0x0D,
        -: 1394:	  0x76,0x5B,0xE7,0x34,0x33,0xB3,0xF9,0x5E,0x33,0x29,	/* y */
        -: 1395:	  0x32,0xE7,0x0E,0xA2,0x45,0xCA,0x24,0x18,0xEA,0x0E,
        -: 1396:	  0xF9,0x80,0x18,0xFB,
        -: 1397:	  0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1398:	  0x00,0x00,0x04,0xA2,0x0E,0x90,0xC3,0x90,0x67,0xC8,
        -: 1399:	  0x93,0xBB,0xB9,0xA5 }
        -: 1400:	};
        -: 1401:
        -: 1402:static const struct { EC_CURVE_DATA h; unsigned char data[20+24*6]; }
        -: 1403:	_EC_X9_62_CHAR2_191V2 = {
        -: 1404:	{ NID_X9_62_characteristic_two_field,20,24,4 },
        -: 1405:	{ 0x08,0x71,0xEF,0x2F,0xEF,0x24,0xD6,0x96,0xE6,0x76,	/* seed */
        -: 1406:	  0x87,0x56,0x15,0x17,0x58,0xBE,0xE0,0xD9,0x5C,0x15,
        -: 1407:
        -: 1408:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1409:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1410:	  0x00,0x00,0x02,0x01,
        -: 1411:	  0x40,0x10,0x28,0x77,0x4D,0x77,0x77,0xC7,0xB7,0x66,	/* a */
        -: 1412:	  0x6D,0x13,0x66,0xEA,0x43,0x20,0x71,0x27,0x4F,0x89,
        -: 1413:	  0xFF,0x01,0xE7,0x18,
        -: 1414:	  0x06,0x20,0x04,0x8D,0x28,0xBC,0xBD,0x03,0xB6,0x24,	/* b */
        -: 1415:	  0x9C,0x99,0x18,0x2B,0x7C,0x8C,0xD1,0x97,0x00,0xC3,
        -: 1416:	  0x62,0xC4,0x6A,0x01,
        -: 1417:	  0x38,0x09,0xB2,0xB7,0xCC,0x1B,0x28,0xCC,0x5A,0x87,	/* x */
        -: 1418:	  0x92,0x6A,0xAD,0x83,0xFD,0x28,0x78,0x9E,0x81,0xE2,
        -: 1419:	  0xC9,0xE3,0xBF,0x10,
        -: 1420:	  0x17,0x43,0x43,0x86,0x62,0x6D,0x14,0xF3,0xDB,0xF0,	/* y */
        -: 1421:	  0x17,0x60,0xD9,0x21,0x3A,0x3E,0x1C,0xF3,0x7A,0xEC,
        -: 1422:	  0x43,0x7D,0x66,0x8A,
        -: 1423:	  0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1424:	  0x00,0x00,0x50,0x50,0x8C,0xB8,0x9F,0x65,0x28,0x24,
        -: 1425:	  0xE0,0x6B,0x81,0x73 }
        -: 1426:	};
        -: 1427:
        -: 1428:static const struct { EC_CURVE_DATA h; unsigned char data[20+24*6]; }
        -: 1429:	_EC_X9_62_CHAR2_191V3 = {
        -: 1430:	{ NID_X9_62_characteristic_two_field,20,24,6 },
        -: 1431:	{ 0xE0,0x53,0x51,0x2D,0xC6,0x84,0xD6,0x96,0xE6,0x76,	/* seed */
        -: 1432:	  0x87,0x56,0x15,0x17,0x50,0x67,0xAE,0x78,0x6D,0x1F,
        -: 1433:
        -: 1434:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1435:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1436:	  0x00,0x00,0x02,0x01,
        -: 1437:	  0x6C,0x01,0x07,0x47,0x56,0x09,0x91,0x22,0x22,0x10,	/* a */
        -: 1438:	  0x56,0x91,0x1C,0x77,0xD7,0x7E,0x77,0xA7,0x77,0xE7,
        -: 1439:	  0xE7,0xE7,0x7F,0xCB,
        -: 1440:	  0x71,0xFE,0x1A,0xF9,0x26,0xCF,0x84,0x79,0x89,0xEF,	/* b */
        -: 1441:	  0xEF,0x8D,0xB4,0x59,0xF6,0x63,0x94,0xD9,0x0F,0x32,
        -: 1442:	  0xAD,0x3F,0x15,0xE8,
        -: 1443:	  0x37,0x5D,0x4C,0xE2,0x4F,0xDE,0x43,0x44,0x89,0xDE,	/* x */
        -: 1444:	  0x87,0x46,0xE7,0x17,0x86,0x01,0x50,0x09,0xE6,0x6E,
        -: 1445:	  0x38,0xA9,0x26,0xDD,
        -: 1446:	  0x54,0x5A,0x39,0x17,0x61,0x96,0x57,0x5D,0x98,0x59,	/* y */
        -: 1447:	  0x99,0x36,0x6E,0x6A,0xD3,0x4C,0xE0,0xA7,0x7C,0xD7,
        -: 1448:	  0x12,0x7B,0x06,0xBE,
        -: 1449:	  0x15,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,	/* order */
        -: 1450:	  0x55,0x55,0x61,0x0C,0x0B,0x19,0x68,0x12,0xBF,0xB6,
        -: 1451:	  0x28,0x8A,0x3E,0xA3 }
        -: 1452:	};
        -: 1453:
        -: 1454:static const struct { EC_CURVE_DATA h; unsigned char data[0+27*6]; }
        -: 1455:	_EC_X9_62_CHAR2_208W1 = {
        -: 1456:	{ NID_X9_62_characteristic_two_field,0,27,0xFE48 },
        -: 1457:	{							/* no seed */
        -: 1458:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1459:	  0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
        -: 1460:	  0x00,0x00,0x00,0x00,0x00,0x00,0x07,
        -: 1461:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1462:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1463:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1464:	  0x00,0xC8,0x61,0x9E,0xD4,0x5A,0x62,0xE6,0x21,0x2E,	/* b */
        -: 1465:	  0x11,0x60,0x34,0x9E,0x2B,0xFA,0x84,0x44,0x39,0xFA,
        -: 1466:	  0xFC,0x2A,0x3F,0xD1,0x63,0x8F,0x9E,
        -: 1467:	  0x00,0x89,0xFD,0xFB,0xE4,0xAB,0xE1,0x93,0xDF,0x95,	/* x */
        -: 1468:	  0x59,0xEC,0xF0,0x7A,0xC0,0xCE,0x78,0x55,0x4E,0x27,
        -: 1469:	  0x84,0xEB,0x8C,0x1E,0xD1,0xA5,0x7A,
        -: 1470:	  0x00,0x0F,0x55,0xB5,0x1A,0x06,0xE7,0x8E,0x9A,0xC3,	/* y */
        -: 1471:	  0x8A,0x03,0x5F,0xF5,0x20,0xD8,0xB0,0x17,0x81,0xBE,
        -: 1472:	  0xB1,0xA6,0xBB,0x08,0x61,0x7D,0xE3,
        -: 1473:	  0x00,0x00,0x01,0x01,0xBA,0xF9,0x5C,0x97,0x23,0xC5,	/* order */
        -: 1474:	  0x7B,0x6C,0x21,0xDA,0x2E,0xFF,0x2D,0x5E,0xD5,0x88,
        -: 1475:	  0xBD,0xD5,0x71,0x7E,0x21,0x2F,0x9D }
        -: 1476:	};
        -: 1477:
        -: 1478:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -: 1479:	_EC_X9_62_CHAR2_239V1 = {
        -: 1480:	{ NID_X9_62_characteristic_two_field,20,30,4 },
        -: 1481:	{ 0xD3,0x4B,0x9A,0x4D,0x69,0x6E,0x67,0x68,0x75,0x61,	/* seed */
        -: 1482:	  0x51,0x75,0xCA,0x71,0xB9,0x20,0xBF,0xEF,0xB0,0x5D,
        -: 1483:
        -: 1484:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1485:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1486:	  0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x01,
        -: 1487:
        -: 1488:	  0x32,0x01,0x08,0x57,0x07,0x7C,0x54,0x31,0x12,0x3A,	/* a */
        -: 1489:	  0x46,0xB8,0x08,0x90,0x67,0x56,0xF5,0x43,0x42,0x3E,
        -: 1490:	  0x8D,0x27,0x87,0x75,0x78,0x12,0x57,0x78,0xAC,0x76,
        -: 1491:
        -: 1492:	  0x79,0x04,0x08,0xF2,0xEE,0xDA,0xF3,0x92,0xB0,0x12,	/* b */
        -: 1493:	  0xED,0xEF,0xB3,0x39,0x2F,0x30,0xF4,0x32,0x7C,0x0C,
        -: 1494:	  0xA3,0xF3,0x1F,0xC3,0x83,0xC4,0x22,0xAA,0x8C,0x16,
        -: 1495:
        -: 1496:	  0x57,0x92,0x70,0x98,0xFA,0x93,0x2E,0x7C,0x0A,0x96,	/* x */
        -: 1497:	  0xD3,0xFD,0x5B,0x70,0x6E,0xF7,0xE5,0xF5,0xC1,0x56,
        -: 1498:	  0xE1,0x6B,0x7E,0x7C,0x86,0x03,0x85,0x52,0xE9,0x1D,
        -: 1499:
        -: 1500:	  0x61,0xD8,0xEE,0x50,0x77,0xC3,0x3F,0xEC,0xF6,0xF1,	/* y */
        -: 1501:	  0xA1,0x6B,0x26,0x8D,0xE4,0x69,0xC3,0xC7,0x74,0x4E,
        -: 1502:	  0xA9,0xA9,0x71,0x64,0x9F,0xC7,0xA9,0x61,0x63,0x05,
        -: 1503:
        -: 1504:	  0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* order */
        -: 1505:	  0x00,0x00,0x00,0x00,0x00,0x0F,0x4D,0x42,0xFF,0xE1,
        -: 1506:	  0x49,0x2A,0x49,0x93,0xF1,0xCA,0xD6,0x66,0xE4,0x47 }
        -: 1507:	};
        -: 1508:
        -: 1509:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -: 1510:	_EC_X9_62_CHAR2_239V2 = {
        -: 1511:	{ NID_X9_62_characteristic_two_field,20,30,6 },
        -: 1512:	{ 0x2A,0xA6,0x98,0x2F,0xDF,0xA4,0xD6,0x96,0xE6,0x76,	/* seed */
        -: 1513:	  0x87,0x56,0x15,0x17,0x5D,0x26,0x67,0x27,0x27,0x7D,
        -: 1514:
        -: 1515:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1516:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1517:	  0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x01,
        -: 1518:
        -: 1519:	  0x42,0x30,0x01,0x77,0x57,0xA7,0x67,0xFA,0xE4,0x23,	/* a */
        -: 1520:	  0x98,0x56,0x9B,0x74,0x63,0x25,0xD4,0x53,0x13,0xAF,
        -: 1521:	  0x07,0x66,0x26,0x64,0x79,0xB7,0x56,0x54,0xE6,0x5F,
        -: 1522:
        -: 1523:	  0x50,0x37,0xEA,0x65,0x41,0x96,0xCF,0xF0,0xCD,0x82,	/* b */
        -: 1524:	  0xB2,0xC1,0x4A,0x2F,0xCF,0x2E,0x3F,0xF8,0x77,0x52,
        -: 1525:	  0x85,0xB5,0x45,0x72,0x2F,0x03,0xEA,0xCD,0xB7,0x4B,
        -: 1526:
        -: 1527:	  0x28,0xF9,0xD0,0x4E,0x90,0x00,0x69,0xC8,0xDC,0x47,	/* x */
        -: 1528:	  0xA0,0x85,0x34,0xFE,0x76,0xD2,0xB9,0x00,0xB7,0xD7,
        -: 1529:	  0xEF,0x31,0xF5,0x70,0x9F,0x20,0x0C,0x4C,0xA2,0x05,
        -: 1530:
        -: 1531:	  0x56,0x67,0x33,0x4C,0x45,0xAF,0xF3,0xB5,0xA0,0x3B,	/* y */
        -: 1532:	  0xAD,0x9D,0xD7,0x5E,0x2C,0x71,0xA9,0x93,0x62,0x56,
        -: 1533:	  0x7D,0x54,0x53,0xF7,0xFA,0x6E,0x22,0x7E,0xC8,0x33,
        -: 1534:
        -: 1535:	  0x15,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,	/* order */
        -: 1536:	  0x55,0x55,0x55,0x55,0x55,0x3C,0x6F,0x28,0x85,0x25,
        -: 1537:	  0x9C,0x31,0xE3,0xFC,0xDF,0x15,0x46,0x24,0x52,0x2D }
        -: 1538:	};
        -: 1539:
        -: 1540:static const struct { EC_CURVE_DATA h; unsigned char data[20+30*6]; }
        -: 1541:	_EC_X9_62_CHAR2_239V3 = {
        -: 1542:	{ NID_X9_62_characteristic_two_field,20,30,0xA },
        -: 1543:	{ 0x9E,0x07,0x6F,0x4D,0x69,0x6E,0x67,0x68,0x75,0x61,	/* seed */
        -: 1544:	  0x51,0x75,0xE1,0x1E,0x9F,0xDD,0x77,0xF9,0x20,0x41,
        -: 1545:
        -: 1546:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1547:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1548:	  0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x01,
        -: 1549:
        -: 1550:	  0x01,0x23,0x87,0x74,0x66,0x6A,0x67,0x76,0x6D,0x66,	/* a */
        -: 1551:	  0x76,0xF7,0x78,0xE6,0x76,0xB6,0x69,0x99,0x17,0x66,
        -: 1552:	  0x66,0xE6,0x87,0x66,0x6D,0x87,0x66,0xC6,0x6A,0x9F,
        -: 1553:
        -: 1554:	  0x6A,0x94,0x19,0x77,0xBA,0x9F,0x6A,0x43,0x51,0x99,	/* b */
        -: 1555:	  0xAC,0xFC,0x51,0x06,0x7E,0xD5,0x87,0xF5,0x19,0xC5,
        -: 1556:	  0xEC,0xB5,0x41,0xB8,0xE4,0x41,0x11,0xDE,0x1D,0x40,
        -: 1557:
        -: 1558:	  0x70,0xF6,0xE9,0xD0,0x4D,0x28,0x9C,0x4E,0x89,0x91,	/* x */
        -: 1559:	  0x3C,0xE3,0x53,0x0B,0xFD,0xE9,0x03,0x97,0x7D,0x42,
        -: 1560:	  0xB1,0x46,0xD5,0x39,0xBF,0x1B,0xDE,0x4E,0x9C,0x92,
        -: 1561:
        -: 1562:	  0x2E,0x5A,0x0E,0xAF,0x6E,0x5E,0x13,0x05,0xB9,0x00,	/* y */
        -: 1563:	  0x4D,0xCE,0x5C,0x0E,0xD7,0xFE,0x59,0xA3,0x56,0x08,
        -: 1564:	  0xF3,0x38,0x37,0xC8,0x16,0xD8,0x0B,0x79,0xF4,0x61,
        -: 1565:
        -: 1566:	  0x0C,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,	/* order */
        -: 1567:	  0xCC,0xCC,0xCC,0xCC,0xCC,0xAC,0x49,0x12,0xD2,0xD9,
        -: 1568:	  0xDF,0x90,0x3E,0xF9,0x88,0x8B,0x8A,0x0E,0x4C,0xFF }
        -: 1569:	};
        -: 1570:
        -: 1571:static const struct { EC_CURVE_DATA h; unsigned char data[0+35*6]; }
        -: 1572:	_EC_X9_62_CHAR2_272W1 = {
        -: 1573:	{ NID_X9_62_characteristic_two_field,0,35,0xFF06 },
        -: 1574:	{							/* no seed */
        -: 1575:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1576:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1577:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,
        -: 1578:	  0x00,0x00,0x00,0x00,0x0B,
        -: 1579:	  0x00,0x91,0xA0,0x91,0xF0,0x3B,0x5F,0xBA,0x4A,0xB2,	/* a */
        -: 1580:	  0xCC,0xF4,0x9C,0x4E,0xDD,0x22,0x0F,0xB0,0x28,0x71,
        -: 1581:	  0x2D,0x42,0xBE,0x75,0x2B,0x2C,0x40,0x09,0x4D,0xBA,
        -: 1582:	  0xCD,0xB5,0x86,0xFB,0x20,
        -: 1583:	  0x00,0x71,0x67,0xEF,0xC9,0x2B,0xB2,0xE3,0xCE,0x7C,	/* b */
        -: 1584:	  0x8A,0xAA,0xFF,0x34,0xE1,0x2A,0x9C,0x55,0x70,0x03,
        -: 1585:	  0xD7,0xC7,0x3A,0x6F,0xAF,0x00,0x3F,0x99,0xF6,0xCC,
        -: 1586:	  0x84,0x82,0xE5,0x40,0xF7,
        -: 1587:	  0x00,0x61,0x08,0xBA,0xBB,0x2C,0xEE,0xBC,0xF7,0x87,	/* x */
        -: 1588:	  0x05,0x8A,0x05,0x6C,0xBE,0x0C,0xFE,0x62,0x2D,0x77,
        -: 1589:	  0x23,0xA2,0x89,0xE0,0x8A,0x07,0xAE,0x13,0xEF,0x0D,
        -: 1590:	  0x10,0xD1,0x71,0xDD,0x8D,
        -: 1591:	  0x00,0x10,0xC7,0x69,0x57,0x16,0x85,0x1E,0xEF,0x6B,	/* y */
        -: 1592:	  0xA7,0xF6,0x87,0x2E,0x61,0x42,0xFB,0xD2,0x41,0xB8,
        -: 1593:	  0x30,0xFF,0x5E,0xFC,0xAC,0xEC,0xCA,0xB0,0x5E,0x02,
        -: 1594:	  0x00,0x5D,0xDE,0x9D,0x23,
        -: 1595:	  0x00,0x00,0x01,0x00,0xFA,0xF5,0x13,0x54,0xE0,0xE3,	/* order */
        -: 1596:	  0x9E,0x48,0x92,0xDF,0x6E,0x31,0x9C,0x72,0xC8,0x16,
        -: 1597:	  0x16,0x03,0xFA,0x45,0xAA,0x7B,0x99,0x8A,0x16,0x7B,
        -: 1598:	  0x8F,0x1E,0x62,0x95,0x21 }
        -: 1599:	};
        -: 1600:
        -: 1601:static const struct { EC_CURVE_DATA h; unsigned char data[0+39*6]; }
        -: 1602:	_EC_X9_62_CHAR2_304W1 = {
        -: 1603:	{ NID_X9_62_characteristic_two_field,0,39,0xFE2E },
        -: 1604:	{							/* no seed */
        -: 1605:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1606:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1607:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1608:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x07,
        -: 1609:	  0x00,0xFD,0x0D,0x69,0x31,0x49,0xA1,0x18,0xF6,0x51,	/* a */
        -: 1610:	  0xE6,0xDC,0xE6,0x80,0x20,0x85,0x37,0x7E,0x5F,0x88,
        -: 1611:	  0x2D,0x1B,0x51,0x0B,0x44,0x16,0x00,0x74,0xC1,0x28,
        -: 1612:	  0x80,0x78,0x36,0x5A,0x03,0x96,0xC8,0xE6,0x81,
        -: 1613:	  0x00,0xBD,0xDB,0x97,0xE5,0x55,0xA5,0x0A,0x90,0x8E,	/* b */
        -: 1614:	  0x43,0xB0,0x1C,0x79,0x8E,0xA5,0xDA,0xA6,0x78,0x8F,
        -: 1615:	  0x1E,0xA2,0x79,0x4E,0xFC,0xF5,0x71,0x66,0xB8,0xC1,
        -: 1616:	  0x40,0x39,0x60,0x1E,0x55,0x82,0x73,0x40,0xBE,
        -: 1617:	  0x00,0x19,0x7B,0x07,0x84,0x5E,0x9B,0xE2,0xD9,0x6A,	/* x */
        -: 1618:	  0xDB,0x0F,0x5F,0x3C,0x7F,0x2C,0xFF,0xBD,0x7A,0x3E,
        -: 1619:	  0xB8,0xB6,0xFE,0xC3,0x5C,0x7F,0xD6,0x7F,0x26,0xDD,
        -: 1620:	  0xF6,0x28,0x5A,0x64,0x4F,0x74,0x0A,0x26,0x14,
        -: 1621:	  0x00,0xE1,0x9F,0xBE,0xB7,0x6E,0x0D,0xA1,0x71,0x51,	/* y */
        -: 1622:	  0x7E,0xCF,0x40,0x1B,0x50,0x28,0x9B,0xF0,0x14,0x10,
        -: 1623:	  0x32,0x88,0x52,0x7A,0x9B,0x41,0x6A,0x10,0x5E,0x80,
        -: 1624:	  0x26,0x0B,0x54,0x9F,0xDC,0x1B,0x92,0xC0,0x3B,
        -: 1625:	  0x00,0x00,0x01,0x01,0xD5,0x56,0x57,0x2A,0xAB,0xAC,	/* order */
        -: 1626:	  0x80,0x01,0x01,0xD5,0x56,0x57,0x2A,0xAB,0xAC,0x80,
        -: 1627:	  0x01,0x02,0x2D,0x5C,0x91,0xDD,0x17,0x3F,0x8F,0xB5,
        -: 1628:	  0x61,0xDA,0x68,0x99,0x16,0x44,0x43,0x05,0x1D }
        -: 1629:	};
        -: 1630:
        -: 1631:static const struct { EC_CURVE_DATA h; unsigned char data[20+45*6]; }
        -: 1632:	_EC_X9_62_CHAR2_359V1 = {
        -: 1633:	{ NID_X9_62_characteristic_two_field,20,45,0x4C },
        -: 1634:	{ 0x2B,0x35,0x49,0x20,0xB7,0x24,0xD6,0x96,0xE6,0x76,	/* seed */
        -: 1635:	  0x87,0x56,0x15,0x17,0x58,0x5B,0xA1,0x33,0x2D,0xC6,
        -: 1636:
        -: 1637:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1638:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1639:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1640:	  0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,
        -: 1641:	  0x00,0x00,0x00,0x00,0x01,
        -: 1642:	  0x56,0x67,0x67,0x6A,0x65,0x4B,0x20,0x75,0x4F,0x35,	/* a */
        -: 1643:	  0x6E,0xA9,0x20,0x17,0xD9,0x46,0x56,0x7C,0x46,0x67,
        -: 1644:	  0x55,0x56,0xF1,0x95,0x56,0xA0,0x46,0x16,0xB5,0x67,
        -: 1645:	  0xD2,0x23,0xA5,0xE0,0x56,0x56,0xFB,0x54,0x90,0x16,
        -: 1646:	  0xA9,0x66,0x56,0xA5,0x57,
        -: 1647:	  0x24,0x72,0xE2,0xD0,0x19,0x7C,0x49,0x36,0x3F,0x1F,	/* b */
        -: 1648:	  0xE7,0xF5,0xB6,0xDB,0x07,0x5D,0x52,0xB6,0x94,0x7D,
        -: 1649:	  0x13,0x5D,0x8C,0xA4,0x45,0x80,0x5D,0x39,0xBC,0x34,
        -: 1650:	  0x56,0x26,0x08,0x96,0x87,0x74,0x2B,0x63,0x29,0xE7,
        -: 1651:	  0x06,0x80,0x23,0x19,0x88,
        -: 1652:	  0x3C,0x25,0x8E,0xF3,0x04,0x77,0x67,0xE7,0xED,0xE0,	/* x */
        -: 1653:	  0xF1,0xFD,0xAA,0x79,0xDA,0xEE,0x38,0x41,0x36,0x6A,
        -: 1654:	  0x13,0x2E,0x16,0x3A,0xCE,0xD4,0xED,0x24,0x01,0xDF,
        -: 1655:	  0x9C,0x6B,0xDC,0xDE,0x98,0xE8,0xE7,0x07,0xC0,0x7A,
        -: 1656:	  0x22,0x39,0xB1,0xB0,0x97,
        -: 1657:	  0x53,0xD7,0xE0,0x85,0x29,0x54,0x70,0x48,0x12,0x1E,	/* y */
        -: 1658:	  0x9C,0x95,0xF3,0x79,0x1D,0xD8,0x04,0x96,0x39,0x48,
        -: 1659:	  0xF3,0x4F,0xAE,0x7B,0xF4,0x4E,0xA8,0x23,0x65,0xDC,
        -: 1660:	  0x78,0x68,0xFE,0x57,0xE4,0xAE,0x2D,0xE2,0x11,0x30,
        -: 1661:	  0x5A,0x40,0x71,0x04,0xBD,
        -: 1662:	  0x01,0xAF,0x28,0x6B,0xCA,0x1A,0xF2,0x86,0xBC,0xA1,	/* order */
        -: 1663:	  0xAF,0x28,0x6B,0xCA,0x1A,0xF2,0x86,0xBC,0xA1,0xAF,
        -: 1664:	  0x28,0x6B,0xC9,0xFB,0x8F,0x6B,0x85,0xC5,0x56,0x89,
        -: 1665:	  0x2C,0x20,0xA7,0xEB,0x96,0x4F,0xE7,0x71,0x9E,0x74,
        -: 1666:	  0xF4,0x90,0x75,0x8D,0x3B }
        -: 1667:	};
        -: 1668:
        -: 1669:static const struct { EC_CURVE_DATA h; unsigned char data[0+47*6]; }
        -: 1670:	_EC_X9_62_CHAR2_368W1 = {
        -: 1671:	{ NID_X9_62_characteristic_two_field,0,47,0xFF70 },
        -: 1672:	{							/* no seed */
        -: 1673:	  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1674:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1675:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1676:	  0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,
        -: 1677:	  0x00,0x00,0x00,0x00,0x00,0x00,0x07,
        -: 1678:	  0x00,0xE0,0xD2,0xEE,0x25,0x09,0x52,0x06,0xF5,0xE2,	/* a */
        -: 1679:	  0xA4,0xF9,0xED,0x22,0x9F,0x1F,0x25,0x6E,0x79,0xA0,
        -: 1680:	  0xE2,0xB4,0x55,0x97,0x0D,0x8D,0x0D,0x86,0x5B,0xD9,
        -: 1681:	  0x47,0x78,0xC5,0x76,0xD6,0x2F,0x0A,0xB7,0x51,0x9C,
        -: 1682:	  0xCD,0x2A,0x1A,0x90,0x6A,0xE3,0x0D,
        -: 1683:	  0x00,0xFC,0x12,0x17,0xD4,0x32,0x0A,0x90,0x45,0x2C,	/* b */
        -: 1684:	  0x76,0x0A,0x58,0xED,0xCD,0x30,0xC8,0xDD,0x06,0x9B,
        -: 1685:	  0x3C,0x34,0x45,0x38,0x37,0xA3,0x4E,0xD5,0x0C,0xB5,
        -: 1686:	  0x49,0x17,0xE1,0xC2,0x11,0x2D,0x84,0xD1,0x64,0xF4,
        -: 1687:	  0x44,0xF8,0xF7,0x47,0x86,0x04,0x6A,
        -: 1688:	  0x00,0x10,0x85,0xE2,0x75,0x53,0x81,0xDC,0xCC,0xE3,	/* x */
        -: 1689:	  0xC1,0x55,0x7A,0xFA,0x10,0xC2,0xF0,0xC0,0xC2,0x82,
        -: 1690:	  0x56,0x46,0xC5,0xB3,0x4A,0x39,0x4C,0xBC,0xFA,0x8B,
        -: 1691:	  0xC1,0x6B,0x22,0xE7,0xE7,0x89,0xE9,0x27,0xBE,0x21,
        -: 1692:	  0x6F,0x02,0xE1,0xFB,0x13,0x6A,0x5F,
        -: 1693:	  0x00,0x7B,0x3E,0xB1,0xBD,0xDC,0xBA,0x62,0xD5,0xD8,	/* y */
        -: 1694:	  0xB2,0x05,0x9B,0x52,0x57,0x97,0xFC,0x73,0x82,0x2C,
        -: 1695:	  0x59,0x05,0x9C,0x62,0x3A,0x45,0xFF,0x38,0x43,0xCE,
        -: 1696:	  0xE8,0xF8,0x7C,0xD1,0x85,0x5A,0xDA,0xA8,0x1E,0x2A,
        -: 1697:	  0x07,0x50,0xB8,0x0F,0xDA,0x23,0x10,
        -: 1698:	  0x00,0x00,0x01,0x00,0x90,0x51,0x2D,0xA9,0xAF,0x72,	/* order */
        -: 1699:	  0xB0,0x83,0x49,0xD9,0x8A,0x5D,0xD4,0xC7,0xB0,0x53,
        -: 1700:	  0x2E,0xCA,0x51,0xCE,0x03,0xE2,0xD1,0x0F,0x3B,0x7A,
        -: 1701:	  0xC5,0x79,0xBD,0x87,0xE9,0x09,0xAE,0x40,0xA6,0xF1,
        -: 1702:	  0x31,0xE9,0xCF,0xCE,0x5B,0xD9,0x67 }
        -: 1703:	};
        -: 1704:
        -: 1705:static const struct { EC_CURVE_DATA h; unsigned char data[0+54*6]; }
        -: 1706:	_EC_X9_62_CHAR2_431R1 = {
        -: 1707:	{ NID_X9_62_characteristic_two_field,0,54,0x2760 },
        -: 1708:	{							/* no seed */
        -: 1709:	  0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1710:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1711:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1712:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
        -: 1713:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1714:	  0x00,0x00,0x00,0x01,
        -: 1715:	  0x1A,0x82,0x7E,0xF0,0x0D,0xD6,0xFC,0x0E,0x23,0x4C,	/* a */
        -: 1716:	  0xAF,0x04,0x6C,0x6A,0x5D,0x8A,0x85,0x39,0x5B,0x23,
        -: 1717:	  0x6C,0xC4,0xAD,0x2C,0xF3,0x2A,0x0C,0xAD,0xBD,0xC9,
        -: 1718:	  0xDD,0xF6,0x20,0xB0,0xEB,0x99,0x06,0xD0,0x95,0x7F,
        -: 1719:	  0x6C,0x6F,0xEA,0xCD,0x61,0x54,0x68,0xDF,0x10,0x4D,
        -: 1720:	  0xE2,0x96,0xCD,0x8F,
        -: 1721:	  0x10,0xD9,0xB4,0xA3,0xD9,0x04,0x7D,0x8B,0x15,0x43,	/* b */
        -: 1722:	  0x59,0xAB,0xFB,0x1B,0x7F,0x54,0x85,0xB0,0x4C,0xEB,
        -: 1723:	  0x86,0x82,0x37,0xDD,0xC9,0xDE,0xDA,0x98,0x2A,0x67,
        -: 1724:	  0x9A,0x5A,0x91,0x9B,0x62,0x6D,0x4E,0x50,0xA8,0xDD,
        -: 1725:	  0x73,0x1B,0x10,0x7A,0x99,0x62,0x38,0x1F,0xB5,0xD8,
        -: 1726:	  0x07,0xBF,0x26,0x18,
        -: 1727:	  0x12,0x0F,0xC0,0x5D,0x3C,0x67,0xA9,0x9D,0xE1,0x61,	/* x */
        -: 1728:	  0xD2,0xF4,0x09,0x26,0x22,0xFE,0xCA,0x70,0x1B,0xE4,
        -: 1729:	  0xF5,0x0F,0x47,0x58,0x71,0x4E,0x8A,0x87,0xBB,0xF2,
        -: 1730:	  0xA6,0x58,0xEF,0x8C,0x21,0xE7,0xC5,0xEF,0xE9,0x65,
        -: 1731:	  0x36,0x1F,0x6C,0x29,0x99,0xC0,0xC2,0x47,0xB0,0xDB,
        -: 1732:	  0xD7,0x0C,0xE6,0xB7,
        -: 1733:	  0x20,0xD0,0xAF,0x89,0x03,0xA9,0x6F,0x8D,0x5F,0xA2,	/* y */
        -: 1734:	  0xC2,0x55,0x74,0x5D,0x3C,0x45,0x1B,0x30,0x2C,0x93,
        -: 1735:	  0x46,0xD9,0xB7,0xE4,0x85,0xE7,0xBC,0xE4,0x1F,0x6B,
        -: 1736:	  0x59,0x1F,0x3E,0x8F,0x6A,0xDD,0xCB,0xB0,0xBC,0x4C,
        -: 1737:	  0x2F,0x94,0x7A,0x7D,0xE1,0xA8,0x9B,0x62,0x5D,0x6A,
        -: 1738:	  0x59,0x8B,0x37,0x60,
        -: 1739:	  0x00,0x03,0x40,0x34,0x03,0x40,0x34,0x03,0x40,0x34,	/* order */
        -: 1740:	  0x03,0x40,0x34,0x03,0x40,0x34,0x03,0x40,0x34,0x03,
        -: 1741:	  0x40,0x34,0x03,0x40,0x34,0x03,0x40,0x34,0x03,0x23,
        -: 1742:	  0xC3,0x13,0xFA,0xB5,0x05,0x89,0x70,0x3B,0x5E,0xC6,
        -: 1743:	  0x8D,0x35,0x87,0xFE,0xC6,0x0D,0x16,0x1C,0xC1,0x49,
        -: 1744:	  0xC1,0xAD,0x4A,0x91 }
        -: 1745:	};
        -: 1746:
        -: 1747:static const struct { EC_CURVE_DATA h; unsigned char data[0+15*6]; }
        -: 1748:	_EC_WTLS_1 = {
        -: 1749:	{ NID_X9_62_characteristic_two_field,0,15,2 },
        -: 1750:	{							/* no seed */
        -: 1751:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1752:	  0x00,0x00,0x00,0x02,0x01,
        -: 1753:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1754:	  0x00,0x00,0x00,0x00,0x01,
        -: 1755:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1756:	  0x00,0x00,0x00,0x00,0x01,
        -: 1757:	  0x01,0x66,0x79,0x79,0xA4,0x0B,0xA4,0x97,0xE5,0xD5,	/* x */
        -: 1758:	  0xC2,0x70,0x78,0x06,0x17,
        -: 1759:	  0x00,0xF4,0x4B,0x4A,0xF1,0xEC,0xC2,0x63,0x0E,0x08,	/* y */
        -: 1760:	  0x78,0x5C,0xEB,0xCC,0x15,
        -: 1761:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xBF,	/* order */
        -: 1762:	  0x91,0xAF,0x6D,0xEA,0x73 }
        -: 1763:	};
        -: 1764:
        -: 1765:/* IPSec curves */
        -: 1766:/* NOTE: The of curves over a extension field of non prime degree
        -: 1767: * is not recommended (Weil-descent).
        -: 1768: * As the group order is not a prime this curve is not suitable
        -: 1769: * for ECDSA.
        -: 1770: */
        -: 1771:static const struct { EC_CURVE_DATA h; unsigned char data[0+20*6]; }
        -: 1772:	_EC_IPSEC_155_ID3 = {
        -: 1773:	{ NID_X9_62_characteristic_two_field,0,20,3 },
        -: 1774:	{							/* no seed */
        -: 1775:	  0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1776:	  0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
        -: 1777:
        -: 1778:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1779:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1780:
        -: 1781:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1782:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x33,0x8f,
        -: 1783:
        -: 1784:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* x */
        -: 1785:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7b,
        -: 1786:
        -: 1787:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* y */
        -: 1788:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xc8,
        -: 1789:
        -: 1790:	  0x02,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,	/* order */
        -: 1791:	  0xC7,0xF3,0xC7,0x88,0x1B,0xD0,0x86,0x8F,0xA8,0x6C }
        -: 1792:	};
        -: 1793:
        -: 1794:/* NOTE: The of curves over a extension field of non prime degree
        -: 1795: * is not recommended (Weil-descent).
        -: 1796: * As the group order is not a prime this curve is not suitable
        -: 1797: * for ECDSA.
        -: 1798: */
        -: 1799:static const struct { EC_CURVE_DATA h; unsigned char data[0+24*6]; }
        -: 1800:	_EC_IPSEC_185_ID4 = {
        -: 1801:	{ NID_X9_62_characteristic_two_field,0,24,2 },
        -: 1802:	{							/* no seed */
        -: 1803:	  0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* p */
        -: 1804:	  0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,
        -: 1805:	  0x00,0x00,0x00,0x01,
        -: 1806:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* a */
        -: 1807:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1808:	  0x00,0x00,0x00,0x00,
        -: 1809:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* b */
        -: 1810:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1811:	  0x00,0x00,0x1e,0xe9,
        -: 1812:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* x */
        -: 1813:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1814:	  0x00,0x00,0x00,0x18,
        -: 1815:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	/* y */
        -: 1816:	  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        -: 1817:	  0x00,0x00,0x00,0x0d,
        -: 1818:	  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,	/* order */
        -: 1819:	  0xFF,0xFF,0xED,0xF9,0x7C,0x44,0xDB,0x9F,0x24,0x20,
        -: 1820:	  0xBA,0xFC,0xA7,0x5E }
        -: 1821:	};
        -: 1822:
        -: 1823:#endif
        -: 1824:
        -: 1825:typedef struct _ec_list_element_st {
        -: 1826:	int	nid;
        -: 1827:	const EC_CURVE_DATA *data;
        -: 1828:	const EC_METHOD *(*meth)(void);
        -: 1829:	const char *comment;
        -: 1830:	} ec_list_element;
        -: 1831:
        -: 1832:static const ec_list_element curve_list[] = {
        -: 1833:	/* prime field curves */
        -: 1834:	/* secg curves */
        -: 1835:	{ NID_secp112r1, &_EC_SECG_PRIME_112R1.h, 0, "SECG/WTLS curve over a 112 bit prime field" },
        -: 1836:	{ NID_secp112r2, &_EC_SECG_PRIME_112R2.h, 0, "SECG curve over a 112 bit prime field" },
        -: 1837:	{ NID_secp128r1, &_EC_SECG_PRIME_128R1.h, 0, "SECG curve over a 128 bit prime field" },
        -: 1838:	{ NID_secp128r2, &_EC_SECG_PRIME_128R2.h, 0, "SECG curve over a 128 bit prime field" },
        -: 1839:	{ NID_secp160k1, &_EC_SECG_PRIME_160K1.h, 0, "SECG curve over a 160 bit prime field" },
        -: 1840:	{ NID_secp160r1, &_EC_SECG_PRIME_160R1.h, 0, "SECG curve over a 160 bit prime field" },
        -: 1841:	{ NID_secp160r2, &_EC_SECG_PRIME_160R2.h, 0, "SECG/WTLS curve over a 160 bit prime field" },
        -: 1842:	/* SECG secp192r1 is the same as X9.62 prime192v1 and hence omitted */
        -: 1843:	{ NID_secp192k1, &_EC_SECG_PRIME_192K1.h, 0, "SECG curve over a 192 bit prime field" },
        -: 1844:	{ NID_secp224k1, &_EC_SECG_PRIME_224K1.h, 0, "SECG curve over a 224 bit prime field" },
        -: 1845:#ifndef OPENSSL_NO_EC_NISTP_64_GCC_128
        -: 1846:	{ NID_secp224r1, &_EC_NIST_PRIME_224.h, EC_GFp_nistp224_method, "NIST/SECG curve over a 224 bit prime field" },
        -: 1847:#else
        -: 1848:	{ NID_secp224r1, &_EC_NIST_PRIME_224.h, 0, "NIST/SECG curve over a 224 bit prime field" },
        -: 1849:#endif
        -: 1850:	{ NID_secp256k1, &_EC_SECG_PRIME_256K1.h, 0, "SECG curve over a 256 bit prime field" },
        -: 1851:	/* SECG secp256r1 is the same as X9.62 prime256v1 and hence omitted */
        -: 1852:	{ NID_secp384r1, &_EC_NIST_PRIME_384.h, 0, "NIST/SECG curve over a 384 bit prime field" },
        -: 1853:#ifndef OPENSSL_NO_EC_NISTP_64_GCC_128
        -: 1854:	{ NID_secp521r1, &_EC_NIST_PRIME_521.h, EC_GFp_nistp521_method, "NIST/SECG curve over a 521 bit prime field" },
        -: 1855:#else
        -: 1856:	{ NID_secp521r1, &_EC_NIST_PRIME_521.h, 0, "NIST/SECG curve over a 521 bit prime field" },
        -: 1857:#endif
        -: 1858:	/* X9.62 curves */
        -: 1859:	{ NID_X9_62_prime192v1, &_EC_NIST_PRIME_192.h, 0, "NIST/X9.62/SECG curve over a 192 bit prime field" },
        -: 1860:	{ NID_X9_62_prime192v2, &_EC_X9_62_PRIME_192V2.h, 0, "X9.62 curve over a 192 bit prime field" },
        -: 1861:	{ NID_X9_62_prime192v3, &_EC_X9_62_PRIME_192V3.h, 0, "X9.62 curve over a 192 bit prime field" },
        -: 1862:	{ NID_X9_62_prime239v1, &_EC_X9_62_PRIME_239V1.h, 0, "X9.62 curve over a 239 bit prime field" },
        -: 1863:	{ NID_X9_62_prime239v2, &_EC_X9_62_PRIME_239V2.h, 0, "X9.62 curve over a 239 bit prime field" },
        -: 1864:	{ NID_X9_62_prime239v3, &_EC_X9_62_PRIME_239V3.h, 0, "X9.62 curve over a 239 bit prime field" },
        -: 1865:#ifndef OPENSSL_NO_EC_NISTP_64_GCC_128
        -: 1866:	{ NID_X9_62_prime256v1, &_EC_X9_62_PRIME_256V1.h, EC_GFp_nistp256_method, "X9.62/SECG curve over a 256 bit prime field" },
        -: 1867:#else
        -: 1868:	{ NID_X9_62_prime256v1, &_EC_X9_62_PRIME_256V1.h, 0, "X9.62/SECG curve over a 256 bit prime field" },
        -: 1869:#endif
        -: 1870:#ifndef OPENSSL_NO_EC2M
        -: 1871:	/* characteristic two field curves */
        -: 1872:	/* NIST/SECG curves */
        -: 1873:	{ NID_sect113r1, &_EC_SECG_CHAR2_113R1.h, 0, "SECG curve over a 113 bit binary field" },
        -: 1874:	{ NID_sect113r2, &_EC_SECG_CHAR2_113R2.h, 0, "SECG curve over a 113 bit binary field" },
        -: 1875:	{ NID_sect131r1, &_EC_SECG_CHAR2_131R1.h, 0, "SECG/WTLS curve over a 131 bit binary field" },
        -: 1876:	{ NID_sect131r2, &_EC_SECG_CHAR2_131R2.h, 0, "SECG curve over a 131 bit binary field" },
        -: 1877:	{ NID_sect163k1, &_EC_NIST_CHAR2_163K.h, 0, "NIST/SECG/WTLS curve over a 163 bit binary field" },
        -: 1878:	{ NID_sect163r1, &_EC_SECG_CHAR2_163R1.h, 0, "SECG curve over a 163 bit binary field" },
        -: 1879:	{ NID_sect163r2, &_EC_NIST_CHAR2_163B.h, 0, "NIST/SECG curve over a 163 bit binary field" },
        -: 1880:	{ NID_sect193r1, &_EC_SECG_CHAR2_193R1.h, 0, "SECG curve over a 193 bit binary field" },
        -: 1881:	{ NID_sect193r2, &_EC_SECG_CHAR2_193R2.h, 0, "SECG curve over a 193 bit binary field" },
        -: 1882:	{ NID_sect233k1, &_EC_NIST_CHAR2_233K.h, 0, "NIST/SECG/WTLS curve over a 233 bit binary field" },
        -: 1883:	{ NID_sect233r1, &_EC_NIST_CHAR2_233B.h, 0, "NIST/SECG/WTLS curve over a 233 bit binary field" },
        -: 1884:	{ NID_sect239k1, &_EC_SECG_CHAR2_239K1.h, 0, "SECG curve over a 239 bit binary field" },
        -: 1885:	{ NID_sect283k1, &_EC_NIST_CHAR2_283K.h, 0, "NIST/SECG curve over a 283 bit binary field" },
        -: 1886:	{ NID_sect283r1, &_EC_NIST_CHAR2_283B.h, 0, "NIST/SECG curve over a 283 bit binary field" },
        -: 1887:	{ NID_sect409k1, &_EC_NIST_CHAR2_409K.h, 0, "NIST/SECG curve over a 409 bit binary field" },
        -: 1888:	{ NID_sect409r1, &_EC_NIST_CHAR2_409B.h, 0, "NIST/SECG curve over a 409 bit binary field" },
        -: 1889:	{ NID_sect571k1, &_EC_NIST_CHAR2_571K.h, 0, "NIST/SECG curve over a 571 bit binary field" },
        -: 1890:	{ NID_sect571r1, &_EC_NIST_CHAR2_571B.h, 0, "NIST/SECG curve over a 571 bit binary field" },
        -: 1891:	/* X9.62 curves */
        -: 1892:	{ NID_X9_62_c2pnb163v1, &_EC_X9_62_CHAR2_163V1.h, 0, "X9.62 curve over a 163 bit binary field" },
        -: 1893:	{ NID_X9_62_c2pnb163v2, &_EC_X9_62_CHAR2_163V2.h, 0, "X9.62 curve over a 163 bit binary field" },
        -: 1894:	{ NID_X9_62_c2pnb163v3, &_EC_X9_62_CHAR2_163V3.h, 0, "X9.62 curve over a 163 bit binary field" },
        -: 1895:	{ NID_X9_62_c2pnb176v1, &_EC_X9_62_CHAR2_176V1.h, 0, "X9.62 curve over a 176 bit binary field" },
        -: 1896:	{ NID_X9_62_c2tnb191v1, &_EC_X9_62_CHAR2_191V1.h, 0, "X9.62 curve over a 191 bit binary field" },
        -: 1897:	{ NID_X9_62_c2tnb191v2, &_EC_X9_62_CHAR2_191V2.h, 0, "X9.62 curve over a 191 bit binary field" },
        -: 1898:	{ NID_X9_62_c2tnb191v3, &_EC_X9_62_CHAR2_191V3.h, 0, "X9.62 curve over a 191 bit binary field" },
        -: 1899:	{ NID_X9_62_c2pnb208w1, &_EC_X9_62_CHAR2_208W1.h, 0, "X9.62 curve over a 208 bit binary field" },
        -: 1900:	{ NID_X9_62_c2tnb239v1, &_EC_X9_62_CHAR2_239V1.h, 0, "X9.62 curve over a 239 bit binary field" },
        -: 1901:	{ NID_X9_62_c2tnb239v2, &_EC_X9_62_CHAR2_239V2.h, 0, "X9.62 curve over a 239 bit binary field" },
        -: 1902:	{ NID_X9_62_c2tnb239v3, &_EC_X9_62_CHAR2_239V3.h, 0, "X9.62 curve over a 239 bit binary field" },
        -: 1903:	{ NID_X9_62_c2pnb272w1, &_EC_X9_62_CHAR2_272W1.h, 0, "X9.62 curve over a 272 bit binary field" },
        -: 1904:	{ NID_X9_62_c2pnb304w1, &_EC_X9_62_CHAR2_304W1.h, 0, "X9.62 curve over a 304 bit binary field" },
        -: 1905:	{ NID_X9_62_c2tnb359v1, &_EC_X9_62_CHAR2_359V1.h, 0, "X9.62 curve over a 359 bit binary field" },
        -: 1906:	{ NID_X9_62_c2pnb368w1, &_EC_X9_62_CHAR2_368W1.h, 0, "X9.62 curve over a 368 bit binary field" },
        -: 1907:	{ NID_X9_62_c2tnb431r1, &_EC_X9_62_CHAR2_431R1.h, 0, "X9.62 curve over a 431 bit binary field" },
        -: 1908:	/* the WAP/WTLS curves
        -: 1909:	 * [unlike SECG, spec has its own OIDs for curves from X9.62] */
        -: 1910:	{ NID_wap_wsg_idm_ecid_wtls1, &_EC_WTLS_1.h, 0, "WTLS curve over a 113 bit binary field" },
        -: 1911:	{ NID_wap_wsg_idm_ecid_wtls3, &_EC_NIST_CHAR2_163K.h, 0, "NIST/SECG/WTLS curve over a 163 bit binary field" },
        -: 1912:	{ NID_wap_wsg_idm_ecid_wtls4, &_EC_SECG_CHAR2_113R1.h, 0, "SECG curve over a 113 bit binary field" },
        -: 1913:	{ NID_wap_wsg_idm_ecid_wtls5, &_EC_X9_62_CHAR2_163V1.h, 0, "X9.62 curve over a 163 bit binary field" },
        -: 1914:#endif
        -: 1915:	{ NID_wap_wsg_idm_ecid_wtls6, &_EC_SECG_PRIME_112R1.h, 0, "SECG/WTLS curve over a 112 bit prime field" },
        -: 1916:	{ NID_wap_wsg_idm_ecid_wtls7, &_EC_SECG_PRIME_160R2.h, 0, "SECG/WTLS curve over a 160 bit prime field" },
        -: 1917:	{ NID_wap_wsg_idm_ecid_wtls8, &_EC_WTLS_8.h, 0, "WTLS curve over a 112 bit prime field" },
        -: 1918:	{ NID_wap_wsg_idm_ecid_wtls9, &_EC_WTLS_9.h, 0, "WTLS curve over a 160 bit prime field" },
        -: 1919:#ifndef OPENSSL_NO_EC2M
        -: 1920:	{ NID_wap_wsg_idm_ecid_wtls10, &_EC_NIST_CHAR2_233K.h, 0, "NIST/SECG/WTLS curve over a 233 bit binary field" },
        -: 1921:	{ NID_wap_wsg_idm_ecid_wtls11, &_EC_NIST_CHAR2_233B.h, 0, "NIST/SECG/WTLS curve over a 233 bit binary field" },
        -: 1922:#endif
        -: 1923:	{ NID_wap_wsg_idm_ecid_wtls12, &_EC_WTLS_12.h, 0, "WTLS curvs over a 224 bit prime field" },
        -: 1924:#ifndef OPENSSL_NO_EC2M
        -: 1925:	/* IPSec curves */
        -: 1926:	{ NID_ipsec3, &_EC_IPSEC_155_ID3.h, 0, "\n\tIPSec/IKE/Oakley curve #3 over a 155 bit binary field.\n"
        -: 1927:	  "\tNot suitable for ECDSA.\n\tQuestionable extension field!" },
        -: 1928:	{ NID_ipsec4, &_EC_IPSEC_185_ID4.h, 0, "\n\tIPSec/IKE/Oakley curve #4 over a 185 bit binary field.\n"
        -: 1929:	  "\tNot suitable for ECDSA.\n\tQuestionable extension field!" },
        -: 1930:#endif
        -: 1931:};
        -: 1932:
        -: 1933:#define curve_list_length (sizeof(curve_list)/sizeof(ec_list_element))
        -: 1934:
    #####: 1935:static EC_GROUP *ec_group_new_from_data(const ec_list_element curve)
        -: 1936:	{
        -: 1937:	EC_GROUP *group=NULL;
        -: 1938:	EC_POINT *P=NULL;
        -: 1939:	BN_CTX	 *ctx=NULL;
        -: 1940:	BIGNUM	 *p=NULL, *a=NULL, *b=NULL, *x=NULL, *y=NULL, *order=NULL;
        -: 1941:	int	 ok=0;
        -: 1942:	int	 seed_len,param_len;
        -: 1943:	const EC_METHOD *meth;
        -: 1944:	const EC_CURVE_DATA *data;
        -: 1945:	const unsigned char *params;
        -: 1946:
    #####: 1947:	if ((ctx = BN_CTX_new()) == NULL)
        -: 1948:		{
    #####: 1949:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_MALLOC_FAILURE);
        -: 1950:		goto err;
        -: 1951:		}
        -: 1952:
    #####: 1953:	data = curve.data;
    #####: 1954:	seed_len  = data->seed_len;
    #####: 1955:	param_len = data->param_len;
    #####: 1956:	params	  = (const unsigned char *)(data+1);	/* skip header */
    #####: 1957:	params	 += seed_len;				/* skip seed   */
        -: 1958:
    #####: 1959:	if (!(p = BN_bin2bn(params+0*param_len, param_len, NULL))
    #####: 1960:		|| !(a = BN_bin2bn(params+1*param_len, param_len, NULL))
    #####: 1961:		|| !(b = BN_bin2bn(params+2*param_len, param_len, NULL)))
        -: 1962:		{
    #####: 1963:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_BN_LIB);
        -: 1964:		goto err;
        -: 1965:		}
        -: 1966:
    #####: 1967:	if (curve.meth != 0)
        -: 1968:		{
    #####: 1969:		meth = curve.meth();
    #####: 1970:		if (((group = EC_GROUP_new(meth)) == NULL) ||
    #####: 1971:			(!(group->meth->group_set_curve(group, p, a, b, ctx))))
        -: 1972:			{
    #####: 1973:			ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 1974:			goto err;
        -: 1975:			}
        -: 1976:		}
    #####: 1977:	else if (data->field_type == NID_X9_62_prime_field)
        -: 1978:		{
    #####: 1979:		if ((group = EC_GROUP_new_curve_GFp(p, a, b, ctx)) == NULL)
        -: 1980:			{
    #####: 1981:			ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 1982:			goto err;
        -: 1983:			}
        -: 1984:		}
        -: 1985:#ifndef OPENSSL_NO_EC2M
        -: 1986:	else	/* field_type == NID_X9_62_characteristic_two_field */
        -: 1987:		{
    #####: 1988:		if ((group = EC_GROUP_new_curve_GF2m(p, a, b, ctx)) == NULL)
        -: 1989:			{
    #####: 1990:			ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 1991:			goto err;
        -: 1992:			}
        -: 1993:		}
        -: 1994:#endif
        -: 1995:
    #####: 1996:	if ((P = EC_POINT_new(group)) == NULL)
        -: 1997:		{
    #####: 1998:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 1999:		goto err;
        -: 2000:		}
        -: 2001:
    #####: 2002:	if (!(x = BN_bin2bn(params+3*param_len, param_len, NULL))
    #####: 2003:		|| !(y = BN_bin2bn(params+4*param_len, param_len, NULL)))
        -: 2004:		{
    #####: 2005:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_BN_LIB);
        -: 2006:		goto err;
        -: 2007:		}
    #####: 2008:	if (!EC_POINT_set_affine_coordinates_GFp(group, P, x, y, ctx))
        -: 2009:		{
    #####: 2010:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 2011:		goto err;
        -: 2012:		}
    #####: 2013:	if (!(order = BN_bin2bn(params+5*param_len, param_len, NULL))
    #####: 2014:		|| !BN_set_word(x, (BN_ULONG)data->cofactor))
        -: 2015:		{
    #####: 2016:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_BN_LIB);
        -: 2017:		goto err;
        -: 2018:		}
    #####: 2019:	if (!EC_GROUP_set_generator(group, P, order, x))
        -: 2020:		{
    #####: 2021:		ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 2022:		goto err;
        -: 2023:		}
    #####: 2024:	if (seed_len)
        -: 2025:		{
    #####: 2026:		if (!EC_GROUP_set_seed(group, params-seed_len, seed_len))
        -: 2027:			{
    #####: 2028:			ECerr(EC_F_EC_GROUP_NEW_FROM_DATA, ERR_R_EC_LIB);
        -: 2029:			goto err;
        -: 2030:			}
        -: 2031:		}
        -: 2032:	ok=1;
        -: 2033:err:
    #####: 2034:	if (!ok)
        -: 2035:		{
    #####: 2036:		EC_GROUP_free(group);
        -: 2037:		group = NULL;
        -: 2038:		}
    #####: 2039:	if (P)
    #####: 2040:		EC_POINT_free(P);
    #####: 2041:	if (ctx)
    #####: 2042:		BN_CTX_free(ctx);
    #####: 2043:	if (p)
    #####: 2044:		BN_free(p);
    #####: 2045:	if (a)
    #####: 2046:		BN_free(a);
    #####: 2047:	if (b)
    #####: 2048:		BN_free(b);
    #####: 2049:	if (order)
    #####: 2050:		BN_free(order);
    #####: 2051:	if (x)
    #####: 2052:		BN_free(x);
    #####: 2053:	if (y)
    #####: 2054:		BN_free(y);
    #####: 2055:	return group;
        -: 2056:	}
        -: 2057:
    #####: 2058:EC_GROUP *EC_GROUP_new_by_curve_name(int nid)
        -: 2059:	{
        -: 2060:	size_t i;
        -: 2061:	EC_GROUP *ret = NULL;
        -: 2062:
    #####: 2063:	if (nid <= 0)
        -: 2064:		return NULL;
        -: 2065:
    #####: 2066:	for (i=0; i<curve_list_length; i++)
    #####: 2067:		if (curve_list[i].nid == nid)
        -: 2068:			{
    #####: 2069:			ret = ec_group_new_from_data(curve_list[i]);
    #####: 2070:			break;
        -: 2071:			}
        -: 2072:
    #####: 2073:	if (ret == NULL)
        -: 2074:		{
    #####: 2075:		ECerr(EC_F_EC_GROUP_NEW_BY_CURVE_NAME, EC_R_UNKNOWN_GROUP);
    #####: 2076:		return NULL;
        -: 2077:		}
        -: 2078:
    #####: 2079:	EC_GROUP_set_curve_name(ret, nid);
        -: 2080:
    #####: 2081:	return ret;
        -: 2082:	}
        -: 2083:
    #####: 2084:size_t EC_get_builtin_curves(EC_builtin_curve *r, size_t nitems)
        -: 2085:	{
        -: 2086:	size_t	i, min;
        -: 2087:
    #####: 2088:	if (r == NULL || nitems == 0)
        -: 2089:		return curve_list_length;
        -: 2090:
    #####: 2091:	min = nitems < curve_list_length ? nitems : curve_list_length;
        -: 2092:
    #####: 2093:	for (i = 0; i < min; i++)
        -: 2094:		{
    #####: 2095:		r[i].nid = curve_list[i].nid;
    #####: 2096:		r[i].comment = curve_list[i].comment;
        -: 2097:		}
        -: 2098:
        -: 2099:	return curve_list_length;
        -: 2100:	}
