        -:    0:Source:xcbc_enc.c
        -:    0:Graph:xcbc_enc.gcno
        -:    0:Data:xcbc_enc.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/des/xcbc_enc.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include "des_locl.h"
        -:   60:
        -:   61:/* RSA's DESX */
        -:   62:
        -:   63:#if 0 /* broken code, preserved just in case anyone specifically looks for this */
        -:   64:static const unsigned char desx_white_in2out[256]={
        -:   65:0xBD,0x56,0xEA,0xF2,0xA2,0xF1,0xAC,0x2A,0xB0,0x93,0xD1,0x9C,0x1B,0x33,0xFD,0xD0,
        -:   66:0x30,0x04,0xB6,0xDC,0x7D,0xDF,0x32,0x4B,0xF7,0xCB,0x45,0x9B,0x31,0xBB,0x21,0x5A,
        -:   67:0x41,0x9F,0xE1,0xD9,0x4A,0x4D,0x9E,0xDA,0xA0,0x68,0x2C,0xC3,0x27,0x5F,0x80,0x36,
        -:   68:0x3E,0xEE,0xFB,0x95,0x1A,0xFE,0xCE,0xA8,0x34,0xA9,0x13,0xF0,0xA6,0x3F,0xD8,0x0C,
        -:   69:0x78,0x24,0xAF,0x23,0x52,0xC1,0x67,0x17,0xF5,0x66,0x90,0xE7,0xE8,0x07,0xB8,0x60,
        -:   70:0x48,0xE6,0x1E,0x53,0xF3,0x92,0xA4,0x72,0x8C,0x08,0x15,0x6E,0x86,0x00,0x84,0xFA,
        -:   71:0xF4,0x7F,0x8A,0x42,0x19,0xF6,0xDB,0xCD,0x14,0x8D,0x50,0x12,0xBA,0x3C,0x06,0x4E,
        -:   72:0xEC,0xB3,0x35,0x11,0xA1,0x88,0x8E,0x2B,0x94,0x99,0xB7,0x71,0x74,0xD3,0xE4,0xBF,
        -:   73:0x3A,0xDE,0x96,0x0E,0xBC,0x0A,0xED,0x77,0xFC,0x37,0x6B,0x03,0x79,0x89,0x62,0xC6,
        -:   74:0xD7,0xC0,0xD2,0x7C,0x6A,0x8B,0x22,0xA3,0x5B,0x05,0x5D,0x02,0x75,0xD5,0x61,0xE3,
        -:   75:0x18,0x8F,0x55,0x51,0xAD,0x1F,0x0B,0x5E,0x85,0xE5,0xC2,0x57,0x63,0xCA,0x3D,0x6C,
        -:   76:0xB4,0xC5,0xCC,0x70,0xB2,0x91,0x59,0x0D,0x47,0x20,0xC8,0x4F,0x58,0xE0,0x01,0xE2,
        -:   77:0x16,0x38,0xC4,0x6F,0x3B,0x0F,0x65,0x46,0xBE,0x7E,0x2D,0x7B,0x82,0xF9,0x40,0xB5,
        -:   78:0x1D,0x73,0xF8,0xEB,0x26,0xC7,0x87,0x97,0x25,0x54,0xB1,0x28,0xAA,0x98,0x9D,0xA5,
        -:   79:0x64,0x6D,0x7A,0xD4,0x10,0x81,0x44,0xEF,0x49,0xD6,0xAE,0x2E,0xDD,0x76,0x5C,0x2F,
        -:   80:0xA7,0x1C,0xC9,0x09,0x69,0x9A,0x83,0xCF,0x29,0x39,0xB9,0xE9,0x4C,0xFF,0x43,0xAB,
        -:   81:	};
        -:   82:
        -:   83:void DES_xwhite_in2out(const_DES_cblock *des_key, const_DES_cblock *in_white,
        -:   84:	     DES_cblock *out_white)
        -:   85:	{
        -:   86:	int out0,out1;
        -:   87:	int i;
        -:   88:	const unsigned char *key = &(*des_key)[0];
        -:   89:	const unsigned char *in = &(*in_white)[0];
        -:   90:	unsigned char *out = &(*out_white)[0];
        -:   91:
        -:   92:	out[0]=out[1]=out[2]=out[3]=out[4]=out[5]=out[6]=out[7]=0;
        -:   93:	out0=out1=0;
        -:   94:	for (i=0; i<8; i++)
        -:   95:		{
        -:   96:		out[i]=key[i]^desx_white_in2out[out0^out1];
        -:   97:		out0=out1;
        -:   98:		out1=(int)out[i&0x07];
        -:   99:		}
        -:  100:
        -:  101:	out0=out[0];
        -:  102:	out1=out[i]; /* BUG: out-of-bounds read */
        -:  103:	for (i=0; i<8; i++)
        -:  104:		{
        -:  105:		out[i]=in[i]^desx_white_in2out[out0^out1];
        -:  106:		out0=out1;
        -:  107:		out1=(int)out[i&0x07];
        -:  108:		}
        -:  109:	}
        -:  110:#endif
        -:  111:
    #####:  112:void DES_xcbc_encrypt(const unsigned char *in, unsigned char *out,
        -:  113:		      long length, DES_key_schedule *schedule,
        -:  114:		      DES_cblock *ivec, const_DES_cblock *inw,
        -:  115:		      const_DES_cblock *outw, int enc)
        -:  116:	{
        -:  117:	register DES_LONG tin0,tin1;
        -:  118:	register DES_LONG tout0,tout1,xor0,xor1;
        -:  119:	register DES_LONG inW0,inW1,outW0,outW1;
        -:  120:	register const unsigned char *in2;
        -:  121:	register long l=length;
        -:  122:	DES_LONG tin[2];
        -:  123:	unsigned char *iv;
        -:  124:
        -:  125:	in2 = &(*inw)[0];
    #####:  126:	c2l(in2,inW0);
    #####:  127:	c2l(in2,inW1);
        -:  128:	in2 = &(*outw)[0];
    #####:  129:	c2l(in2,outW0);
    #####:  130:	c2l(in2,outW1);
        -:  131:
        -:  132:	iv = &(*ivec)[0];
        -:  133:
    #####:  134:	if (enc)
        -:  135:		{
    #####:  136:		c2l(iv,tout0);
    #####:  137:		c2l(iv,tout1);
    #####:  138:		for (l-=8; l>=0; l-=8)
        -:  139:			{
    #####:  140:			c2l(in,tin0);
    #####:  141:			c2l(in,tin1);
    #####:  142:			tin0^=tout0^inW0; tin[0]=tin0;
    #####:  143:			tin1^=tout1^inW1; tin[1]=tin1;
    #####:  144:			DES_encrypt1(tin,schedule,DES_ENCRYPT);
    #####:  145:			tout0=tin[0]^outW0; l2c(tout0,out);
    #####:  146:			tout1=tin[1]^outW1; l2c(tout1,out);
        -:  147:			}
    #####:  148:		if (l != -8)
        -:  149:			{
    #####:  150:			c2ln(in,tin0,tin1,l+8);
    #####:  151:			tin0^=tout0^inW0; tin[0]=tin0;
    #####:  152:			tin1^=tout1^inW1; tin[1]=tin1;
    #####:  153:			DES_encrypt1(tin,schedule,DES_ENCRYPT);
    #####:  154:			tout0=tin[0]^outW0; l2c(tout0,out);
    #####:  155:			tout1=tin[1]^outW1; l2c(tout1,out);
        -:  156:			}
        -:  157:		iv = &(*ivec)[0];
    #####:  158:		l2c(tout0,iv);
    #####:  159:		l2c(tout1,iv);
        -:  160:		}
        -:  161:	else
        -:  162:		{
    #####:  163:		c2l(iv,xor0);
    #####:  164:		c2l(iv,xor1);
    #####:  165:		for (l-=8; l>0; l-=8)
        -:  166:			{
    #####:  167:			c2l(in,tin0); tin[0]=tin0^outW0;
    #####:  168:			c2l(in,tin1); tin[1]=tin1^outW1;
    #####:  169:			DES_encrypt1(tin,schedule,DES_DECRYPT);
    #####:  170:			tout0=tin[0]^xor0^inW0;
    #####:  171:			tout1=tin[1]^xor1^inW1;
    #####:  172:			l2c(tout0,out);
    #####:  173:			l2c(tout1,out);
        -:  174:			xor0=tin0;
        -:  175:			xor1=tin1;
        -:  176:			}
    #####:  177:		if (l != -8)
        -:  178:			{
    #####:  179:			c2l(in,tin0); tin[0]=tin0^outW0;
    #####:  180:			c2l(in,tin1); tin[1]=tin1^outW1;
    #####:  181:			DES_encrypt1(tin,schedule,DES_DECRYPT);
    #####:  182:			tout0=tin[0]^xor0^inW0;
    #####:  183:			tout1=tin[1]^xor1^inW1;
    #####:  184:			l2cn(tout0,tout1,out,l+8);
        -:  185:			xor0=tin0;
        -:  186:			xor1=tin1;
        -:  187:			}
        -:  188:
        -:  189:		iv = &(*ivec)[0];
    #####:  190:		l2c(xor0,iv);
    #####:  191:		l2c(xor1,iv);
        -:  192:		}
        -:  193:	tin0=tin1=tout0=tout1=xor0=xor1=0;
        -:  194:	inW0=inW1=outW0=outW1=0;
        -:  195:	tin[0]=tin[1]=0;
    #####:  196:	}
        -:  197:
