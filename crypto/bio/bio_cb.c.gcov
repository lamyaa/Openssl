        -:    0:Source:bio_cb.c
        -:    0:Graph:bio_cb.gcno
        -:    0:Data:bio_cb.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/bio/bio_cb.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <string.h>
        -:   61:#include <stdlib.h>
        -:   62:#include "cryptlib.h"
        -:   63:#include <openssl/bio.h>
        -:   64:#include <openssl/err.h>
        -:   65:
    #####:   66:long MS_CALLBACK BIO_debug_callback(BIO *bio, int cmd, const char *argp,
        -:   67:	     int argi, long argl, long ret)
        -:   68:	{
        -:   69:	BIO *b;
        -:   70:	MS_STATIC char buf[256];
        -:   71:	char *p;
        -:   72:	long r=1;
        -:   73:	size_t p_maxlen;
        -:   74:
    #####:   75:	if (BIO_CB_RETURN & cmd)
        -:   76:		r=ret;
        -:   77:
    #####:   78:	BIO_snprintf(buf,sizeof buf,"BIO[%08lX]:",(unsigned long)bio);
        -:   79:	p= &(buf[14]);
        -:   80:	p_maxlen = sizeof buf - 14;
    #####:   81:	switch (cmd)
        -:   82:		{
        -:   83:	case BIO_CB_FREE:
    #####:   84:		BIO_snprintf(p,p_maxlen,"Free - %s\n",bio->method->name);
    #####:   85:		break;
        -:   86:	case BIO_CB_READ:
    #####:   87:		if (bio->method->type & BIO_TYPE_DESCRIPTOR)
    #####:   88:			BIO_snprintf(p,p_maxlen,"read(%d,%lu) - %s fd=%d\n",
        -:   89:				 bio->num,(unsigned long)argi,
        -:   90:				 bio->method->name,bio->num);
        -:   91:		else
    #####:   92:			BIO_snprintf(p,p_maxlen,"read(%d,%lu) - %s\n",
        -:   93:				 bio->num,(unsigned long)argi,
        -:   94:				 bio->method->name);
        -:   95:		break;
        -:   96:	case BIO_CB_WRITE:
    #####:   97:		if (bio->method->type & BIO_TYPE_DESCRIPTOR)
    #####:   98:			BIO_snprintf(p,p_maxlen,"write(%d,%lu) - %s fd=%d\n",
        -:   99:				 bio->num,(unsigned long)argi,
        -:  100:				 bio->method->name,bio->num);
        -:  101:		else
    #####:  102:			BIO_snprintf(p,p_maxlen,"write(%d,%lu) - %s\n",
        -:  103:				 bio->num,(unsigned long)argi,
        -:  104:				 bio->method->name);
        -:  105:		break;
        -:  106:	case BIO_CB_PUTS:
    #####:  107:		BIO_snprintf(p,p_maxlen,"puts() - %s\n",bio->method->name);
    #####:  108:		break;
        -:  109:	case BIO_CB_GETS:
    #####:  110:		BIO_snprintf(p,p_maxlen,"gets(%lu) - %s\n",(unsigned long)argi,bio->method->name);
    #####:  111:		break;
        -:  112:	case BIO_CB_CTRL:
    #####:  113:		BIO_snprintf(p,p_maxlen,"ctrl(%lu) - %s\n",(unsigned long)argi,bio->method->name);
    #####:  114:		break;
        -:  115:	case BIO_CB_RETURN|BIO_CB_READ:
    #####:  116:		BIO_snprintf(p,p_maxlen,"read return %ld\n",ret);
    #####:  117:		break;
        -:  118:	case BIO_CB_RETURN|BIO_CB_WRITE:
    #####:  119:		BIO_snprintf(p,p_maxlen,"write return %ld\n",ret);
    #####:  120:		break;
        -:  121:	case BIO_CB_RETURN|BIO_CB_GETS:
    #####:  122:		BIO_snprintf(p,p_maxlen,"gets return %ld\n",ret);
    #####:  123:		break;
        -:  124:	case BIO_CB_RETURN|BIO_CB_PUTS:
    #####:  125:		BIO_snprintf(p,p_maxlen,"puts return %ld\n",ret);
    #####:  126:		break;
        -:  127:	case BIO_CB_RETURN|BIO_CB_CTRL:
    #####:  128:		BIO_snprintf(p,p_maxlen,"ctrl return %ld\n",ret);
    #####:  129:		break;
        -:  130:	default:
    #####:  131:		BIO_snprintf(p,p_maxlen,"bio callback - unknown type (%d)\n",cmd);
    #####:  132:		break;
        -:  133:		}
        -:  134:
    #####:  135:	b=(BIO *)bio->cb_arg;
    #####:  136:	if (b != NULL)
    #####:  137:		BIO_write(b,buf,strlen(buf));
        -:  138:#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16)
        -:  139:	else
    #####:  140:		fputs(buf,stderr);
        -:  141:#endif
    #####:  142:	return(r);
        -:  143:	}
