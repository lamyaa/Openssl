        -:    0:Source:bss_null.c
        -:    0:Graph:bss_null.gcno
        -:    0:Data:bss_null.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/bio/bss_null.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <errno.h>
        -:   61:#include "cryptlib.h"
        -:   62:#include <openssl/bio.h>
        -:   63:
        -:   64:static int null_write(BIO *h, const char *buf, int num);
        -:   65:static int null_read(BIO *h, char *buf, int size);
        -:   66:static int null_puts(BIO *h, const char *str);
        -:   67:static int null_gets(BIO *h, char *str, int size);
        -:   68:static long null_ctrl(BIO *h, int cmd, long arg1, void *arg2);
        -:   69:static int null_new(BIO *h);
        -:   70:static int null_free(BIO *data);
        -:   71:static BIO_METHOD null_method=
        -:   72:	{
        -:   73:	BIO_TYPE_NULL,
        -:   74:	"NULL",
        -:   75:	null_write,
        -:   76:	null_read,
        -:   77:	null_puts,
        -:   78:	null_gets,
        -:   79:	null_ctrl,
        -:   80:	null_new,
        -:   81:	null_free,
        -:   82:	NULL,
        -:   83:	};
        -:   84:
    #####:   85:BIO_METHOD *BIO_s_null(void)
        -:   86:	{
    #####:   87:	return(&null_method);
        -:   88:	}
        -:   89:
    #####:   90:static int null_new(BIO *bi)
        -:   91:	{
    #####:   92:	bi->init=1;
    #####:   93:	bi->num=0;
    #####:   94:	bi->ptr=(NULL);
    #####:   95:	return(1);
        -:   96:	}
        -:   97:
    #####:   98:static int null_free(BIO *a)
        -:   99:	{
    #####:  100:	if (a == NULL) return(0);
    #####:  101:	return(1);
        -:  102:	}
        -:  103:	
    #####:  104:static int null_read(BIO *b, char *out, int outl)
        -:  105:	{
    #####:  106:	return(0);
        -:  107:	}
        -:  108:
    #####:  109:static int null_write(BIO *b, const char *in, int inl)
        -:  110:	{
    #####:  111:	return(inl);
        -:  112:	}
        -:  113:
    #####:  114:static long null_ctrl(BIO *b, int cmd, long num, void *ptr)
        -:  115:	{
        -:  116:	long ret=1;
        -:  117:
        -:  118:	switch (cmd)
        -:  119:		{
        -:  120:	case BIO_CTRL_RESET:
        -:  121:	case BIO_CTRL_EOF:
        -:  122:	case BIO_CTRL_SET:
        -:  123:	case BIO_CTRL_SET_CLOSE:
        -:  124:	case BIO_CTRL_FLUSH:
        -:  125:	case BIO_CTRL_DUP:
        -:  126:		ret=1;
        -:  127:		break;
        -:  128:	case BIO_CTRL_GET_CLOSE:
        -:  129:	case BIO_CTRL_INFO:
        -:  130:	case BIO_CTRL_GET:
        -:  131:	case BIO_CTRL_PENDING:
        -:  132:	case BIO_CTRL_WPENDING:
        -:  133:	default:
        -:  134:		ret=0;
    #####:  135:		break;
        -:  136:		}
    #####:  137:	return(ret);
        -:  138:	}
        -:  139:
    #####:  140:static int null_gets(BIO *bp, char *buf, int size)
        -:  141:	{
    #####:  142:	return(0);
        -:  143:	}
        -:  144:
    #####:  145:static int null_puts(BIO *bp, const char *str)
        -:  146:	{
    #####:  147:	if (str == NULL) return(0);
    #####:  148:	return(strlen(str));
        -:  149:	}
        -:  150:
