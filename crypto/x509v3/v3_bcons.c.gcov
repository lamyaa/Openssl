        -:    0:Source:v3_bcons.c
        -:    0:Graph:v3_bcons.gcno
        -:    0:Data:v3_bcons.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* v3_bcons.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:
        -:   60:#include <stdio.h>
        -:   61:#include "cryptlib.h"
        -:   62:#include <openssl/asn1.h>
        -:   63:#include <openssl/asn1t.h>
        -:   64:#include <openssl/conf.h>
        -:   65:#include <openssl/x509v3.h>
        -:   66:
        -:   67:static STACK_OF(CONF_VALUE) *i2v_BASIC_CONSTRAINTS(X509V3_EXT_METHOD *method, BASIC_CONSTRAINTS *bcons, STACK_OF(CONF_VALUE) *extlist);
        -:   68:static BASIC_CONSTRAINTS *v2i_BASIC_CONSTRAINTS(X509V3_EXT_METHOD *method, X509V3_CTX *ctx, STACK_OF(CONF_VALUE) *values);
        -:   69:
        -:   70:const X509V3_EXT_METHOD v3_bcons = {
        -:   71:NID_basic_constraints, 0,
        -:   72:ASN1_ITEM_ref(BASIC_CONSTRAINTS),
        -:   73:0,0,0,0,
        -:   74:0,0,
        -:   75:(X509V3_EXT_I2V)i2v_BASIC_CONSTRAINTS,
        -:   76:(X509V3_EXT_V2I)v2i_BASIC_CONSTRAINTS,
        -:   77:NULL,NULL,
        -:   78:NULL
        -:   79:};
        -:   80:
        -:   81:ASN1_SEQUENCE(BASIC_CONSTRAINTS) = {
        -:   82:	ASN1_OPT(BASIC_CONSTRAINTS, ca, ASN1_FBOOLEAN),
        -:   83:	ASN1_OPT(BASIC_CONSTRAINTS, pathlen, ASN1_INTEGER)
        -:   84:} ASN1_SEQUENCE_END(BASIC_CONSTRAINTS)
        -:   85:
     9699:   86:IMPLEMENT_ASN1_FUNCTIONS(BASIC_CONSTRAINTS)
        -:   87:
        -:   88:
    #####:   89:static STACK_OF(CONF_VALUE) *i2v_BASIC_CONSTRAINTS(X509V3_EXT_METHOD *method,
        -:   90:	     BASIC_CONSTRAINTS *bcons, STACK_OF(CONF_VALUE) *extlist)
        -:   91:{
    #####:   92:	X509V3_add_value_bool("CA", bcons->ca, &extlist);
    #####:   93:	X509V3_add_value_int("pathlen", bcons->pathlen, &extlist);
    #####:   94:	return extlist;
        -:   95:}
        -:   96:
    #####:   97:static BASIC_CONSTRAINTS *v2i_BASIC_CONSTRAINTS(X509V3_EXT_METHOD *method,
        -:   98:	     X509V3_CTX *ctx, STACK_OF(CONF_VALUE) *values)
        -:   99:{
        -:  100:	BASIC_CONSTRAINTS *bcons=NULL;
        -:  101:	CONF_VALUE *val;
        -:  102:	int i;
    #####:  103:	if(!(bcons = BASIC_CONSTRAINTS_new())) {
    #####:  104:		X509V3err(X509V3_F_V2I_BASIC_CONSTRAINTS, ERR_R_MALLOC_FAILURE);
    #####:  105:		return NULL;
        -:  106:	}
    #####:  107:	for(i = 0; i < sk_CONF_VALUE_num(values); i++) {
    #####:  108:		val = sk_CONF_VALUE_value(values, i);
    #####:  109:		if(!strcmp(val->name, "CA")) {
    #####:  110:			if(!X509V3_get_value_bool(val, &bcons->ca)) goto err;
    #####:  111:		} else if(!strcmp(val->name, "pathlen")) {
    #####:  112:			if(!X509V3_get_value_int(val, &bcons->pathlen)) goto err;
        -:  113:		} else {
    #####:  114:			X509V3err(X509V3_F_V2I_BASIC_CONSTRAINTS, X509V3_R_INVALID_NAME);
    #####:  115:			X509V3_conf_err(val);
    #####:  116:			goto err;
        -:  117:		}
        -:  118:	}
        -:  119:	return bcons;
        -:  120:	err:
        -:  121:	BASIC_CONSTRAINTS_free(bcons);
    #####:  122:	return NULL;
        -:  123:}
        -:  124:
