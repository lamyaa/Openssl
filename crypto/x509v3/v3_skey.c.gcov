        -:    0:Source:v3_skey.c
        -:    0:Graph:v3_skey.gcno
        -:    0:Data:v3_skey.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* v3_skey.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:
        -:   60:#include <stdio.h>
        -:   61:#include "cryptlib.h"
        -:   62:#include <openssl/x509v3.h>
        -:   63:
        -:   64:static ASN1_OCTET_STRING *s2i_skey_id(X509V3_EXT_METHOD *method, X509V3_CTX *ctx, char *str);
        -:   65:const X509V3_EXT_METHOD v3_skey_id = { 
        -:   66:NID_subject_key_identifier, 0, ASN1_ITEM_ref(ASN1_OCTET_STRING),
        -:   67:0,0,0,0,
        -:   68:(X509V3_EXT_I2S)i2s_ASN1_OCTET_STRING,
        -:   69:(X509V3_EXT_S2I)s2i_skey_id,
        -:   70:0,0,0,0,
        -:   71:NULL};
        -:   72:
    #####:   73:char *i2s_ASN1_OCTET_STRING(X509V3_EXT_METHOD *method,
        -:   74:	     ASN1_OCTET_STRING *oct)
        -:   75:{
    #####:   76:	return hex_to_string(oct->data, oct->length);
        -:   77:}
        -:   78:
    #####:   79:ASN1_OCTET_STRING *s2i_ASN1_OCTET_STRING(X509V3_EXT_METHOD *method,
        -:   80:	     X509V3_CTX *ctx, char *str)
        -:   81:{
        -:   82:	ASN1_OCTET_STRING *oct;
        -:   83:	long length;
        -:   84:
    #####:   85:	if(!(oct = M_ASN1_OCTET_STRING_new())) {
    #####:   86:		X509V3err(X509V3_F_S2I_ASN1_OCTET_STRING,ERR_R_MALLOC_FAILURE);
    #####:   87:		return NULL;
        -:   88:	}
        -:   89:
    #####:   90:	if(!(oct->data = string_to_hex(str, &length))) {
    #####:   91:		M_ASN1_OCTET_STRING_free(oct);
    #####:   92:		return NULL;
        -:   93:	}
        -:   94:
    #####:   95:	oct->length = length;
        -:   96:
    #####:   97:	return oct;
        -:   98:
        -:   99:}
        -:  100:
    #####:  101:static ASN1_OCTET_STRING *s2i_skey_id(X509V3_EXT_METHOD *method,
        -:  102:	     X509V3_CTX *ctx, char *str)
        -:  103:{
        -:  104:	ASN1_OCTET_STRING *oct;
        -:  105:	ASN1_BIT_STRING *pk;
        -:  106:	unsigned char pkey_dig[EVP_MAX_MD_SIZE];
        -:  107:	unsigned int diglen;
        -:  108:
    #####:  109:	if(strcmp(str, "hash")) return s2i_ASN1_OCTET_STRING(method, ctx, str);
        -:  110:
    #####:  111:	if(!(oct = M_ASN1_OCTET_STRING_new())) {
    #####:  112:		X509V3err(X509V3_F_S2I_SKEY_ID,ERR_R_MALLOC_FAILURE);
    #####:  113:		return NULL;
        -:  114:	}
        -:  115:
    #####:  116:	if(ctx && (ctx->flags == CTX_TEST)) return oct;
        -:  117:
    #####:  118:	if(!ctx || (!ctx->subject_req && !ctx->subject_cert)) {
    #####:  119:		X509V3err(X509V3_F_S2I_SKEY_ID,X509V3_R_NO_PUBLIC_KEY);
    #####:  120:		goto err;
        -:  121:	}
        -:  122:
    #####:  123:	if(ctx->subject_req) 
    #####:  124:		pk = ctx->subject_req->req_info->pubkey->public_key;
    #####:  125:	else pk = ctx->subject_cert->cert_info->key->public_key;
        -:  126:
    #####:  127:	if(!pk) {
    #####:  128:		X509V3err(X509V3_F_S2I_SKEY_ID,X509V3_R_NO_PUBLIC_KEY);
    #####:  129:		goto err;
        -:  130:	}
        -:  131:
    #####:  132:	if (!EVP_Digest(pk->data, pk->length, pkey_dig, &diglen, EVP_sha1(), NULL))
        -:  133:		goto err;
        -:  134:
    #####:  135:	if(!M_ASN1_OCTET_STRING_set(oct, pkey_dig, diglen)) {
    #####:  136:		X509V3err(X509V3_F_S2I_SKEY_ID,ERR_R_MALLOC_FAILURE);
    #####:  137:		goto err;
        -:  138:	}
        -:  139:
        -:  140:	return oct;
        -:  141:	
        -:  142:	err:
    #####:  143:	M_ASN1_OCTET_STRING_free(oct);
    #####:  144:	return NULL;
        -:  145:}
