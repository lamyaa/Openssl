        -:    0:Source:v3_pcons.c
        -:    0:Graph:v3_pcons.gcno
        -:    0:Data:v3_pcons.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* v3_pcons.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 2003 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:
        -:   60:#include <stdio.h>
        -:   61:#include "cryptlib.h"
        -:   62:#include <openssl/asn1.h>
        -:   63:#include <openssl/asn1t.h>
        -:   64:#include <openssl/conf.h>
        -:   65:#include <openssl/x509v3.h>
        -:   66:
        -:   67:static STACK_OF(CONF_VALUE) *
        -:   68:i2v_POLICY_CONSTRAINTS(const X509V3_EXT_METHOD *method, void *bcons,
        -:   69:		       STACK_OF(CONF_VALUE) *extlist);
        -:   70:static void *v2i_POLICY_CONSTRAINTS(const X509V3_EXT_METHOD *method,
        -:   71:				    X509V3_CTX *ctx,
        -:   72:				    STACK_OF(CONF_VALUE) *values);
        -:   73:
        -:   74:const X509V3_EXT_METHOD v3_policy_constraints = {
        -:   75:NID_policy_constraints, 0,
        -:   76:ASN1_ITEM_ref(POLICY_CONSTRAINTS),
        -:   77:0,0,0,0,
        -:   78:0,0,
        -:   79:i2v_POLICY_CONSTRAINTS,
        -:   80:v2i_POLICY_CONSTRAINTS,
        -:   81:NULL,NULL,
        -:   82:NULL
        -:   83:};
        -:   84:
        -:   85:ASN1_SEQUENCE(POLICY_CONSTRAINTS) = {
        -:   86:	ASN1_IMP_OPT(POLICY_CONSTRAINTS, requireExplicitPolicy, ASN1_INTEGER,0),
        -:   87:	ASN1_IMP_OPT(POLICY_CONSTRAINTS, inhibitPolicyMapping, ASN1_INTEGER,1)
        -:   88:} ASN1_SEQUENCE_END(POLICY_CONSTRAINTS)
        -:   89:
    #####:   90:IMPLEMENT_ASN1_ALLOC_FUNCTIONS(POLICY_CONSTRAINTS)
        -:   91:
        -:   92:
        -:   93:static STACK_OF(CONF_VALUE) *
    #####:   94:i2v_POLICY_CONSTRAINTS(const X509V3_EXT_METHOD *method, void *a,
        -:   95:		       STACK_OF(CONF_VALUE) *extlist)
        -:   96:{
        -:   97:	POLICY_CONSTRAINTS *pcons = a;
    #####:   98:	X509V3_add_value_int("Require Explicit Policy",
        -:   99:			pcons->requireExplicitPolicy, &extlist);
    #####:  100:	X509V3_add_value_int("Inhibit Policy Mapping",
        -:  101:			pcons->inhibitPolicyMapping, &extlist);
    #####:  102:	return extlist;
        -:  103:}
        -:  104:
    #####:  105:static void *v2i_POLICY_CONSTRAINTS(const X509V3_EXT_METHOD *method,
        -:  106:				    X509V3_CTX *ctx,
        -:  107:				    STACK_OF(CONF_VALUE) *values)
        -:  108:{
        -:  109:	POLICY_CONSTRAINTS *pcons=NULL;
        -:  110:	CONF_VALUE *val;
        -:  111:	int i;
    #####:  112:	if(!(pcons = POLICY_CONSTRAINTS_new())) {
    #####:  113:		X509V3err(X509V3_F_V2I_POLICY_CONSTRAINTS, ERR_R_MALLOC_FAILURE);
    #####:  114:		return NULL;
        -:  115:	}
    #####:  116:	for(i = 0; i < sk_CONF_VALUE_num(values); i++) {
    #####:  117:		val = sk_CONF_VALUE_value(values, i);
    #####:  118:		if(!strcmp(val->name, "requireExplicitPolicy")) {
    #####:  119:			if(!X509V3_get_value_int(val,
        -:  120:				&pcons->requireExplicitPolicy)) goto err;
    #####:  121:		} else if(!strcmp(val->name, "inhibitPolicyMapping")) {
    #####:  122:			if(!X509V3_get_value_int(val,
        -:  123:				&pcons->inhibitPolicyMapping)) goto err;
        -:  124:		} else {
    #####:  125:			X509V3err(X509V3_F_V2I_POLICY_CONSTRAINTS, X509V3_R_INVALID_NAME);
    #####:  126:			X509V3_conf_err(val);
    #####:  127:			goto err;
        -:  128:		}
        -:  129:	}
    #####:  130:	if (!pcons->inhibitPolicyMapping && !pcons->requireExplicitPolicy) {
    #####:  131:		X509V3err(X509V3_F_V2I_POLICY_CONSTRAINTS, X509V3_R_ILLEGAL_EMPTY_EXTENSION);
    #####:  132:		goto err;
        -:  133:	}
        -:  134:
        -:  135:	return pcons;
        -:  136:	err:
        -:  137:	POLICY_CONSTRAINTS_free(pcons);
    #####:  138:	return NULL;
        -:  139:}
        -:  140:
