        -:    0:Source:v3_bitst.c
        -:    0:Graph:v3_bitst.gcno
        -:    0:Data:v3_bitst.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* v3_bitst.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/conf.h>
        -:   62:#include <openssl/x509v3.h>
        -:   63:
        -:   64:static BIT_STRING_BITNAME ns_cert_type_table[] = {
        -:   65:{0, "SSL Client", "client"},
        -:   66:{1, "SSL Server", "server"},
        -:   67:{2, "S/MIME", "email"},
        -:   68:{3, "Object Signing", "objsign"},
        -:   69:{4, "Unused", "reserved"},
        -:   70:{5, "SSL CA", "sslCA"},
        -:   71:{6, "S/MIME CA", "emailCA"},
        -:   72:{7, "Object Signing CA", "objCA"},
        -:   73:{-1, NULL, NULL}
        -:   74:};
        -:   75:
        -:   76:static BIT_STRING_BITNAME key_usage_type_table[] = {
        -:   77:{0, "Digital Signature", "digitalSignature"},
        -:   78:{1, "Non Repudiation", "nonRepudiation"},
        -:   79:{2, "Key Encipherment", "keyEncipherment"},
        -:   80:{3, "Data Encipherment", "dataEncipherment"},
        -:   81:{4, "Key Agreement", "keyAgreement"},
        -:   82:{5, "Certificate Sign", "keyCertSign"},
        -:   83:{6, "CRL Sign", "cRLSign"},
        -:   84:{7, "Encipher Only", "encipherOnly"},
        -:   85:{8, "Decipher Only", "decipherOnly"},
        -:   86:{-1, NULL, NULL}
        -:   87:};
        -:   88:
        -:   89:
        -:   90:
        -:   91:const X509V3_EXT_METHOD v3_nscert = EXT_BITSTRING(NID_netscape_cert_type, ns_cert_type_table);
        -:   92:const X509V3_EXT_METHOD v3_key_usage = EXT_BITSTRING(NID_key_usage, key_usage_type_table);
        -:   93:
    #####:   94:STACK_OF(CONF_VALUE) *i2v_ASN1_BIT_STRING(X509V3_EXT_METHOD *method,
        -:   95:	     ASN1_BIT_STRING *bits, STACK_OF(CONF_VALUE) *ret)
        -:   96:{
        -:   97:	BIT_STRING_BITNAME *bnam;
    #####:   98:	for(bnam =method->usr_data; bnam->lname; bnam++) {
    #####:   99:		if(ASN1_BIT_STRING_get_bit(bits, bnam->bitnum)) 
    #####:  100:			X509V3_add_value(bnam->lname, NULL, &ret);
        -:  101:	}
    #####:  102:	return ret;
        -:  103:}
        -:  104:	
    #####:  105:ASN1_BIT_STRING *v2i_ASN1_BIT_STRING(X509V3_EXT_METHOD *method,
        -:  106:	     X509V3_CTX *ctx, STACK_OF(CONF_VALUE) *nval)
        -:  107:{
        -:  108:	CONF_VALUE *val;
        -:  109:	ASN1_BIT_STRING *bs;
        -:  110:	int i;
        -:  111:	BIT_STRING_BITNAME *bnam;
    #####:  112:	if(!(bs = M_ASN1_BIT_STRING_new())) {
    #####:  113:		X509V3err(X509V3_F_V2I_ASN1_BIT_STRING,ERR_R_MALLOC_FAILURE);
    #####:  114:		return NULL;
        -:  115:	}
    #####:  116:	for(i = 0; i < sk_CONF_VALUE_num(nval); i++) {
    #####:  117:		val = sk_CONF_VALUE_value(nval, i);
    #####:  118:		for(bnam = method->usr_data; bnam->lname; bnam++) {
    #####:  119:			if(!strcmp(bnam->sname, val->name) ||
    #####:  120:				!strcmp(bnam->lname, val->name) ) {
    #####:  121:				if(!ASN1_BIT_STRING_set_bit(bs, bnam->bitnum, 1)) {
    #####:  122:					X509V3err(X509V3_F_V2I_ASN1_BIT_STRING,
        -:  123:						ERR_R_MALLOC_FAILURE);
    #####:  124:					M_ASN1_BIT_STRING_free(bs);
    #####:  125:					return NULL;
        -:  126:				}
        -:  127:				break;
        -:  128:			}
        -:  129:		}
    #####:  130:		if(!bnam->lname) {
    #####:  131:			X509V3err(X509V3_F_V2I_ASN1_BIT_STRING,
        -:  132:					X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT);
    #####:  133:			X509V3_conf_err(val);
    #####:  134:			M_ASN1_BIT_STRING_free(bs);
    #####:  135:			return NULL;
        -:  136:		}
        -:  137:	}
        -:  138:	return bs;
        -:  139:}
        -:  140:	
        -:  141:
