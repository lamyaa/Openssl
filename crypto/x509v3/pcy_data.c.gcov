        -:    0:Source:pcy_data.c
        -:    0:Graph:pcy_data.gcno
        -:    0:Data:pcy_data.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* pcy_data.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 2004.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 2004 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include "cryptlib.h"
        -:   60:#include <openssl/x509.h>
        -:   61:#include <openssl/x509v3.h>
        -:   62:
        -:   63:#include "pcy_int.h"
        -:   64:
        -:   65:/* Policy Node routines */
        -:   66:
    #####:   67:void policy_data_free(X509_POLICY_DATA *data)
        -:   68:	{
    #####:   69:	ASN1_OBJECT_free(data->valid_policy);
        -:   70:	/* Don't free qualifiers if shared */
    #####:   71:	if (!(data->flags & POLICY_DATA_FLAG_SHARED_QUALIFIERS))
    #####:   72:		sk_POLICYQUALINFO_pop_free(data->qualifier_set,
        -:   73:					POLICYQUALINFO_free);
    #####:   74:	sk_ASN1_OBJECT_pop_free(data->expected_policy_set, ASN1_OBJECT_free);
    #####:   75:	OPENSSL_free(data);
    #####:   76:	}
        -:   77:
        -:   78:/* Create a data based on an existing policy. If 'id' is NULL use the
        -:   79: * oid in the policy, otherwise use 'id'. This behaviour covers the two
        -:   80: * types of data in RFC3280: data with from a CertificatePolcies extension
        -:   81: * and additional data with just the qualifiers of anyPolicy and ID from
        -:   82: * another source.
        -:   83: */
        -:   84:
    #####:   85:X509_POLICY_DATA *policy_data_new(POLICYINFO *policy,
        -:   86:					const ASN1_OBJECT *cid, int crit)
        -:   87:	{
        -:   88:	X509_POLICY_DATA *ret;
        -:   89:	ASN1_OBJECT *id;
    #####:   90:	if (!policy && !cid)
        -:   91:		return NULL;
    #####:   92:	if (cid)
        -:   93:		{
    #####:   94:		id = OBJ_dup(cid);
    #####:   95:		if (!id)
        -:   96:			return NULL;
        -:   97:		}
        -:   98:	else
        -:   99:		id = NULL;
    #####:  100:	ret = OPENSSL_malloc(sizeof(X509_POLICY_DATA));
    #####:  101:	if (!ret)
        -:  102:		return NULL;
    #####:  103:	ret->expected_policy_set = sk_ASN1_OBJECT_new_null();
    #####:  104:	if (!ret->expected_policy_set)
        -:  105:		{
    #####:  106:		OPENSSL_free(ret);
    #####:  107:		if (id)
    #####:  108:			ASN1_OBJECT_free(id);
        -:  109:		return NULL;
        -:  110:		}
        -:  111:
    #####:  112:	if (crit)
    #####:  113:		ret->flags = POLICY_DATA_FLAG_CRITICAL;
        -:  114:	else
    #####:  115:		ret->flags = 0;
        -:  116:
    #####:  117:	if (id)
    #####:  118:		ret->valid_policy = id;
        -:  119:	else
        -:  120:		{
    #####:  121:		ret->valid_policy = policy->policyid;
    #####:  122:		policy->policyid = NULL;
        -:  123:		}
        -:  124:
    #####:  125:	if (policy)
        -:  126:		{
    #####:  127:		ret->qualifier_set = policy->qualifiers;
    #####:  128:		policy->qualifiers = NULL;
        -:  129:		}
        -:  130:	else
    #####:  131:		ret->qualifier_set = NULL;
        -:  132:
    #####:  133:	return ret;
        -:  134:	}
        -:  135:
