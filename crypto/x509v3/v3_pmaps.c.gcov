        -:    0:Source:v3_pmaps.c
        -:    0:Graph:v3_pmaps.gcno
        -:    0:Data:v3_pmaps.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* v3_pmaps.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 2003 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:
        -:   60:#include <stdio.h>
        -:   61:#include "cryptlib.h"
        -:   62:#include <openssl/asn1t.h>
        -:   63:#include <openssl/conf.h>
        -:   64:#include <openssl/x509v3.h>
        -:   65:
        -:   66:static void *v2i_POLICY_MAPPINGS(const X509V3_EXT_METHOD *method,
        -:   67:				 X509V3_CTX *ctx, STACK_OF(CONF_VALUE) *nval);
        -:   68:static STACK_OF(CONF_VALUE) *
        -:   69:i2v_POLICY_MAPPINGS(const X509V3_EXT_METHOD *method, void *pmps,
        -:   70:		    STACK_OF(CONF_VALUE) *extlist);
        -:   71:
        -:   72:const X509V3_EXT_METHOD v3_policy_mappings = {
        -:   73:	NID_policy_mappings, 0,
        -:   74:	ASN1_ITEM_ref(POLICY_MAPPINGS),
        -:   75:	0,0,0,0,
        -:   76:	0,0,
        -:   77:	i2v_POLICY_MAPPINGS,
        -:   78:	v2i_POLICY_MAPPINGS,
        -:   79:	0,0,
        -:   80:	NULL
        -:   81:};
        -:   82:
        -:   83:ASN1_SEQUENCE(POLICY_MAPPING) = {
        -:   84:	ASN1_SIMPLE(POLICY_MAPPING, issuerDomainPolicy, ASN1_OBJECT),
        -:   85:	ASN1_SIMPLE(POLICY_MAPPING, subjectDomainPolicy, ASN1_OBJECT)
        -:   86:} ASN1_SEQUENCE_END(POLICY_MAPPING)
        -:   87:
        -:   88:ASN1_ITEM_TEMPLATE(POLICY_MAPPINGS) = 
        -:   89:	ASN1_EX_TEMPLATE_TYPE(ASN1_TFLG_SEQUENCE_OF, 0, POLICY_MAPPINGS,
        -:   90:								POLICY_MAPPING)
        -:   91:ASN1_ITEM_TEMPLATE_END(POLICY_MAPPINGS)
        -:   92:
    #####:   93:IMPLEMENT_ASN1_ALLOC_FUNCTIONS(POLICY_MAPPING)
        -:   94:
        -:   95:
        -:   96:static STACK_OF(CONF_VALUE) *
    #####:   97:i2v_POLICY_MAPPINGS(const X509V3_EXT_METHOD *method, void *a,
        -:   98:		    STACK_OF(CONF_VALUE) *ext_list)
        -:   99:{
        -:  100:	POLICY_MAPPINGS *pmaps = a;
        -:  101:	POLICY_MAPPING *pmap;
        -:  102:	int i;
        -:  103:	char obj_tmp1[80];
        -:  104:	char obj_tmp2[80];
    #####:  105:	for(i = 0; i < sk_POLICY_MAPPING_num(pmaps); i++) {
    #####:  106:		pmap = sk_POLICY_MAPPING_value(pmaps, i);
    #####:  107:		i2t_ASN1_OBJECT(obj_tmp1, 80, pmap->issuerDomainPolicy);
    #####:  108:		i2t_ASN1_OBJECT(obj_tmp2, 80, pmap->subjectDomainPolicy);
    #####:  109:		X509V3_add_value(obj_tmp1, obj_tmp2, &ext_list);
        -:  110:	}
    #####:  111:	return ext_list;
        -:  112:}
        -:  113:
    #####:  114:static void *v2i_POLICY_MAPPINGS(const X509V3_EXT_METHOD *method,
        -:  115:				 X509V3_CTX *ctx, STACK_OF(CONF_VALUE) *nval)
        -:  116:{
        -:  117:	POLICY_MAPPINGS *pmaps;
        -:  118:	POLICY_MAPPING *pmap;
        -:  119:	ASN1_OBJECT *obj1, *obj2;
        -:  120:	CONF_VALUE *val;
        -:  121:	int i;
        -:  122:
    #####:  123:	if(!(pmaps = sk_POLICY_MAPPING_new_null())) {
    #####:  124:		X509V3err(X509V3_F_V2I_POLICY_MAPPINGS,ERR_R_MALLOC_FAILURE);
    #####:  125:		return NULL;
        -:  126:	}
        -:  127:
    #####:  128:	for(i = 0; i < sk_CONF_VALUE_num(nval); i++) {
    #####:  129:		val = sk_CONF_VALUE_value(nval, i);
    #####:  130:		if(!val->value || !val->name) {
    #####:  131:			sk_POLICY_MAPPING_pop_free(pmaps, POLICY_MAPPING_free);
    #####:  132:			X509V3err(X509V3_F_V2I_POLICY_MAPPINGS,X509V3_R_INVALID_OBJECT_IDENTIFIER);
    #####:  133:			X509V3_conf_err(val);
    #####:  134:			return NULL;
        -:  135:		}
    #####:  136:		obj1 = OBJ_txt2obj(val->name, 0);
    #####:  137:		obj2 = OBJ_txt2obj(val->value, 0);
    #####:  138:		if(!obj1 || !obj2) {
    #####:  139:			sk_POLICY_MAPPING_pop_free(pmaps, POLICY_MAPPING_free);
    #####:  140:			X509V3err(X509V3_F_V2I_POLICY_MAPPINGS,X509V3_R_INVALID_OBJECT_IDENTIFIER);
    #####:  141:			X509V3_conf_err(val);
    #####:  142:			return NULL;
        -:  143:		}
        -:  144:		pmap = POLICY_MAPPING_new();
    #####:  145:		if (!pmap) {
    #####:  146:			sk_POLICY_MAPPING_pop_free(pmaps, POLICY_MAPPING_free);
    #####:  147:			X509V3err(X509V3_F_V2I_POLICY_MAPPINGS,ERR_R_MALLOC_FAILURE);
    #####:  148:			return NULL;
        -:  149:		}
    #####:  150:		pmap->issuerDomainPolicy = obj1;
    #####:  151:		pmap->subjectDomainPolicy = obj2;
    #####:  152:		sk_POLICY_MAPPING_push(pmaps, pmap);
        -:  153:	}
        -:  154:	return pmaps;
        -:  155:}
