        -:    0:Source:e_idea.c
        -:    0:Graph:e_idea.gcno
        -:    0:Data:e_idea.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/evp/e_idea.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:
        -:   62:#ifndef OPENSSL_NO_IDEA
        -:   63:#include <openssl/evp.h>
        -:   64:#include <openssl/objects.h>
        -:   65:#include "evp_locl.h"
        -:   66:#include <openssl/idea.h>
        -:   67:
        -:   68:static int idea_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
        -:   69:			 const unsigned char *iv,int enc);
        -:   70:
        -:   71:/* NB idea_ecb_encrypt doesn't take an 'encrypt' argument so we treat it as a special
        -:   72: * case 
        -:   73: */
        -:   74:
    #####:   75:static int idea_ecb_cipher(EVP_CIPHER_CTX *ctx, unsigned char *out,
        -:   76:			   const unsigned char *in, size_t inl)
        -:   77:{
    #####:   78:	BLOCK_CIPHER_ecb_loop()
    #####:   79:		idea_ecb_encrypt(in + i, out + i, ctx->cipher_data);
        -:   80:	return 1;
        -:   81:}
        -:   82:
        -:   83:/* Can't use IMPLEMENT_BLOCK_CIPHER because idea_ecb_encrypt is different */
        -:   84:
        -:   85:typedef struct
        -:   86:	{
        -:   87:	IDEA_KEY_SCHEDULE ks;
        -:   88:	} EVP_IDEA_KEY;
        -:   89:
    #####:   90:BLOCK_CIPHER_func_cbc(idea, idea, EVP_IDEA_KEY, ks)
    #####:   91:BLOCK_CIPHER_func_ofb(idea, idea, 64, EVP_IDEA_KEY, ks)
    #####:   92:BLOCK_CIPHER_func_cfb(idea, idea, 64, EVP_IDEA_KEY, ks)
        -:   93:
    50000:   94:BLOCK_CIPHER_defs(idea, IDEA_KEY_SCHEDULE, NID_idea, 8, 16, 8, 64,
        -:   95:			0, idea_init_key, NULL, 
        -:   96:			EVP_CIPHER_set_asn1_iv, EVP_CIPHER_get_asn1_iv, NULL)
        -:   97:
    #####:   98:static int idea_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
        -:   99:			 const unsigned char *iv, int enc)
        -:  100:	{
    #####:  101:	if(!enc) {
    #####:  102:		if (EVP_CIPHER_CTX_mode(ctx) == EVP_CIPH_OFB_MODE) enc = 1;
    #####:  103:		else if (EVP_CIPHER_CTX_mode(ctx) == EVP_CIPH_CFB_MODE) enc = 1;
        -:  104:	}
    #####:  105:	if (enc) idea_set_encrypt_key(key,ctx->cipher_data);
        -:  106:	else
        -:  107:		{
        -:  108:		IDEA_KEY_SCHEDULE tmp;
        -:  109:
    #####:  110:		idea_set_encrypt_key(key,&tmp);
    #####:  111:		idea_set_decrypt_key(&tmp,ctx->cipher_data);
    #####:  112:		OPENSSL_cleanse((unsigned char *)&tmp,
        -:  113:				sizeof(IDEA_KEY_SCHEDULE));
        -:  114:		}
    #####:  115:	return 1;
        -:  116:	}
        -:  117:
        -:  118:#endif
