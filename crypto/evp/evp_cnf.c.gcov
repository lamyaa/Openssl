        -:    0:Source:evp_cnf.c
        -:    0:Graph:evp_cnf.gcno
        -:    0:Data:evp_cnf.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* evp_cnf.c */
        -:    2:/* Written by Stephen Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 2007.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 2007 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <ctype.h>
        -:   61:#include <openssl/crypto.h>
        -:   62:#include "cryptlib.h"
        -:   63:#include <openssl/conf.h>
        -:   64:#include <openssl/dso.h>
        -:   65:#include <openssl/x509.h>
        -:   66:#include <openssl/x509v3.h>
        -:   67:#ifdef OPENSSL_FIPS
        -:   68:#include <openssl/fips.h>
        -:   69:#endif
        -:   70:
        -:   71:
        -:   72:/* Algorithm configuration module. */
        -:   73:
    #####:   74:static int alg_module_init(CONF_IMODULE *md, const CONF *cnf)
        -:   75:	{
        -:   76:	int i;
        -:   77:	const char *oid_section;
        -:   78:	STACK_OF(CONF_VALUE) *sktmp;
        -:   79:	CONF_VALUE *oval;
    #####:   80:	oid_section = CONF_imodule_get_value(md);
    #####:   81:	if(!(sktmp = NCONF_get_section(cnf, oid_section)))
        -:   82:		{
    #####:   83:		EVPerr(EVP_F_ALG_MODULE_INIT, EVP_R_ERROR_LOADING_SECTION);
    #####:   84:		return 0;
        -:   85:		}
    #####:   86:	for(i = 0; i < sk_CONF_VALUE_num(sktmp); i++)
        -:   87:		{
    #####:   88:		oval = sk_CONF_VALUE_value(sktmp, i);
    #####:   89:		if (!strcmp(oval->name, "fips_mode"))
        -:   90:			{
        -:   91:			int m;
    #####:   92:			if (!X509V3_get_value_bool(oval, &m))
        -:   93:				{
    #####:   94:				EVPerr(EVP_F_ALG_MODULE_INIT, EVP_R_INVALID_FIPS_MODE);
    #####:   95:				return 0;
        -:   96:				}
    #####:   97:			if (m > 0)
        -:   98:				{
        -:   99:#ifdef OPENSSL_FIPS
        -:  100:				if (!FIPS_mode() && !FIPS_mode_set(1))
        -:  101:					{
        -:  102:					EVPerr(EVP_F_ALG_MODULE_INIT, EVP_R_ERROR_SETTING_FIPS_MODE);
        -:  103:					return 0;
        -:  104:					}
        -:  105:#else
    #####:  106:				EVPerr(EVP_F_ALG_MODULE_INIT, EVP_R_FIPS_MODE_NOT_SUPPORTED);
    #####:  107:				return 0;
        -:  108:#endif
        -:  109:				}
        -:  110:			}
        -:  111:		else
        -:  112:			{
    #####:  113:			EVPerr(EVP_F_ALG_MODULE_INIT, EVP_R_UNKNOWN_OPTION);
    #####:  114:			ERR_add_error_data(4, "name=", oval->name,
        -:  115:						", value=", oval->value);
        -:  116:			}
        -:  117:				
        -:  118:		}
        -:  119:	return 1;
        -:  120:	}
        -:  121:
    10000:  122:void EVP_add_alg_module(void)
        -:  123:	{
    10000:  124:	CONF_module_add("alg_section", alg_module_init, 0);
    10000:  125:	}
