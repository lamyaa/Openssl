        -:    0:Source:e_xcbc_d.c
        -:    0:Graph:e_xcbc_d.gcno
        -:    0:Data:e_xcbc_d.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/evp/e_xcbc_d.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:
        -:   62:#ifndef OPENSSL_NO_DES
        -:   63:
        -:   64:#include <openssl/evp.h>
        -:   65:#include <openssl/objects.h>
        -:   66:#include "evp_locl.h"
        -:   67:#include <openssl/des.h>
        -:   68:
        -:   69:static int desx_cbc_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
        -:   70:			     const unsigned char *iv,int enc);
        -:   71:static int desx_cbc_cipher(EVP_CIPHER_CTX *ctx, unsigned char *out,
        -:   72:			   const unsigned char *in, size_t inl);
        -:   73:
        -:   74:
        -:   75:typedef struct
        -:   76:    {
        -:   77:    DES_key_schedule ks;/* key schedule */
        -:   78:    DES_cblock inw;
        -:   79:    DES_cblock outw;
        -:   80:    } DESX_CBC_KEY;
        -:   81:
        -:   82:#define data(ctx) ((DESX_CBC_KEY *)(ctx)->cipher_data)
        -:   83:
        -:   84:static const EVP_CIPHER d_xcbc_cipher=
        -:   85:	{
        -:   86:	NID_desx_cbc,
        -:   87:	8,24,8,
        -:   88:	EVP_CIPH_CBC_MODE,
        -:   89:	desx_cbc_init_key,
        -:   90:	desx_cbc_cipher,
        -:   91:	NULL,
        -:   92:	sizeof(DESX_CBC_KEY),
        -:   93:	EVP_CIPHER_set_asn1_iv,
        -:   94:	EVP_CIPHER_get_asn1_iv,
        -:   95:	NULL,
        -:   96:	NULL
        -:   97:	};
        -:   98:
    10000:   99:const EVP_CIPHER *EVP_desx_cbc(void)
        -:  100:	{
    10000:  101:	return(&d_xcbc_cipher);
        -:  102:	}
        -:  103:	
    #####:  104:static int desx_cbc_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
        -:  105:			     const unsigned char *iv, int enc)
        -:  106:	{
        -:  107:	DES_cblock *deskey = (DES_cblock *)key;
        -:  108:
    #####:  109:	DES_set_key_unchecked(deskey,&data(ctx)->ks);
    #####:  110:	memcpy(&data(ctx)->inw[0],&key[8],8);
    #####:  111:	memcpy(&data(ctx)->outw[0],&key[16],8);
        -:  112:
    #####:  113:	return 1;
        -:  114:	}
        -:  115:
    #####:  116:static int desx_cbc_cipher(EVP_CIPHER_CTX *ctx, unsigned char *out,
        -:  117:			   const unsigned char *in, size_t inl)
        -:  118:	{
    #####:  119:	while (inl>=EVP_MAXCHUNK)
        -:  120:		{
    #####:  121:		DES_xcbc_encrypt(in,out,(long)EVP_MAXCHUNK,&data(ctx)->ks,
    #####:  122:			 (DES_cblock *)&(ctx->iv[0]),
    #####:  123:			 &data(ctx)->inw,
    #####:  124:			 &data(ctx)->outw,
        -:  125:			 ctx->encrypt);
    #####:  126:		inl-=EVP_MAXCHUNK;
    #####:  127:		in +=EVP_MAXCHUNK;
    #####:  128:		out+=EVP_MAXCHUNK;
        -:  129:		}
    #####:  130:	if (inl)
    #####:  131:		DES_xcbc_encrypt(in,out,(long)inl,&data(ctx)->ks,
    #####:  132:			(DES_cblock *)&(ctx->iv[0]),
    #####:  133:			&data(ctx)->inw,
    #####:  134:			&data(ctx)->outw,
        -:  135:			ctx->encrypt);
    #####:  136:	return 1;
        -:  137:	}
        -:  138:#endif
