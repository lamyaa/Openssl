        -:    0:Source:c_allc.c
        -:    0:Graph:c_allc.gcno
        -:    0:Data:c_allc.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/evp/c_allc.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/evp.h>
        -:   62:#include <openssl/pkcs12.h>
        -:   63:#include <openssl/objects.h>
        -:   64:
    10000:   65:void OpenSSL_add_all_ciphers(void)
        -:   66:	{
        -:   67:
        -:   68:#ifndef OPENSSL_NO_DES
    10000:   69:	EVP_add_cipher(EVP_des_cfb());
    10000:   70:	EVP_add_cipher(EVP_des_cfb1());
    10000:   71:	EVP_add_cipher(EVP_des_cfb8());
    10000:   72:	EVP_add_cipher(EVP_des_ede_cfb());
    10000:   73:	EVP_add_cipher(EVP_des_ede3_cfb());
    10000:   74:	EVP_add_cipher(EVP_des_ede3_cfb1());
    10000:   75:	EVP_add_cipher(EVP_des_ede3_cfb8());
        -:   76:
    10000:   77:	EVP_add_cipher(EVP_des_ofb());
    10000:   78:	EVP_add_cipher(EVP_des_ede_ofb());
    10000:   79:	EVP_add_cipher(EVP_des_ede3_ofb());
        -:   80:
    10000:   81:	EVP_add_cipher(EVP_desx_cbc());
    10000:   82:	EVP_add_cipher_alias(SN_desx_cbc,"DESX");
    10000:   83:	EVP_add_cipher_alias(SN_desx_cbc,"desx");
        -:   84:
    10000:   85:	EVP_add_cipher(EVP_des_cbc());
    10000:   86:	EVP_add_cipher_alias(SN_des_cbc,"DES");
    10000:   87:	EVP_add_cipher_alias(SN_des_cbc,"des");
    10000:   88:	EVP_add_cipher(EVP_des_ede_cbc());
    10000:   89:	EVP_add_cipher(EVP_des_ede3_cbc());
    10000:   90:	EVP_add_cipher_alias(SN_des_ede3_cbc,"DES3");
    10000:   91:	EVP_add_cipher_alias(SN_des_ede3_cbc,"des3");
        -:   92:
    10000:   93:	EVP_add_cipher(EVP_des_ecb());
    10000:   94:	EVP_add_cipher(EVP_des_ede());
    10000:   95:	EVP_add_cipher(EVP_des_ede3());
        -:   96:#endif
        -:   97:
        -:   98:#ifndef OPENSSL_NO_RC4
    10000:   99:	EVP_add_cipher(EVP_rc4());
    10000:  100:	EVP_add_cipher(EVP_rc4_40());
        -:  101:#ifndef OPENSSL_NO_MD5
    10000:  102:	EVP_add_cipher(EVP_rc4_hmac_md5());
        -:  103:#endif
        -:  104:#endif
        -:  105:
        -:  106:#ifndef OPENSSL_NO_IDEA
    10000:  107:	EVP_add_cipher(EVP_idea_ecb());
    10000:  108:	EVP_add_cipher(EVP_idea_cfb());
    10000:  109:	EVP_add_cipher(EVP_idea_ofb());
    10000:  110:	EVP_add_cipher(EVP_idea_cbc());
    10000:  111:	EVP_add_cipher_alias(SN_idea_cbc,"IDEA");
    10000:  112:	EVP_add_cipher_alias(SN_idea_cbc,"idea");
        -:  113:#endif
        -:  114:
        -:  115:#ifndef OPENSSL_NO_SEED
    10000:  116:	EVP_add_cipher(EVP_seed_ecb());
    10000:  117:	EVP_add_cipher(EVP_seed_cfb());
    10000:  118:	EVP_add_cipher(EVP_seed_ofb());
    10000:  119:	EVP_add_cipher(EVP_seed_cbc());
    10000:  120:	EVP_add_cipher_alias(SN_seed_cbc,"SEED");
    10000:  121:	EVP_add_cipher_alias(SN_seed_cbc,"seed");
        -:  122:#endif
        -:  123:
        -:  124:#ifndef OPENSSL_NO_RC2
    10000:  125:	EVP_add_cipher(EVP_rc2_ecb());
    10000:  126:	EVP_add_cipher(EVP_rc2_cfb());
    10000:  127:	EVP_add_cipher(EVP_rc2_ofb());
    10000:  128:	EVP_add_cipher(EVP_rc2_cbc());
    10000:  129:	EVP_add_cipher(EVP_rc2_40_cbc());
    10000:  130:	EVP_add_cipher(EVP_rc2_64_cbc());
    10000:  131:	EVP_add_cipher_alias(SN_rc2_cbc,"RC2");
    10000:  132:	EVP_add_cipher_alias(SN_rc2_cbc,"rc2");
        -:  133:#endif
        -:  134:
        -:  135:#ifndef OPENSSL_NO_BF
    10000:  136:	EVP_add_cipher(EVP_bf_ecb());
    10000:  137:	EVP_add_cipher(EVP_bf_cfb());
    10000:  138:	EVP_add_cipher(EVP_bf_ofb());
    10000:  139:	EVP_add_cipher(EVP_bf_cbc());
    10000:  140:	EVP_add_cipher_alias(SN_bf_cbc,"BF");
    10000:  141:	EVP_add_cipher_alias(SN_bf_cbc,"bf");
    10000:  142:	EVP_add_cipher_alias(SN_bf_cbc,"blowfish");
        -:  143:#endif
        -:  144:
        -:  145:#ifndef OPENSSL_NO_CAST
    10000:  146:	EVP_add_cipher(EVP_cast5_ecb());
    10000:  147:	EVP_add_cipher(EVP_cast5_cfb());
    10000:  148:	EVP_add_cipher(EVP_cast5_ofb());
    10000:  149:	EVP_add_cipher(EVP_cast5_cbc());
    10000:  150:	EVP_add_cipher_alias(SN_cast5_cbc,"CAST");
    10000:  151:	EVP_add_cipher_alias(SN_cast5_cbc,"cast");
    10000:  152:	EVP_add_cipher_alias(SN_cast5_cbc,"CAST-cbc");
    10000:  153:	EVP_add_cipher_alias(SN_cast5_cbc,"cast-cbc");
        -:  154:#endif
        -:  155:
        -:  156:#ifndef OPENSSL_NO_RC5
        -:  157:	EVP_add_cipher(EVP_rc5_32_12_16_ecb());
        -:  158:	EVP_add_cipher(EVP_rc5_32_12_16_cfb());
        -:  159:	EVP_add_cipher(EVP_rc5_32_12_16_ofb());
        -:  160:	EVP_add_cipher(EVP_rc5_32_12_16_cbc());
        -:  161:	EVP_add_cipher_alias(SN_rc5_cbc,"rc5");
        -:  162:	EVP_add_cipher_alias(SN_rc5_cbc,"RC5");
        -:  163:#endif
        -:  164:
        -:  165:#ifndef OPENSSL_NO_AES
    10000:  166:	EVP_add_cipher(EVP_aes_128_ecb());
    10000:  167:	EVP_add_cipher(EVP_aes_128_cbc());
    10000:  168:	EVP_add_cipher(EVP_aes_128_cfb());
    10000:  169:	EVP_add_cipher(EVP_aes_128_cfb1());
    10000:  170:	EVP_add_cipher(EVP_aes_128_cfb8());
    10000:  171:	EVP_add_cipher(EVP_aes_128_ofb());
    10000:  172:	EVP_add_cipher(EVP_aes_128_ctr());
    10000:  173:	EVP_add_cipher(EVP_aes_128_gcm());
    10000:  174:	EVP_add_cipher(EVP_aes_128_xts());
    10000:  175:	EVP_add_cipher_alias(SN_aes_128_cbc,"AES128");
    10000:  176:	EVP_add_cipher_alias(SN_aes_128_cbc,"aes128");
    10000:  177:	EVP_add_cipher(EVP_aes_192_ecb());
    10000:  178:	EVP_add_cipher(EVP_aes_192_cbc());
    10000:  179:	EVP_add_cipher(EVP_aes_192_cfb());
    10000:  180:	EVP_add_cipher(EVP_aes_192_cfb1());
    10000:  181:	EVP_add_cipher(EVP_aes_192_cfb8());
    10000:  182:	EVP_add_cipher(EVP_aes_192_ofb());
    10000:  183:	EVP_add_cipher(EVP_aes_192_ctr());
    10000:  184:	EVP_add_cipher(EVP_aes_192_gcm());
    10000:  185:	EVP_add_cipher_alias(SN_aes_192_cbc,"AES192");
    10000:  186:	EVP_add_cipher_alias(SN_aes_192_cbc,"aes192");
    10000:  187:	EVP_add_cipher(EVP_aes_256_ecb());
    10000:  188:	EVP_add_cipher(EVP_aes_256_cbc());
    10000:  189:	EVP_add_cipher(EVP_aes_256_cfb());
    10000:  190:	EVP_add_cipher(EVP_aes_256_cfb1());
    10000:  191:	EVP_add_cipher(EVP_aes_256_cfb8());
    10000:  192:	EVP_add_cipher(EVP_aes_256_ofb());
    10000:  193:	EVP_add_cipher(EVP_aes_256_ctr());
    10000:  194:	EVP_add_cipher(EVP_aes_256_gcm());
    10000:  195:	EVP_add_cipher(EVP_aes_256_xts());
    10000:  196:	EVP_add_cipher_alias(SN_aes_256_cbc,"AES256");
    10000:  197:	EVP_add_cipher_alias(SN_aes_256_cbc,"aes256");
        -:  198:#if !defined(OPENSSL_NO_SHA) && !defined(OPENSSL_NO_SHA1)
    10000:  199:	EVP_add_cipher(EVP_aes_128_cbc_hmac_sha1());
    10000:  200:	EVP_add_cipher(EVP_aes_256_cbc_hmac_sha1());
        -:  201:#endif
        -:  202:#endif
        -:  203:
        -:  204:#ifndef OPENSSL_NO_CAMELLIA
    10000:  205:	EVP_add_cipher(EVP_camellia_128_ecb());
    10000:  206:	EVP_add_cipher(EVP_camellia_128_cbc());
    10000:  207:	EVP_add_cipher(EVP_camellia_128_cfb());
    10000:  208:	EVP_add_cipher(EVP_camellia_128_cfb1());
    10000:  209:	EVP_add_cipher(EVP_camellia_128_cfb8());
    10000:  210:	EVP_add_cipher(EVP_camellia_128_ofb());
    10000:  211:	EVP_add_cipher_alias(SN_camellia_128_cbc,"CAMELLIA128");
    10000:  212:	EVP_add_cipher_alias(SN_camellia_128_cbc,"camellia128");
    10000:  213:	EVP_add_cipher(EVP_camellia_192_ecb());
    10000:  214:	EVP_add_cipher(EVP_camellia_192_cbc());
    10000:  215:	EVP_add_cipher(EVP_camellia_192_cfb());
    10000:  216:	EVP_add_cipher(EVP_camellia_192_cfb1());
    10000:  217:	EVP_add_cipher(EVP_camellia_192_cfb8());
    10000:  218:	EVP_add_cipher(EVP_camellia_192_ofb());
    10000:  219:	EVP_add_cipher_alias(SN_camellia_192_cbc,"CAMELLIA192");
    10000:  220:	EVP_add_cipher_alias(SN_camellia_192_cbc,"camellia192");
    10000:  221:	EVP_add_cipher(EVP_camellia_256_ecb());
    10000:  222:	EVP_add_cipher(EVP_camellia_256_cbc());
    10000:  223:	EVP_add_cipher(EVP_camellia_256_cfb());
    10000:  224:	EVP_add_cipher(EVP_camellia_256_cfb1());
    10000:  225:	EVP_add_cipher(EVP_camellia_256_cfb8());
    10000:  226:	EVP_add_cipher(EVP_camellia_256_ofb());
    10000:  227:	EVP_add_cipher_alias(SN_camellia_256_cbc,"CAMELLIA256");
    10000:  228:	EVP_add_cipher_alias(SN_camellia_256_cbc,"camellia256");
        -:  229:#endif
    10000:  230:	}
