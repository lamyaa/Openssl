        -:    0:Source:cms_io.c
        -:    0:Graph:cms_io.gcno
        -:    0:Data:cms_io.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/cms/cms_io.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 2008 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: */
        -:   53:
        -:   54:#include <openssl/asn1t.h>
        -:   55:#include <openssl/x509.h>
        -:   56:#include <openssl/err.h>
        -:   57:#include <openssl/pem.h>
        -:   58:#include "cms.h"
        -:   59:#include "cms_lcl.h"
        -:   60:
    #####:   61:int CMS_stream(unsigned char ***boundary, CMS_ContentInfo *cms)
        -:   62:	{
        -:   63:	ASN1_OCTET_STRING **pos;
    #####:   64:	pos = CMS_get0_content(cms);
    #####:   65:	if (!pos)
        -:   66:		return 0;
    #####:   67:	if (!*pos)
    #####:   68:		*pos = ASN1_OCTET_STRING_new();
    #####:   69:	if (*pos)
        -:   70:		{
    #####:   71:		(*pos)->flags |= ASN1_STRING_FLAG_NDEF;
    #####:   72:		(*pos)->flags &= ~ASN1_STRING_FLAG_CONT;
    #####:   73:		*boundary = &(*pos)->data;
    #####:   74:		return 1;
        -:   75:		}
    #####:   76:	CMSerr(CMS_F_CMS_STREAM, ERR_R_MALLOC_FAILURE);
    #####:   77:	return 0;
        -:   78:	}
        -:   79:
    #####:   80:CMS_ContentInfo *d2i_CMS_bio(BIO *bp, CMS_ContentInfo **cms)
        -:   81:	{
    #####:   82:	return ASN1_item_d2i_bio(ASN1_ITEM_rptr(CMS_ContentInfo), bp, cms);
        -:   83:	}
        -:   84:
    #####:   85:int i2d_CMS_bio(BIO *bp, CMS_ContentInfo *cms)
        -:   86:	{
    #####:   87:	return ASN1_item_i2d_bio(ASN1_ITEM_rptr(CMS_ContentInfo), bp, cms);
        -:   88:	}
        -:   89:
    #####:   90:IMPLEMENT_PEM_rw_const(CMS, CMS_ContentInfo, PEM_STRING_CMS, CMS_ContentInfo)
        -:   91:
    #####:   92:BIO *BIO_new_CMS(BIO *out, CMS_ContentInfo *cms) 
        -:   93:	{
    #####:   94:	return BIO_new_NDEF(out, (ASN1_VALUE *)cms,
        -:   95:				ASN1_ITEM_rptr(CMS_ContentInfo));
        -:   96:	}
        -:   97:
        -:   98:/* CMS wrappers round generalised stream and MIME routines */
        -:   99:
    #####:  100:int i2d_CMS_bio_stream(BIO *out, CMS_ContentInfo *cms, BIO *in, int flags)
        -:  101:	{
    #####:  102:	return i2d_ASN1_bio_stream(out, (ASN1_VALUE *)cms, in, flags,
        -:  103:					ASN1_ITEM_rptr(CMS_ContentInfo));
        -:  104:	}
        -:  105:
    #####:  106:int PEM_write_bio_CMS_stream(BIO *out, CMS_ContentInfo *cms, BIO *in, int flags)
        -:  107:	{
    #####:  108:	return PEM_write_bio_ASN1_stream(out, (ASN1_VALUE *) cms, in, flags,
        -:  109:					"CMS",
        -:  110:					ASN1_ITEM_rptr(CMS_ContentInfo));
        -:  111:	}
        -:  112:
    #####:  113:int SMIME_write_CMS(BIO *bio, CMS_ContentInfo *cms, BIO *data, int flags)
        -:  114:	{
        -:  115:	STACK_OF(X509_ALGOR) *mdalgs;
    #####:  116:	int ctype_nid = OBJ_obj2nid(cms->contentType);
    #####:  117:	int econt_nid = OBJ_obj2nid(CMS_get0_eContentType(cms));
    #####:  118:	if (ctype_nid == NID_pkcs7_signed)
    #####:  119:		mdalgs = cms->d.signedData->digestAlgorithms;
        -:  120:	else
        -:  121:		mdalgs = NULL;
        -:  122:
    #####:  123:	return SMIME_write_ASN1(bio, (ASN1_VALUE *)cms, data, flags,
        -:  124:					ctype_nid, econt_nid, mdalgs,
        -:  125:					ASN1_ITEM_rptr(CMS_ContentInfo));	
        -:  126:	}
        -:  127:
    #####:  128:CMS_ContentInfo *SMIME_read_CMS(BIO *bio, BIO **bcont)
        -:  129:	{
    #####:  130:	return (CMS_ContentInfo *)SMIME_read_ASN1(bio, bcont,
        -:  131:					ASN1_ITEM_rptr(CMS_ContentInfo));
        -:  132:	}
        -:  133:
