        -:    0:Source:x509_set.c
        -:    0:Graph:x509_set.gcno
        -:    0:Data:x509_set.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/x509/x509_set.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/asn1.h>
        -:   62:#include <openssl/objects.h>
        -:   63:#include <openssl/evp.h>
        -:   64:#include <openssl/x509.h>
        -:   65:
    #####:   66:int X509_set_version(X509 *x, long version)
        -:   67:	{
    #####:   68:	if (x == NULL) return(0);
    #####:   69:	if (x->cert_info->version == NULL)
        -:   70:		{
    #####:   71:		if ((x->cert_info->version=M_ASN1_INTEGER_new()) == NULL)
        -:   72:			return(0);
        -:   73:		}
    #####:   74:	return(ASN1_INTEGER_set(x->cert_info->version,version));
        -:   75:	}
        -:   76:
    #####:   77:int X509_set_serialNumber(X509 *x, ASN1_INTEGER *serial)
        -:   78:	{
        -:   79:	ASN1_INTEGER *in;
        -:   80:
    #####:   81:	if (x == NULL) return(0);
    #####:   82:	in=x->cert_info->serialNumber;
    #####:   83:	if (in != serial)
        -:   84:		{
    #####:   85:		in=M_ASN1_INTEGER_dup(serial);
    #####:   86:		if (in != NULL)
        -:   87:			{
    #####:   88:			M_ASN1_INTEGER_free(x->cert_info->serialNumber);
    #####:   89:			x->cert_info->serialNumber=in;
        -:   90:			}
        -:   91:		}
    #####:   92:	return(in != NULL);
        -:   93:	}
        -:   94:
    #####:   95:int X509_set_issuer_name(X509 *x, X509_NAME *name)
        -:   96:	{
    #####:   97:	if ((x == NULL) || (x->cert_info == NULL)) return(0);
    #####:   98:	return(X509_NAME_set(&x->cert_info->issuer,name));
        -:   99:	}
        -:  100:
    #####:  101:int X509_set_subject_name(X509 *x, X509_NAME *name)
        -:  102:	{
    #####:  103:	if ((x == NULL) || (x->cert_info == NULL)) return(0);
    #####:  104:	return(X509_NAME_set(&x->cert_info->subject,name));
        -:  105:	}
        -:  106:
    #####:  107:int X509_set_notBefore(X509 *x, const ASN1_TIME *tm)
        -:  108:	{
        -:  109:	ASN1_TIME *in;
        -:  110:
    #####:  111:	if ((x == NULL) || (x->cert_info->validity == NULL)) return(0);
    #####:  112:	in=x->cert_info->validity->notBefore;
    #####:  113:	if (in != tm)
        -:  114:		{
    #####:  115:		in=M_ASN1_TIME_dup(tm);
    #####:  116:		if (in != NULL)
        -:  117:			{
    #####:  118:			M_ASN1_TIME_free(x->cert_info->validity->notBefore);
    #####:  119:			x->cert_info->validity->notBefore=in;
        -:  120:			}
        -:  121:		}
    #####:  122:	return(in != NULL);
        -:  123:	}
        -:  124:
    #####:  125:int X509_set_notAfter(X509 *x, const ASN1_TIME *tm)
        -:  126:	{
        -:  127:	ASN1_TIME *in;
        -:  128:
    #####:  129:	if ((x == NULL) || (x->cert_info->validity == NULL)) return(0);
    #####:  130:	in=x->cert_info->validity->notAfter;
    #####:  131:	if (in != tm)
        -:  132:		{
    #####:  133:		in=M_ASN1_TIME_dup(tm);
    #####:  134:		if (in != NULL)
        -:  135:			{
    #####:  136:			M_ASN1_TIME_free(x->cert_info->validity->notAfter);
    #####:  137:			x->cert_info->validity->notAfter=in;
        -:  138:			}
        -:  139:		}
    #####:  140:	return(in != NULL);
        -:  141:	}
        -:  142:
    #####:  143:int X509_set_pubkey(X509 *x, EVP_PKEY *pkey)
        -:  144:	{
    #####:  145:	if ((x == NULL) || (x->cert_info == NULL)) return(0);
    #####:  146:	return(X509_PUBKEY_set(&(x->cert_info->key),pkey));
        -:  147:	}
        -:  148:
        -:  149:
        -:  150:
