        -:    0:Source:x509_ext.c
        -:    0:Graph:x509_ext.gcno
        -:    0:Data:x509_ext.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/x509/x509_ext.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <openssl/stack.h>
        -:   61:#include "cryptlib.h"
        -:   62:#include <openssl/asn1.h>
        -:   63:#include <openssl/objects.h>
        -:   64:#include <openssl/evp.h>
        -:   65:#include <openssl/x509.h>
        -:   66:#include <openssl/x509v3.h>
        -:   67:
        -:   68:
    #####:   69:int X509_CRL_get_ext_count(X509_CRL *x)
        -:   70:	{
    #####:   71:	return(X509v3_get_ext_count(x->crl->extensions));
        -:   72:	}
        -:   73:
    #####:   74:int X509_CRL_get_ext_by_NID(X509_CRL *x, int nid, int lastpos)
        -:   75:	{
    #####:   76:	return(X509v3_get_ext_by_NID(x->crl->extensions,nid,lastpos));
        -:   77:	}
        -:   78:
    #####:   79:int X509_CRL_get_ext_by_OBJ(X509_CRL *x, ASN1_OBJECT *obj, int lastpos)
        -:   80:	{
    #####:   81:	return(X509v3_get_ext_by_OBJ(x->crl->extensions,obj,lastpos));
        -:   82:	}
        -:   83:
    #####:   84:int X509_CRL_get_ext_by_critical(X509_CRL *x, int crit, int lastpos)
        -:   85:	{
    #####:   86:	return(X509v3_get_ext_by_critical(x->crl->extensions,crit,lastpos));
        -:   87:	}
        -:   88:
    #####:   89:X509_EXTENSION *X509_CRL_get_ext(X509_CRL *x, int loc)
        -:   90:	{
    #####:   91:	return(X509v3_get_ext(x->crl->extensions,loc));
        -:   92:	}
        -:   93:
    #####:   94:X509_EXTENSION *X509_CRL_delete_ext(X509_CRL *x, int loc)
        -:   95:	{
    #####:   96:	return(X509v3_delete_ext(x->crl->extensions,loc));
        -:   97:	}
        -:   98:
    #####:   99:void *X509_CRL_get_ext_d2i(X509_CRL *x, int nid, int *crit, int *idx)
        -:  100:{
    #####:  101:	return X509V3_get_d2i(x->crl->extensions, nid, crit, idx);
        -:  102:}
        -:  103:
    #####:  104:int X509_CRL_add1_ext_i2d(X509_CRL *x, int nid, void *value, int crit,
        -:  105:							unsigned long flags)
        -:  106:{
    #####:  107:	return X509V3_add1_i2d(&x->crl->extensions, nid, value, crit, flags);
        -:  108:}
        -:  109:
    #####:  110:int X509_CRL_add_ext(X509_CRL *x, X509_EXTENSION *ex, int loc)
        -:  111:	{
    #####:  112:	return(X509v3_add_ext(&(x->crl->extensions),ex,loc) != NULL);
        -:  113:	}
        -:  114:
    84977:  115:int X509_get_ext_count(X509 *x)
        -:  116:	{
    84977:  117:	return(X509v3_get_ext_count(x->cert_info->extensions));
        -:  118:	}
        -:  119:
    #####:  120:int X509_get_ext_by_NID(X509 *x, int nid, int lastpos)
        -:  121:	{
    #####:  122:	return(X509v3_get_ext_by_NID(x->cert_info->extensions,nid,lastpos));
        -:  123:	}
        -:  124:
    #####:  125:int X509_get_ext_by_OBJ(X509 *x, ASN1_OBJECT *obj, int lastpos)
        -:  126:	{
    #####:  127:	return(X509v3_get_ext_by_OBJ(x->cert_info->extensions,obj,lastpos));
        -:  128:	}
        -:  129:
    #####:  130:int X509_get_ext_by_critical(X509 *x, int crit, int lastpos)
        -:  131:	{
    #####:  132:	return(X509v3_get_ext_by_critical(x->cert_info->extensions,crit,lastpos));
        -:  133:	}
        -:  134:
    74331:  135:X509_EXTENSION *X509_get_ext(X509 *x, int loc)
        -:  136:	{
    74331:  137:	return(X509v3_get_ext(x->cert_info->extensions,loc));
        -:  138:	}
        -:  139:
    #####:  140:X509_EXTENSION *X509_delete_ext(X509 *x, int loc)
        -:  141:	{
    #####:  142:	return(X509v3_delete_ext(x->cert_info->extensions,loc));
        -:  143:	}
        -:  144:
    #####:  145:int X509_add_ext(X509 *x, X509_EXTENSION *ex, int loc)
        -:  146:	{
    #####:  147:	return(X509v3_add_ext(&(x->cert_info->extensions),ex,loc) != NULL);
        -:  148:	}
        -:  149:
   271440:  150:void *X509_get_ext_d2i(X509 *x, int nid, int *crit, int *idx)
        -:  151:{
   271440:  152:	return X509V3_get_d2i(x->cert_info->extensions, nid, crit, idx);
        -:  153:}
        -:  154:
    #####:  155:int X509_add1_ext_i2d(X509 *x, int nid, void *value, int crit,
        -:  156:							unsigned long flags)
        -:  157:{
    #####:  158:	return X509V3_add1_i2d(&x->cert_info->extensions, nid, value, crit,
        -:  159:							flags);
        -:  160:}
        -:  161:
    #####:  162:int X509_REVOKED_get_ext_count(X509_REVOKED *x)
        -:  163:	{
    #####:  164:	return(X509v3_get_ext_count(x->extensions));
        -:  165:	}
        -:  166:
    #####:  167:int X509_REVOKED_get_ext_by_NID(X509_REVOKED *x, int nid, int lastpos)
        -:  168:	{
    #####:  169:	return(X509v3_get_ext_by_NID(x->extensions,nid,lastpos));
        -:  170:	}
        -:  171:
    #####:  172:int X509_REVOKED_get_ext_by_OBJ(X509_REVOKED *x, ASN1_OBJECT *obj,
        -:  173:	     int lastpos)
        -:  174:	{
    #####:  175:	return(X509v3_get_ext_by_OBJ(x->extensions,obj,lastpos));
        -:  176:	}
        -:  177:
    #####:  178:int X509_REVOKED_get_ext_by_critical(X509_REVOKED *x, int crit, int lastpos)
        -:  179:	{
    #####:  180:	return(X509v3_get_ext_by_critical(x->extensions,crit,lastpos));
        -:  181:	}
        -:  182:
    #####:  183:X509_EXTENSION *X509_REVOKED_get_ext(X509_REVOKED *x, int loc)
        -:  184:	{
    #####:  185:	return(X509v3_get_ext(x->extensions,loc));
        -:  186:	}
        -:  187:
    #####:  188:X509_EXTENSION *X509_REVOKED_delete_ext(X509_REVOKED *x, int loc)
        -:  189:	{
    #####:  190:	return(X509v3_delete_ext(x->extensions,loc));
        -:  191:	}
        -:  192:
    #####:  193:int X509_REVOKED_add_ext(X509_REVOKED *x, X509_EXTENSION *ex, int loc)
        -:  194:	{
    #####:  195:	return(X509v3_add_ext(&(x->extensions),ex,loc) != NULL);
        -:  196:	}
        -:  197:
    #####:  198:void *X509_REVOKED_get_ext_d2i(X509_REVOKED *x, int nid, int *crit, int *idx)
        -:  199:{
    #####:  200:	return X509V3_get_d2i(x->extensions, nid, crit, idx);
        -:  201:}
        -:  202:
    #####:  203:int X509_REVOKED_add1_ext_i2d(X509_REVOKED *x, int nid, void *value, int crit,
        -:  204:							unsigned long flags)
        -:  205:{
    #####:  206:	return X509V3_add1_i2d(&x->extensions, nid, value, crit, flags);
        -:  207:}
        -:  208:
        -:  209:IMPLEMENT_STACK_OF(X509_EXTENSION)
        -:  210:IMPLEMENT_ASN1_SET_OF(X509_EXTENSION)
