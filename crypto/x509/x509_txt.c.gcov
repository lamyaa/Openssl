        -:    0:Source:x509_txt.c
        -:    0:Graph:x509_txt.gcno
        -:    0:Data:x509_txt.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/x509/x509_txt.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <time.h>
        -:   61:#include <errno.h>
        -:   62:
        -:   63:#include "cryptlib.h"
        -:   64:#include <openssl/lhash.h>
        -:   65:#include <openssl/buffer.h>
        -:   66:#include <openssl/evp.h>
        -:   67:#include <openssl/asn1.h>
        -:   68:#include <openssl/x509.h>
        -:   69:#include <openssl/objects.h>
        -:   70:
    29839:   71:const char *X509_verify_cert_error_string(long n)
        -:   72:	{
        -:   73:	static char buf[100];
        -:   74:
    29839:   75:	switch ((int)n)
        -:   76:		{
        -:   77:	case X509_V_OK:
        -:   78:		return("ok");
        -:   79:	case X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT:
    #####:   80:		return("unable to get issuer certificate");
        -:   81:	case X509_V_ERR_UNABLE_TO_GET_CRL:
    #####:   82:		return("unable to get certificate CRL");
        -:   83:	case X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE:
    #####:   84:		return("unable to decrypt certificate's signature");
        -:   85:	case X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE:
    #####:   86:		return("unable to decrypt CRL's signature");
        -:   87:	case X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY:
    #####:   88:		return("unable to decode issuer public key");
        -:   89:	case X509_V_ERR_CERT_SIGNATURE_FAILURE:
    #####:   90:		return("certificate signature failure");
        -:   91:	case X509_V_ERR_CRL_SIGNATURE_FAILURE:
    #####:   92:		return("CRL signature failure");
        -:   93:	case X509_V_ERR_CERT_NOT_YET_VALID:
    #####:   94:		return("certificate is not yet valid");
        -:   95:	case X509_V_ERR_CRL_NOT_YET_VALID:
    #####:   96:		return("CRL is not yet valid");
        -:   97:	case X509_V_ERR_CERT_HAS_EXPIRED:
     1682:   98:		return("certificate has expired");
        -:   99:	case X509_V_ERR_CRL_HAS_EXPIRED:
    #####:  100:		return("CRL has expired");
        -:  101:	case X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD:
    #####:  102:		return("format error in certificate's notBefore field");
        -:  103:	case X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD:
    #####:  104:		return("format error in certificate's notAfter field");
        -:  105:	case X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD:
    #####:  106:		return("format error in CRL's lastUpdate field");
        -:  107:	case X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD:
    #####:  108:		return("format error in CRL's nextUpdate field");
        -:  109:	case X509_V_ERR_OUT_OF_MEM:
    #####:  110:		return("out of memory");
        -:  111:	case X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT:
      724:  112:		return("self signed certificate");
        -:  113:	case X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN:
        8:  114:		return("self signed certificate in certificate chain");
        -:  115:	case X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY:
     5312:  116:		return("unable to get local issuer certificate");
        -:  117:	case X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE:
     3672:  118:		return("unable to verify the first certificate");
        -:  119:	case X509_V_ERR_CERT_CHAIN_TOO_LONG:
    #####:  120:		return("certificate chain too long");
        -:  121:	case X509_V_ERR_CERT_REVOKED:
    #####:  122:		return("certificate revoked");
        -:  123:	case X509_V_ERR_INVALID_CA:
     1412:  124:		return ("invalid CA certificate");
        -:  125:	case X509_V_ERR_INVALID_NON_CA:
    #####:  126:		return ("invalid non-CA certificate (has CA markings)");
        -:  127:	case X509_V_ERR_PATH_LENGTH_EXCEEDED:
    #####:  128:		return ("path length constraint exceeded");
        -:  129:	case X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED:
    #####:  130:		return("proxy path length constraint exceeded");
        -:  131:	case X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED:
    #####:  132:		return("proxy certificates not allowed, please set the appropriate flag");
        -:  133:	case X509_V_ERR_INVALID_PURPOSE:
      455:  134:		return ("unsupported certificate purpose");
        -:  135:	case X509_V_ERR_CERT_UNTRUSTED:
     1680:  136:		return ("certificate not trusted");
        -:  137:	case X509_V_ERR_CERT_REJECTED:
    #####:  138:		return ("certificate rejected");
        -:  139:	case X509_V_ERR_APPLICATION_VERIFICATION:
    #####:  140:		return("application verification failure");
        -:  141:	case X509_V_ERR_SUBJECT_ISSUER_MISMATCH:
    #####:  142:		return("subject issuer mismatch");
        -:  143:	case X509_V_ERR_AKID_SKID_MISMATCH:
    #####:  144:		return("authority and subject key identifier mismatch");
        -:  145:	case X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH:
    #####:  146:		return("authority and issuer serial number mismatch");
        -:  147:	case X509_V_ERR_KEYUSAGE_NO_CERTSIGN:
    #####:  148:		return("key usage does not include certificate signing");
        -:  149:	case X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER:
    #####:  150:		return("unable to get CRL issuer certificate");
        -:  151:	case X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION:
    14630:  152:		return("unhandled critical extension");
        -:  153:	case X509_V_ERR_KEYUSAGE_NO_CRL_SIGN:
    #####:  154:		return("key usage does not include CRL signing");
        -:  155:	case X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE:
    #####:  156:		return("key usage does not include digital signature");
        -:  157:	case X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION:
    #####:  158:		return("unhandled critical CRL extension");
        -:  159:	case X509_V_ERR_INVALID_EXTENSION:
    #####:  160:		return("invalid or inconsistent certificate extension");
        -:  161:	case X509_V_ERR_INVALID_POLICY_EXTENSION:
    #####:  162:		return("invalid or inconsistent certificate policy extension");
        -:  163:	case X509_V_ERR_NO_EXPLICIT_POLICY:
    #####:  164:		return("no explicit policy");
        -:  165:	case X509_V_ERR_DIFFERENT_CRL_SCOPE:
    #####:  166:	return("Different CRL scope");
        -:  167:	case X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE:
    #####:  168:	return("Unsupported extension feature");
        -:  169: 	case X509_V_ERR_UNNESTED_RESOURCE:
    #####:  170: 		return("RFC 3779 resource not subset of parent's resources");
        -:  171:
        -:  172:	case X509_V_ERR_PERMITTED_VIOLATION:
    #####:  173:		return("permitted subtree violation");
        -:  174:	case X509_V_ERR_EXCLUDED_VIOLATION:
    #####:  175:		return("excluded subtree violation");
        -:  176:	case X509_V_ERR_SUBTREE_MINMAX:
    #####:  177:		return("name constraints minimum and maximum not supported");
        -:  178:	case X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE:
    #####:  179:		return("unsupported name constraint type");
        -:  180:	case X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX:
    #####:  181:		return("unsupported or invalid name constraint syntax");
        -:  182:	case X509_V_ERR_UNSUPPORTED_NAME_SYNTAX:
    #####:  183:		return("unsupported or invalid name syntax");
        -:  184:	case X509_V_ERR_CRL_PATH_VALIDATION_ERROR:
    #####:  185:		return("CRL path validation error");
        -:  186:
        -:  187:	default:
    #####:  188:		BIO_snprintf(buf,sizeof buf,"error number %ld",n);
    #####:  189:		return(buf);
        -:  190:		}
        -:  191:	}
        -:  192:
        -:  193:
