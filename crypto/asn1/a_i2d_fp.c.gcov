        -:    0:Source:a_i2d_fp.c
        -:    0:Graph:a_i2d_fp.gcno
        -:    0:Data:a_i2d_fp.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/asn1/a_i2d_fp.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/buffer.h>
        -:   62:#include <openssl/asn1.h>
        -:   63:
        -:   64:#ifndef NO_OLD_ASN1
        -:   65:
        -:   66:#ifndef OPENSSL_NO_FP_API
    #####:   67:int ASN1_i2d_fp(i2d_of_void *i2d, FILE *out, void *x)
        -:   68:        {
        -:   69:        BIO *b;
        -:   70:        int ret;
        -:   71:
    #####:   72:        if ((b=BIO_new(BIO_s_file())) == NULL)
        -:   73:		{
    #####:   74:		ASN1err(ASN1_F_ASN1_I2D_FP,ERR_R_BUF_LIB);
    #####:   75:                return(0);
        -:   76:		}
    #####:   77:        BIO_set_fp(b,out,BIO_NOCLOSE);
    #####:   78:        ret=ASN1_i2d_bio(i2d,b,x);
    #####:   79:        BIO_free(b);
    #####:   80:        return(ret);
        -:   81:        }
        -:   82:#endif
        -:   83:
    #####:   84:int ASN1_i2d_bio(i2d_of_void *i2d, BIO *out, unsigned char *x)
        -:   85:	{
        -:   86:	char *b;
        -:   87:	unsigned char *p;
        -:   88:	int i,j=0,n,ret=1;
        -:   89:
    #####:   90:	n=i2d(x,NULL);
    #####:   91:	b=(char *)OPENSSL_malloc(n);
    #####:   92:	if (b == NULL)
        -:   93:		{
    #####:   94:		ASN1err(ASN1_F_ASN1_I2D_BIO,ERR_R_MALLOC_FAILURE);
    #####:   95:		return(0);
        -:   96:		}
        -:   97:
    #####:   98:	p=(unsigned char *)b;
    #####:   99:	i2d(x,&p);
        -:  100:	
        -:  101:	for (;;)
        -:  102:		{
    #####:  103:		i=BIO_write(out,&(b[j]),n);
    #####:  104:		if (i == n) break;
    #####:  105:		if (i <= 0)
        -:  106:			{
        -:  107:			ret=0;
        -:  108:			break;
        -:  109:			}
    #####:  110:		j+=i;
    #####:  111:		n-=i;
    #####:  112:		}
    #####:  113:	OPENSSL_free(b);
    #####:  114:	return(ret);
        -:  115:	}
        -:  116:
        -:  117:#endif
        -:  118:
        -:  119:#ifndef OPENSSL_NO_FP_API
    #####:  120:int ASN1_item_i2d_fp(const ASN1_ITEM *it, FILE *out, void *x)
        -:  121:        {
        -:  122:        BIO *b;
        -:  123:        int ret;
        -:  124:
    #####:  125:        if ((b=BIO_new(BIO_s_file())) == NULL)
        -:  126:		{
    #####:  127:		ASN1err(ASN1_F_ASN1_ITEM_I2D_FP,ERR_R_BUF_LIB);
    #####:  128:                return(0);
        -:  129:		}
    #####:  130:        BIO_set_fp(b,out,BIO_NOCLOSE);
    #####:  131:        ret=ASN1_item_i2d_bio(it,b,x);
    #####:  132:        BIO_free(b);
    #####:  133:        return(ret);
        -:  134:        }
        -:  135:#endif
        -:  136:
    #####:  137:int ASN1_item_i2d_bio(const ASN1_ITEM *it, BIO *out, void *x)
        -:  138:	{
    #####:  139:	unsigned char *b = NULL;
        -:  140:	int i,j=0,n,ret=1;
        -:  141:
    #####:  142:	n = ASN1_item_i2d(x, &b, it);
    #####:  143:	if (b == NULL)
        -:  144:		{
    #####:  145:		ASN1err(ASN1_F_ASN1_ITEM_I2D_BIO,ERR_R_MALLOC_FAILURE);
    #####:  146:		return(0);
        -:  147:		}
        -:  148:
        -:  149:	for (;;)
        -:  150:		{
    #####:  151:		i=BIO_write(out,&(b[j]),n);
    #####:  152:		if (i == n) break;
    #####:  153:		if (i <= 0)
        -:  154:			{
        -:  155:			ret=0;
        -:  156:			break;
        -:  157:			}
    #####:  158:		j+=i;
    #####:  159:		n-=i;
    #####:  160:		}
    #####:  161:	OPENSSL_free(b);
    #####:  162:	return(ret);
        -:  163:	}
