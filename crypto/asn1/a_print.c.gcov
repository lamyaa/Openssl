        -:    0:Source:a_print.c
        -:    0:Graph:a_print.gcno
        -:    0:Data:a_print.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/asn1/a_print.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/asn1.h>
        -:   62:
    #####:   63:int ASN1_PRINTABLE_type(const unsigned char *s, int len)
        -:   64:	{
        -:   65:	int c;
        -:   66:	int ia5=0;
        -:   67:	int t61=0;
        -:   68:
    #####:   69:	if (len <= 0) len= -1;
    #####:   70:	if (s == NULL) return(V_ASN1_PRINTABLESTRING);
        -:   71:
    #####:   72:	while ((*s) && (len-- != 0))
        -:   73:		{
    #####:   74:		c= *(s++);
        -:   75:#ifndef CHARSET_EBCDIC
    #####:   76:		if (!(	((c >= 'a') && (c <= 'z')) ||
    #####:   77:			((c >= 'A') && (c <= 'Z')) ||
    #####:   78:			(c == ' ') ||
    #####:   79:			((c >= '0') && (c <= '9')) ||
    #####:   80:			(c == ' ') || (c == '\'') ||
    #####:   81:			(c == '(') || (c == ')') ||
    #####:   82:			(c == '+') || (c == ',') ||
    #####:   83:			(c == '-') || (c == '.') ||
    #####:   84:			(c == '/') || (c == ':') ||
    #####:   85:			(c == '=') || (c == '?')))
        -:   86:			ia5=1;
    #####:   87:		if (c&0x80)
        -:   88:			t61=1;
        -:   89:#else
        -:   90:		if (!isalnum(c) && (c != ' ') &&
        -:   91:		    strchr("'()+,-./:=?", c) == NULL)
        -:   92:			ia5=1;
        -:   93:		if (os_toascii[c] & 0x80)
        -:   94:			t61=1;
        -:   95:#endif
        -:   96:		}
    #####:   97:	if (t61) return(V_ASN1_T61STRING);
    #####:   98:	if (ia5) return(V_ASN1_IA5STRING);
    #####:   99:	return(V_ASN1_PRINTABLESTRING);
        -:  100:	}
        -:  101:
    #####:  102:int ASN1_UNIVERSALSTRING_to_string(ASN1_UNIVERSALSTRING *s)
        -:  103:	{
        -:  104:	int i;
        -:  105:	unsigned char *p;
        -:  106:
    #####:  107:	if (s->type != V_ASN1_UNIVERSALSTRING) return(0);
    #####:  108:	if ((s->length%4) != 0) return(0);
    #####:  109:	p=s->data;
    #####:  110:	for (i=0; i<s->length; i+=4)
        -:  111:		{
    #####:  112:		if ((p[0] != '\0') || (p[1] != '\0') || (p[2] != '\0'))
        -:  113:			break;
        -:  114:		else
    #####:  115:			p+=4;
        -:  116:		}
    #####:  117:	if (i < s->length) return(0);
        -:  118:	p=s->data;
    #####:  119:	for (i=3; i<s->length; i+=4)
        -:  120:		{
    #####:  121:		*(p++)=s->data[i];
        -:  122:		}
    #####:  123:	*(p)='\0';
    #####:  124:	s->length/=4;
    #####:  125:	s->type=ASN1_PRINTABLE_type(s->data,s->length);
    #####:  126:	return(1);
        -:  127:	}
