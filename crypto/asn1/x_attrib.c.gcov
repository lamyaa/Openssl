        -:    0:Source:x_attrib.c
        -:    0:Graph:x_attrib.gcno
        -:    0:Data:x_attrib.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/asn1/x_attrib.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/objects.h>
        -:   62:#include <openssl/asn1t.h>
        -:   63:#include <openssl/x509.h>
        -:   64:
        -:   65:/* X509_ATTRIBUTE: this has the following form:
        -:   66: *
        -:   67: * typedef struct x509_attributes_st
        -:   68: *	{
        -:   69: *	ASN1_OBJECT *object;
        -:   70: *	int single;
        -:   71: *	union	{
        -:   72: *		char		*ptr;
        -:   73: * 		STACK_OF(ASN1_TYPE) *set;
        -:   74: * 		ASN1_TYPE	*single;
        -:   75: *		} value;
        -:   76: *	} X509_ATTRIBUTE;
        -:   77: *
        -:   78: * this needs some extra thought because the CHOICE type is
        -:   79: * merged with the main structure and because the value can
        -:   80: * be anything at all we *must* try the SET OF first because
        -:   81: * the ASN1_ANY type will swallow anything including the whole
        -:   82: * SET OF structure.
        -:   83: */
        -:   84:
        -:   85:ASN1_CHOICE(X509_ATTRIBUTE_SET) = {
        -:   86:	ASN1_SET_OF(X509_ATTRIBUTE, value.set, ASN1_ANY),
        -:   87:	ASN1_SIMPLE(X509_ATTRIBUTE, value.single, ASN1_ANY)
        -:   88:} ASN1_CHOICE_END_selector(X509_ATTRIBUTE, X509_ATTRIBUTE_SET, single)
        -:   89:
        -:   90:ASN1_SEQUENCE(X509_ATTRIBUTE) = {
        -:   91:	ASN1_SIMPLE(X509_ATTRIBUTE, object, ASN1_OBJECT),
        -:   92:	/* CHOICE type merged with parent */
        -:   93:	ASN1_EX_COMBINE(0, 0, X509_ATTRIBUTE_SET)
        -:   94:} ASN1_SEQUENCE_END(X509_ATTRIBUTE)
        -:   95:
    #####:   96:IMPLEMENT_ASN1_FUNCTIONS(X509_ATTRIBUTE)
    #####:   97:IMPLEMENT_ASN1_DUP_FUNCTION(X509_ATTRIBUTE)
        -:   98:
    #####:   99:X509_ATTRIBUTE *X509_ATTRIBUTE_create(int nid, int atrtype, void *value)
        -:  100:	{
        -:  101:	X509_ATTRIBUTE *ret=NULL;
        -:  102:	ASN1_TYPE *val=NULL;
        -:  103:
    #####:  104:	if ((ret=X509_ATTRIBUTE_new()) == NULL)
        -:  105:		return(NULL);
    #####:  106:	ret->object=OBJ_nid2obj(nid);
    #####:  107:	ret->single=0;
    #####:  108:	if ((ret->value.set=sk_ASN1_TYPE_new_null()) == NULL) goto err;
    #####:  109:	if ((val=ASN1_TYPE_new()) == NULL) goto err;
    #####:  110:	if (!sk_ASN1_TYPE_push(ret->value.set,val)) goto err;
        -:  111:
    #####:  112:	ASN1_TYPE_set(val,atrtype,value);
    #####:  113:	return(ret);
        -:  114:err:
    #####:  115:	if (ret != NULL) X509_ATTRIBUTE_free(ret);
    #####:  116:	if (val != NULL) ASN1_TYPE_free(val);
        -:  117:	return(NULL);
        -:  118:	}
