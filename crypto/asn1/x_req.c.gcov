        -:    0:Source:x_req.c
        -:    0:Graph:x_req.gcno
        -:    0:Data:x_req.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/asn1/x_req.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/asn1t.h>
        -:   62:#include <openssl/x509.h>
        -:   63:
        -:   64:/* X509_REQ_INFO is handled in an unusual way to get round
        -:   65: * invalid encodings. Some broken certificate requests don't
        -:   66: * encode the attributes field if it is empty. This is in
        -:   67: * violation of PKCS#10 but we need to tolerate it. We do
        -:   68: * this by making the attributes field OPTIONAL then using
        -:   69: * the callback to initialise it to an empty STACK. 
        -:   70: *
        -:   71: * This means that the field will be correctly encoded unless
        -:   72: * we NULL out the field.
        -:   73: *
        -:   74: * As a result we no longer need the req_kludge field because
        -:   75: * the information is now contained in the attributes field:
        -:   76: * 1. If it is NULL then it's the invalid omission.
        -:   77: * 2. If it is empty it is the correct encoding.
        -:   78: * 3. If it is not empty then some attributes are present.
        -:   79: *
        -:   80: */
        -:   81:
    #####:   82:static int rinf_cb(int operation, ASN1_VALUE **pval, const ASN1_ITEM *it,
        -:   83:							void *exarg)
        -:   84:{
    #####:   85:	X509_REQ_INFO *rinf = (X509_REQ_INFO *)*pval;
        -:   86:
    #####:   87:	if(operation == ASN1_OP_NEW_POST) {
    #####:   88:		rinf->attributes = sk_X509_ATTRIBUTE_new_null();
    #####:   89:		if(!rinf->attributes) return 0;
        -:   90:	}
        -:   91:	return 1;
        -:   92:}
        -:   93:
        -:   94:ASN1_SEQUENCE_enc(X509_REQ_INFO, enc, rinf_cb) = {
        -:   95:	ASN1_SIMPLE(X509_REQ_INFO, version, ASN1_INTEGER),
        -:   96:	ASN1_SIMPLE(X509_REQ_INFO, subject, X509_NAME),
        -:   97:	ASN1_SIMPLE(X509_REQ_INFO, pubkey, X509_PUBKEY),
        -:   98:	/* This isn't really OPTIONAL but it gets round invalid
        -:   99:	 * encodings
        -:  100:	 */
        -:  101:	ASN1_IMP_SET_OF_OPT(X509_REQ_INFO, attributes, X509_ATTRIBUTE, 0)
        -:  102:} ASN1_SEQUENCE_END_enc(X509_REQ_INFO, X509_REQ_INFO)
        -:  103:
    #####:  104:IMPLEMENT_ASN1_FUNCTIONS(X509_REQ_INFO)
        -:  105:
        -:  106:ASN1_SEQUENCE_ref(X509_REQ, 0, CRYPTO_LOCK_X509_REQ) = {
        -:  107:	ASN1_SIMPLE(X509_REQ, req_info, X509_REQ_INFO),
        -:  108:	ASN1_SIMPLE(X509_REQ, sig_alg, X509_ALGOR),
        -:  109:	ASN1_SIMPLE(X509_REQ, signature, ASN1_BIT_STRING)
        -:  110:} ASN1_SEQUENCE_END_ref(X509_REQ, X509_REQ)
        -:  111:
    #####:  112:IMPLEMENT_ASN1_FUNCTIONS(X509_REQ)
    #####:  113:IMPLEMENT_ASN1_DUP_FUNCTION(X509_REQ)
