        -:    0:Source:a_type.c
        -:    0:Graph:a_type.gcno
        -:    0:Data:a_type.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/asn1/a_type.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/asn1t.h>
        -:   62:#include <openssl/objects.h>
        -:   63:
     1942:   64:int ASN1_TYPE_get(ASN1_TYPE *a)
        -:   65:	{
     1942:   66:	if ((a->value.ptr != NULL) || (a->type == V_ASN1_NULL))
     1942:   67:		return(a->type);
        -:   68:	else
        -:   69:		return(0);
        -:   70:	}
        -:   71:
    91911:   72:void ASN1_TYPE_set(ASN1_TYPE *a, int type, void *value)
        -:   73:	{
    91911:   74:	if (a->value.ptr != NULL)
        -:   75:		{
        -:   76:		ASN1_TYPE **tmp_a = &a;
    #####:   77:		ASN1_primitive_free((ASN1_VALUE **)tmp_a, NULL);
        -:   78:		}
    91911:   79:	a->type=type;
    91911:   80:	if (type == V_ASN1_BOOLEAN)
    #####:   81:		a->value.boolean = value ? 0xff : 0;
        -:   82:	else
    91911:   83:		a->value.ptr=value;
    91911:   84:	}
        -:   85:
    #####:   86:int ASN1_TYPE_set1(ASN1_TYPE *a, int type, const void *value)
        -:   87:	{
    #####:   88:	if (!value || (type == V_ASN1_BOOLEAN))
        -:   89:		{
        -:   90:		void *p = (void *)value;
    #####:   91:		ASN1_TYPE_set(a, type, p);
        -:   92:		}
    #####:   93:	else if (type == V_ASN1_OBJECT)
        -:   94:		{
        -:   95:		ASN1_OBJECT *odup;
    #####:   96:		odup = OBJ_dup(value);
    #####:   97:		if (!odup)
        -:   98:			return 0;
    #####:   99:		ASN1_TYPE_set(a, type, odup);
        -:  100:		}
        -:  101:	else
        -:  102:		{
        -:  103:		ASN1_STRING *sdup;
    #####:  104:		sdup = ASN1_STRING_dup(value);
    #####:  105:		if (!sdup)
        -:  106:			return 0;
    #####:  107:		ASN1_TYPE_set(a, type, sdup);
        -:  108:		}
        -:  109:	return 1;
        -:  110:	}
        -:  111:
        -:  112:IMPLEMENT_STACK_OF(ASN1_TYPE)
        -:  113:IMPLEMENT_ASN1_SET_OF(ASN1_TYPE)
        -:  114:
        -:  115:/* Returns 0 if they are equal, != 0 otherwise. */
    #####:  116:int ASN1_TYPE_cmp(ASN1_TYPE *a, ASN1_TYPE *b)
        -:  117:	{
        -:  118:	int result = -1;
        -:  119:
    #####:  120:	if (!a || !b || a->type != b->type) return -1;
        -:  121:
    #####:  122:	switch (a->type)
        -:  123:		{
        -:  124:	case V_ASN1_OBJECT:
    #####:  125:		result = OBJ_cmp(a->value.object, b->value.object);
    #####:  126:		break;
        -:  127:	case V_ASN1_NULL:
        -:  128:		result = 0;	/* They do not have content. */
        -:  129:		break;
        -:  130:	case V_ASN1_INTEGER:
        -:  131:	case V_ASN1_NEG_INTEGER:
        -:  132:	case V_ASN1_ENUMERATED:
        -:  133:	case V_ASN1_NEG_ENUMERATED:
        -:  134:	case V_ASN1_BIT_STRING:
        -:  135:	case V_ASN1_OCTET_STRING:
        -:  136:	case V_ASN1_SEQUENCE:
        -:  137:	case V_ASN1_SET:
        -:  138:	case V_ASN1_NUMERICSTRING:
        -:  139:	case V_ASN1_PRINTABLESTRING:
        -:  140:	case V_ASN1_T61STRING:
        -:  141:	case V_ASN1_VIDEOTEXSTRING:
        -:  142:	case V_ASN1_IA5STRING:
        -:  143:	case V_ASN1_UTCTIME:
        -:  144:	case V_ASN1_GENERALIZEDTIME:
        -:  145:	case V_ASN1_GRAPHICSTRING:
        -:  146:	case V_ASN1_VISIBLESTRING:
        -:  147:	case V_ASN1_GENERALSTRING:
        -:  148:	case V_ASN1_UNIVERSALSTRING:
        -:  149:	case V_ASN1_BMPSTRING:
        -:  150:	case V_ASN1_UTF8STRING:
        -:  151:	case V_ASN1_OTHER:
        -:  152:	default:
    #####:  153:		result = ASN1_STRING_cmp((ASN1_STRING *) a->value.ptr,
    #####:  154:					 (ASN1_STRING *) b->value.ptr);
    #####:  155:		break;
        -:  156:		}
        -:  157:
    #####:  158:	return result;
        -:  159:	}
