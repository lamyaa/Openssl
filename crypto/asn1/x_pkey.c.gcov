        -:    0:Source:x_pkey.c
        -:    0:Graph:x_pkey.gcno
        -:    0:Data:x_pkey.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/asn1/x_pkey.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/evp.h>
        -:   62:#include <openssl/objects.h>
        -:   63:#include <openssl/asn1_mac.h>
        -:   64:#include <openssl/x509.h>
        -:   65:
        -:   66:/* need to implement */
    #####:   67:int i2d_X509_PKEY(X509_PKEY *a, unsigned char **pp)
        -:   68:	{
    #####:   69:	return(0);
        -:   70:	}
        -:   71:
    #####:   72:X509_PKEY *d2i_X509_PKEY(X509_PKEY **a, const unsigned char **pp, long length)
        -:   73:	{
        -:   74:	int i;
    #####:   75:	M_ASN1_D2I_vars(a,X509_PKEY *,X509_PKEY_new);
        -:   76:
    #####:   77:	M_ASN1_D2I_Init();
    #####:   78:	M_ASN1_D2I_start_sequence();
    #####:   79:	M_ASN1_D2I_get_x(X509_ALGOR,ret->enc_algor,d2i_X509_ALGOR);
    #####:   80:	M_ASN1_D2I_get_x(ASN1_OCTET_STRING,ret->enc_pkey,d2i_ASN1_OCTET_STRING);
        -:   81:
    #####:   82:	ret->cipher.cipher=EVP_get_cipherbyname(
    #####:   83:		OBJ_nid2ln(OBJ_obj2nid(ret->enc_algor->algorithm)));
    #####:   84:	if (ret->cipher.cipher == NULL)
        -:   85:		{
    #####:   86:		c.error=ASN1_R_UNSUPPORTED_CIPHER;
    #####:   87:		c.line=__LINE__;
    #####:   88:		goto err;
        -:   89:		}
    #####:   90:	if (ret->enc_algor->parameter->type == V_ASN1_OCTET_STRING) 
        -:   91:		{
    #####:   92:		i=ret->enc_algor->parameter->value.octet_string->length;
    #####:   93:		if (i > EVP_MAX_IV_LENGTH)
        -:   94:			{
    #####:   95:			c.error=ASN1_R_IV_TOO_LARGE;
    #####:   96:			c.line=__LINE__;
    #####:   97:			goto err;
        -:   98:			}
    #####:   99:		memcpy(ret->cipher.iv,
    #####:  100:			ret->enc_algor->parameter->value.octet_string->data,i);
        -:  101:		}
        -:  102:	else
    #####:  103:		memset(ret->cipher.iv,0,EVP_MAX_IV_LENGTH);
    #####:  104:	M_ASN1_D2I_Finish(a,X509_PKEY_free,ASN1_F_D2I_X509_PKEY);
        -:  105:	}
        -:  106:
    10000:  107:X509_PKEY *X509_PKEY_new(void)
        -:  108:	{
        -:  109:	X509_PKEY *ret=NULL;
        -:  110:	ASN1_CTX c;
        -:  111:
    10000:  112:	M_ASN1_New_Malloc(ret,X509_PKEY);
    10000:  113:	ret->version=0;
    10000:  114:	M_ASN1_New(ret->enc_algor,X509_ALGOR_new);
    10000:  115:	M_ASN1_New(ret->enc_pkey,M_ASN1_OCTET_STRING_new);
    10000:  116:	ret->dec_pkey=NULL;
    10000:  117:	ret->key_length=0;
    10000:  118:	ret->key_data=NULL;
    10000:  119:	ret->key_free=0;
    10000:  120:	ret->cipher.cipher=NULL;
    10000:  121:	memset(ret->cipher.iv,0,EVP_MAX_IV_LENGTH);
    10000:  122:	ret->references=1;
    10000:  123:	return(ret);
    #####:  124:	M_ASN1_New_Error(ASN1_F_X509_PKEY_NEW);
        -:  125:	}
        -:  126:
    10000:  127:void X509_PKEY_free(X509_PKEY *x)
        -:  128:	{
        -:  129:	int i;
        -:  130:
    10000:  131:	if (x == NULL) return;
        -:  132:
    10000:  133:	i=CRYPTO_add(&x->references,-1,CRYPTO_LOCK_X509_PKEY);
        -:  134:#ifdef REF_PRINT
        -:  135:	REF_PRINT("X509_PKEY",x);
        -:  136:#endif
    10000:  137:	if (i > 0) return;
        -:  138:#ifdef REF_CHECK
        -:  139:	if (i < 0)
        -:  140:		{
        -:  141:		fprintf(stderr,"X509_PKEY_free, bad reference count\n");
        -:  142:		abort();
        -:  143:		}
        -:  144:#endif
        -:  145:
    10000:  146:	if (x->enc_algor != NULL) X509_ALGOR_free(x->enc_algor);
    10000:  147:	if (x->enc_pkey != NULL) M_ASN1_OCTET_STRING_free(x->enc_pkey);
    10000:  148:	if (x->dec_pkey != NULL)EVP_PKEY_free(x->dec_pkey);
    10000:  149:	if ((x->key_data != NULL) && (x->key_free)) OPENSSL_free(x->key_data);
    10000:  150:	OPENSSL_free(x);
        -:  151:	}
