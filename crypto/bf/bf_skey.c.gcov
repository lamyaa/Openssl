        -:    0:Source:bf_skey.c
        -:    0:Graph:bf_skey.gcno
        -:    0:Data:bf_skey.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/bf/bf_skey.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <string.h>
        -:   61:#include <openssl/crypto.h>
        -:   62:#include <openssl/blowfish.h>
        -:   63:#include "bf_locl.h"
        -:   64:#include "bf_pi.h"
        -:   65:
    #####:   66:void BF_set_key(BF_KEY *key, int len, const unsigned char *data)
        -:   67:#ifdef OPENSSL_FIPS
        -:   68:	{
        -:   69:	fips_cipher_abort(BLOWFISH);
        -:   70:	private_BF_set_key(key, len, data);
        -:   71:	}
        -:   72:void private_BF_set_key(BF_KEY *key, int len, const unsigned char *data)
        -:   73:#endif
        -:   74:	{
        -:   75:	int i;
        -:   76:	BF_LONG *p,ri,in[2];
        -:   77:	const unsigned char *d,*end;
        -:   78:
        -:   79:
        -:   80:	memcpy(key,&bf_init,sizeof(BF_KEY));
    #####:   81:	p=key->P;
        -:   82:
    #####:   83:	if (len > ((BF_ROUNDS+2)*4)) len=(BF_ROUNDS+2)*4;
        -:   84:
        -:   85:	d=data;
    #####:   86:	end= &(data[len]);
    #####:   87:	for (i=0; i<(BF_ROUNDS+2); i++)
        -:   88:		{
    #####:   89:		ri= *(d++);
    #####:   90:		if (d >= end) d=data;
        -:   91:
    #####:   92:		ri<<=8;
    #####:   93:		ri|= *(d++);
    #####:   94:		if (d >= end) d=data;
        -:   95:
    #####:   96:		ri<<=8;
    #####:   97:		ri|= *(d++);
    #####:   98:		if (d >= end) d=data;
        -:   99:
    #####:  100:		ri<<=8;
    #####:  101:		ri|= *(d++);
    #####:  102:		if (d >= end) d=data;
        -:  103:
    #####:  104:		p[i]^=ri;
        -:  105:		}
        -:  106:
    #####:  107:	in[0]=0L;
    #####:  108:	in[1]=0L;
    #####:  109:	for (i=0; i<(BF_ROUNDS+2); i+=2)
        -:  110:		{
    #####:  111:		BF_encrypt(in,key);
    #####:  112:		p[i  ]=in[0];
    #####:  113:		p[i+1]=in[1];
        -:  114:		}
        -:  115:
    #####:  116:	p=key->S;
    #####:  117:	for (i=0; i<4*256; i+=2)
        -:  118:		{
    #####:  119:		BF_encrypt(in,key);
    #####:  120:		p[i  ]=in[0];
    #####:  121:		p[i+1]=in[1];
        -:  122:		}
    #####:  123:	}
        -:  124:
