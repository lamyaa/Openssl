        -:    0:Source:tb_rand.c
        -:    0:Graph:tb_rand.gcno
        -:    0:Data:tb_rand.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* ====================================================================
        -:    2: * Copyright (c) 2000 The OpenSSL Project.  All rights reserved.
        -:    3: *
        -:    4: * Redistribution and use in source and binary forms, with or without
        -:    5: * modification, are permitted provided that the following conditions
        -:    6: * are met:
        -:    7: *
        -:    8: * 1. Redistributions of source code must retain the above copyright
        -:    9: *    notice, this list of conditions and the following disclaimer. 
        -:   10: *
        -:   11: * 2. Redistributions in binary form must reproduce the above copyright
        -:   12: *    notice, this list of conditions and the following disclaimer in
        -:   13: *    the documentation and/or other materials provided with the
        -:   14: *    distribution.
        -:   15: *
        -:   16: * 3. All advertising materials mentioning features or use of this
        -:   17: *    software must display the following acknowledgment:
        -:   18: *    "This product includes software developed by the OpenSSL Project
        -:   19: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   20: *
        -:   21: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   22: *    endorse or promote products derived from this software without
        -:   23: *    prior written permission. For written permission, please contact
        -:   24: *    licensing@OpenSSL.org.
        -:   25: *
        -:   26: * 5. Products derived from this software may not be called "OpenSSL"
        -:   27: *    nor may "OpenSSL" appear in their names without prior written
        -:   28: *    permission of the OpenSSL Project.
        -:   29: *
        -:   30: * 6. Redistributions of any form whatsoever must retain the following
        -:   31: *    acknowledgment:
        -:   32: *    "This product includes software developed by the OpenSSL Project
        -:   33: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   34: *
        -:   35: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   36: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   37: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   38: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   39: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   40: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   41: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   42: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   43: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   44: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   45: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   46: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   47: * ====================================================================
        -:   48: *
        -:   49: * This product includes cryptographic software written by Eric Young
        -:   50: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   51: * Hudson (tjh@cryptsoft.com).
        -:   52: *
        -:   53: */
        -:   54:
        -:   55:#include "eng_int.h"
        -:   56:
        -:   57:/* If this symbol is defined then ENGINE_get_default_RAND(), the function that is
        -:   58: * used by RAND to hook in implementation code and cache defaults (etc), will
        -:   59: * display brief debugging summaries to stderr with the 'nid'. */
        -:   60:/* #define ENGINE_RAND_DEBUG */
        -:   61:
        -:   62:static ENGINE_TABLE *rand_table = NULL;
        -:   63:static const int dummy_nid = 1;
        -:   64:
    #####:   65:void ENGINE_unregister_RAND(ENGINE *e)
        -:   66:	{
    #####:   67:	engine_table_unregister(&rand_table, e);
    #####:   68:	}
        -:   69:
    10000:   70:static void engine_unregister_all_RAND(void)
        -:   71:	{
    10000:   72:	engine_table_cleanup(&rand_table);
    10000:   73:	}
        -:   74:
   120000:   75:int ENGINE_register_RAND(ENGINE *e)
        -:   76:	{
   120000:   77:	if(e->rand_meth)
    50000:   78:		return engine_table_register(&rand_table,
        -:   79:				engine_unregister_all_RAND, e, &dummy_nid, 1, 0);
        -:   80:	return 1;
        -:   81:	}
        -:   82:
    #####:   83:void ENGINE_register_all_RAND()
        -:   84:	{
        -:   85:	ENGINE *e;
        -:   86:
    #####:   87:	for(e=ENGINE_get_first() ; e ; e=ENGINE_get_next(e))
    #####:   88:		ENGINE_register_RAND(e);
    #####:   89:	}
        -:   90:
    #####:   91:int ENGINE_set_default_RAND(ENGINE *e)
        -:   92:	{
    #####:   93:	if(e->rand_meth)
    #####:   94:		return engine_table_register(&rand_table,
        -:   95:				engine_unregister_all_RAND, e, &dummy_nid, 1, 1);
        -:   96:	return 1;
        -:   97:	}
        -:   98:
        -:   99:/* Exposed API function to get a functional reference from the implementation
        -:  100: * table (ie. try to get a functional reference from the tabled structural
        -:  101: * references). */
    10000:  102:ENGINE *ENGINE_get_default_RAND(void)
        -:  103:	{
    10000:  104:	return engine_table_select(&rand_table, dummy_nid);
        -:  105:	}
        -:  106:
        -:  107:/* Obtains an RAND implementation from an ENGINE functional reference */
    10000:  108:const RAND_METHOD *ENGINE_get_RAND(const ENGINE *e)
        -:  109:	{
    10000:  110:	return e->rand_meth;
        -:  111:	}
        -:  112:
        -:  113:/* Sets an RAND implementation in an ENGINE structure */
    50000:  114:int ENGINE_set_RAND(ENGINE *e, const RAND_METHOD *rand_meth)
        -:  115:	{
    50000:  116:	e->rand_meth = rand_meth;
    50000:  117:	return 1;
        -:  118:	}
