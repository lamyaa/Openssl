        -:    0:Source:tb_pkmeth.c
        -:    0:Graph:tb_pkmeth.gcno
        -:    0:Data:tb_pkmeth.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* ====================================================================
        -:    2: * Copyright (c) 2006 The OpenSSL Project.  All rights reserved.
        -:    3: *
        -:    4: * Redistribution and use in source and binary forms, with or without
        -:    5: * modification, are permitted provided that the following conditions
        -:    6: * are met:
        -:    7: *
        -:    8: * 1. Redistributions of source code must retain the above copyright
        -:    9: *    notice, this list of conditions and the following disclaimer. 
        -:   10: *
        -:   11: * 2. Redistributions in binary form must reproduce the above copyright
        -:   12: *    notice, this list of conditions and the following disclaimer in
        -:   13: *    the documentation and/or other materials provided with the
        -:   14: *    distribution.
        -:   15: *
        -:   16: * 3. All advertising materials mentioning features or use of this
        -:   17: *    software must display the following acknowledgment:
        -:   18: *    "This product includes software developed by the OpenSSL Project
        -:   19: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   20: *
        -:   21: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   22: *    endorse or promote products derived from this software without
        -:   23: *    prior written permission. For written permission, please contact
        -:   24: *    licensing@OpenSSL.org.
        -:   25: *
        -:   26: * 5. Products derived from this software may not be called "OpenSSL"
        -:   27: *    nor may "OpenSSL" appear in their names without prior written
        -:   28: *    permission of the OpenSSL Project.
        -:   29: *
        -:   30: * 6. Redistributions of any form whatsoever must retain the following
        -:   31: *    acknowledgment:
        -:   32: *    "This product includes software developed by the OpenSSL Project
        -:   33: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   34: *
        -:   35: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   36: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   37: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   38: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   39: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   40: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   41: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   42: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   43: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   44: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   45: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   46: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   47: * ====================================================================
        -:   48: *
        -:   49: * This product includes cryptographic software written by Eric Young
        -:   50: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   51: * Hudson (tjh@cryptsoft.com).
        -:   52: *
        -:   53: */
        -:   54:
        -:   55:#include "eng_int.h"
        -:   56:#include <openssl/evp.h>
        -:   57:
        -:   58:/* If this symbol is defined then ENGINE_get_pkey_meth_engine(), the function
        -:   59: * that is used by EVP to hook in pkey_meth code and cache defaults (etc), will
        -:   60: * display brief debugging summaries to stderr with the 'nid'. */
        -:   61:/* #define ENGINE_PKEY_METH_DEBUG */
        -:   62:
        -:   63:static ENGINE_TABLE *pkey_meth_table = NULL;
        -:   64:
    #####:   65:void ENGINE_unregister_pkey_meths(ENGINE *e)
        -:   66:	{
    #####:   67:	engine_table_unregister(&pkey_meth_table, e);
    #####:   68:	}
        -:   69:
    10000:   70:static void engine_unregister_all_pkey_meths(void)
        -:   71:	{
    10000:   72:	engine_table_cleanup(&pkey_meth_table);
    10000:   73:	}
        -:   74:
   130000:   75:int ENGINE_register_pkey_meths(ENGINE *e)
        -:   76:	{
   130000:   77:	if(e->pkey_meths)
        -:   78:		{
        -:   79:		const int *nids;
    20000:   80:		int num_nids = e->pkey_meths(e, NULL, &nids, 0);
    20000:   81:		if(num_nids > 0)
    20000:   82:			return engine_table_register(&pkey_meth_table,
        -:   83:				engine_unregister_all_pkey_meths, e, nids,
        -:   84:					num_nids, 0);
        -:   85:		}
        -:   86:	return 1;
        -:   87:	}
        -:   88:
    #####:   89:void ENGINE_register_all_pkey_meths()
        -:   90:	{
        -:   91:	ENGINE *e;
        -:   92:
    #####:   93:	for(e=ENGINE_get_first() ; e ; e=ENGINE_get_next(e))
    #####:   94:		ENGINE_register_pkey_meths(e);
    #####:   95:	}
        -:   96:
    #####:   97:int ENGINE_set_default_pkey_meths(ENGINE *e)
        -:   98:	{
    #####:   99:	if(e->pkey_meths)
        -:  100:		{
        -:  101:		const int *nids;
    #####:  102:		int num_nids = e->pkey_meths(e, NULL, &nids, 0);
    #####:  103:		if(num_nids > 0)
    #####:  104:			return engine_table_register(&pkey_meth_table,
        -:  105:				engine_unregister_all_pkey_meths, e, nids,
        -:  106:					num_nids, 1);
        -:  107:		}
        -:  108:	return 1;
        -:  109:	}
        -:  110:
        -:  111:/* Exposed API function to get a functional reference from the implementation
        -:  112: * table (ie. try to get a functional reference from the tabled structural
        -:  113: * references) for a given pkey_meth 'nid' */
   151942:  114:ENGINE *ENGINE_get_pkey_meth_engine(int nid)
        -:  115:	{
   151942:  116:	return engine_table_select(&pkey_meth_table, nid);
        -:  117:	}
        -:  118:
        -:  119:/* Obtains a pkey_meth implementation from an ENGINE functional reference */
    #####:  120:const EVP_PKEY_METHOD *ENGINE_get_pkey_meth(ENGINE *e, int nid)
        -:  121:	{
        -:  122:	EVP_PKEY_METHOD *ret;
        -:  123:	ENGINE_PKEY_METHS_PTR fn = ENGINE_get_pkey_meths(e);
    #####:  124:	if(!fn || !fn(e, &ret, NULL, nid))
        -:  125:		{
    #####:  126:		ENGINEerr(ENGINE_F_ENGINE_GET_PKEY_METH,
        -:  127:				ENGINE_R_UNIMPLEMENTED_PUBLIC_KEY_METHOD);
    #####:  128:		return NULL;
        -:  129:		}
    #####:  130:	return ret;
        -:  131:	}
        -:  132:
        -:  133:/* Gets the pkey_meth callback from an ENGINE structure */
    #####:  134:ENGINE_PKEY_METHS_PTR ENGINE_get_pkey_meths(const ENGINE *e)
        -:  135:	{
    #####:  136:	return e->pkey_meths;
        -:  137:	}
        -:  138:
        -:  139:/* Sets the pkey_meth callback in an ENGINE structure */
    10000:  140:int ENGINE_set_pkey_meths(ENGINE *e, ENGINE_PKEY_METHS_PTR f)
        -:  141:	{
    10000:  142:	e->pkey_meths = f;
    10000:  143:	return 1;
        -:  144:	}
        -:  145:
        -:  146:/* Internal function to free up EVP_PKEY_METHOD structures before an
        -:  147: * ENGINE is destroyed
        -:  148: */
        -:  149:
   120000:  150:void engine_pkey_meths_free(ENGINE *e)
        -:  151:	{
        -:  152:	int i;
        -:  153:	EVP_PKEY_METHOD *pkm;
   120000:  154:	if (e->pkey_meths)
        -:  155:		{
        -:  156:		const int *pknids;
        -:  157:		int npknids;
    10000:  158:		npknids = e->pkey_meths(e, NULL, &pknids, 0);
    40000:  159:		for (i = 0; i < npknids; i++)
        -:  160:			{
    30000:  161:			if (e->pkey_meths(e, &pkm, NULL, pknids[i]))
        -:  162:				{
    30000:  163:				EVP_PKEY_meth_free(pkm);
        -:  164:				}
        -:  165:			}
        -:  166:		}
   120000:  167:	}
