        -:    0:Source:obj_lib.c
        -:    0:Graph:obj_lib.gcno
        -:    0:Data:obj_lib.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/objects/obj_lib.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/lhash.h>
        -:   62:#include <openssl/objects.h>
        -:   63:#include <openssl/buffer.h>
        -:   64:
   290008:   65:ASN1_OBJECT *OBJ_dup(const ASN1_OBJECT *o)
        -:   66:	{
        -:   67:	ASN1_OBJECT *r;
        -:   68:	int i;
        -:   69:	char *ln=NULL,*sn=NULL;
        -:   70:	unsigned char *data=NULL;
        -:   71:
   290008:   72:	if (o == NULL) return(NULL);
   290008:   73:	if (!(o->flags & ASN1_OBJECT_FLAG_DYNAMIC))
        -:   74:		return((ASN1_OBJECT *)o); /* XXX: ugh! Why? What kind of
        -:   75:					     duplication is this??? */
        -:   76:
   290008:   77:	r=ASN1_OBJECT_new();
   290008:   78:	if (r == NULL)
        -:   79:		{
    #####:   80:		OBJerr(OBJ_F_OBJ_DUP,ERR_R_ASN1_LIB);
    #####:   81:		return(NULL);
        -:   82:		}
   290008:   83:	data=OPENSSL_malloc(o->length);
   290008:   84:	if (data == NULL)
        -:   85:		goto err;
   290008:   86:	if (o->data != NULL)
   290008:   87:		memcpy(data,o->data,o->length);
        -:   88:	/* once data attached to object it remains const */
   290008:   89:	r->data = data;
   290008:   90:	r->length=o->length;
   290008:   91:	r->nid=o->nid;
   290008:   92:	r->ln=r->sn=NULL;
   290008:   93:	if (o->ln != NULL)
        -:   94:		{
    #####:   95:		i=strlen(o->ln)+1;
    #####:   96:		ln=OPENSSL_malloc(i);
    #####:   97:		if (ln == NULL) goto err;
    #####:   98:		memcpy(ln,o->ln,i);
    #####:   99:		r->ln=ln;
        -:  100:		}
        -:  101:
   290008:  102:	if (o->sn != NULL)
        -:  103:		{
    #####:  104:		i=strlen(o->sn)+1;
    #####:  105:		sn=OPENSSL_malloc(i);
    #####:  106:		if (sn == NULL) goto err;
    #####:  107:		memcpy(sn,o->sn,i);
    #####:  108:		r->sn=sn;
        -:  109:		}
   290008:  110:	r->flags=o->flags|(ASN1_OBJECT_FLAG_DYNAMIC|
        -:  111:		ASN1_OBJECT_FLAG_DYNAMIC_STRINGS|ASN1_OBJECT_FLAG_DYNAMIC_DATA);
   290008:  112:	return(r);
        -:  113:err:
    #####:  114:	OBJerr(OBJ_F_OBJ_DUP,ERR_R_MALLOC_FAILURE);
    #####:  115:	if (ln != NULL)		OPENSSL_free(ln);
    #####:  116:	if (sn != NULL)		OPENSSL_free(sn);
    #####:  117:	if (data != NULL)	OPENSSL_free(data);
    #####:  118:	if (r != NULL)		OPENSSL_free(r);
        -:  119:	return(NULL);
        -:  120:	}
        -:  121:
    #####:  122:int OBJ_cmp(const ASN1_OBJECT *a, const ASN1_OBJECT *b)
        -:  123:	{
        -:  124:	int ret;
        -:  125:
    #####:  126:	ret=(a->length-b->length);
    #####:  127:	if (ret) return(ret);
    #####:  128:	return(memcmp(a->data,b->data,a->length));
        -:  129:	}
