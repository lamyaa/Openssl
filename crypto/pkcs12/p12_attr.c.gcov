        -:    0:Source:p12_attr.c
        -:    0:Graph:p12_attr.gcno
        -:    0:Data:p12_attr.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* p12_attr.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/pkcs12.h>
        -:   62:
        -:   63:/* Add a local keyid to a safebag */
        -:   64:
    #####:   65:int PKCS12_add_localkeyid(PKCS12_SAFEBAG *bag, unsigned char *name,
        -:   66:	     int namelen)
        -:   67:{
    #####:   68:	if (X509at_add1_attr_by_NID(&bag->attrib, NID_localKeyID,
        -:   69:				V_ASN1_OCTET_STRING, name, namelen))
        -:   70:		return 1;
        -:   71:	else 
    #####:   72:		return 0;
        -:   73:}
        -:   74:
        -:   75:/* Add key usage to PKCS#8 structure */
        -:   76:
    #####:   77:int PKCS8_add_keyusage(PKCS8_PRIV_KEY_INFO *p8, int usage)
        -:   78:{
        -:   79:	unsigned char us_val;
    #####:   80:	us_val = (unsigned char) usage;
    #####:   81:	if (X509at_add1_attr_by_NID(&p8->attributes, NID_key_usage,
        -:   82:				V_ASN1_BIT_STRING, &us_val, 1))
        -:   83:		return 1;
        -:   84:	else
    #####:   85:		return 0;
        -:   86:}
        -:   87:
        -:   88:/* Add a friendlyname to a safebag */
        -:   89:
    #####:   90:int PKCS12_add_friendlyname_asc(PKCS12_SAFEBAG *bag, const char *name,
        -:   91:				 int namelen)
        -:   92:{
    #####:   93:	if (X509at_add1_attr_by_NID(&bag->attrib, NID_friendlyName,
        -:   94:				MBSTRING_ASC, (unsigned char *)name, namelen))
        -:   95:		return 1;
        -:   96:	else
    #####:   97:		return 0;
        -:   98:}
        -:   99:
        -:  100:
    #####:  101:int PKCS12_add_friendlyname_uni(PKCS12_SAFEBAG *bag,
        -:  102:				 const unsigned char *name, int namelen)
        -:  103:{
    #####:  104:	if (X509at_add1_attr_by_NID(&bag->attrib, NID_friendlyName,
        -:  105:				MBSTRING_BMP, name, namelen))
        -:  106:		return 1;
        -:  107:	else
    #####:  108:		return 0;
        -:  109:}
        -:  110:
    #####:  111:int PKCS12_add_CSPName_asc(PKCS12_SAFEBAG *bag, const char *name,
        -:  112:				 int namelen)
        -:  113:{
    #####:  114:	if (X509at_add1_attr_by_NID(&bag->attrib, NID_ms_csp_name,
        -:  115:				MBSTRING_ASC, (unsigned char *)name, namelen))
        -:  116:		return 1;
        -:  117:	else
    #####:  118:		return 0;
        -:  119:}
        -:  120:
    #####:  121:ASN1_TYPE *PKCS12_get_attr_gen(STACK_OF(X509_ATTRIBUTE) *attrs, int attr_nid)
        -:  122:{
        -:  123:	X509_ATTRIBUTE *attrib;
        -:  124:	int i;
    #####:  125:	if (!attrs) return NULL;
    #####:  126:	for (i = 0; i < sk_X509_ATTRIBUTE_num (attrs); i++) {
    #####:  127:		attrib = sk_X509_ATTRIBUTE_value (attrs, i);
    #####:  128:		if (OBJ_obj2nid (attrib->object) == attr_nid) {
    #####:  129:			if (sk_ASN1_TYPE_num (attrib->value.set))
    #####:  130:			    return sk_ASN1_TYPE_value(attrib->value.set, 0);
        -:  131:			else return NULL;
        -:  132:		}
        -:  133:	}
        -:  134:	return NULL;
        -:  135:}
        -:  136:
    #####:  137:char *PKCS12_get_friendlyname(PKCS12_SAFEBAG *bag)
        -:  138:{
        -:  139:	ASN1_TYPE *atype;
    #####:  140:	if (!(atype = PKCS12_get_attr(bag, NID_friendlyName))) return NULL;
    #####:  141:	if (atype->type != V_ASN1_BMPSTRING) return NULL;
    #####:  142:	return OPENSSL_uni2asc(atype->value.bmpstring->data,
    #####:  143:				 atype->value.bmpstring->length);
        -:  144:}
        -:  145:
