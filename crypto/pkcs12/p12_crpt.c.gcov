        -:    0:Source:p12_crpt.c
        -:    0:Graph:p12_crpt.gcno
        -:    0:Data:p12_crpt.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* p12_crpt.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/pkcs12.h>
        -:   62:
        -:   63:/* PKCS#12 PBE algorithms now in static table */
        -:   64:
    #####:   65:void PKCS12_PBE_add(void)
        -:   66:{
    #####:   67:}
        -:   68:
    #####:   69:int PKCS12_PBE_keyivgen(EVP_CIPHER_CTX *ctx, const char *pass, int passlen,
        -:   70:		ASN1_TYPE *param, const EVP_CIPHER *cipher, const EVP_MD *md, int en_de)
        -:   71:{
        -:   72:	PBEPARAM *pbe;
        -:   73:	int saltlen, iter, ret;
        -:   74:	unsigned char *salt;
        -:   75:	const unsigned char *pbuf;
        -:   76:	unsigned char key[EVP_MAX_KEY_LENGTH], iv[EVP_MAX_IV_LENGTH];
        -:   77:
        -:   78:	/* Extract useful info from parameter */
    #####:   79:	if (param == NULL || param->type != V_ASN1_SEQUENCE ||
    #####:   80:	    param->value.sequence == NULL) {
    #####:   81:		PKCS12err(PKCS12_F_PKCS12_PBE_KEYIVGEN,PKCS12_R_DECODE_ERROR);
    #####:   82:		return 0;
        -:   83:	}
        -:   84:
    #####:   85:	pbuf = param->value.sequence->data;
    #####:   86:	if (!(pbe = d2i_PBEPARAM(NULL, &pbuf, param->value.sequence->length))) {
    #####:   87:		PKCS12err(PKCS12_F_PKCS12_PBE_KEYIVGEN,PKCS12_R_DECODE_ERROR);
    #####:   88:		return 0;
        -:   89:	}
        -:   90:
    #####:   91:	if (!pbe->iter) iter = 1;
    #####:   92:	else iter = ASN1_INTEGER_get (pbe->iter);
    #####:   93:	salt = pbe->salt->data;
    #####:   94:	saltlen = pbe->salt->length;
    #####:   95:	if (!PKCS12_key_gen (pass, passlen, salt, saltlen, PKCS12_KEY_ID,
        -:   96:			     iter, EVP_CIPHER_key_length(cipher), key, md)) {
    #####:   97:		PKCS12err(PKCS12_F_PKCS12_PBE_KEYIVGEN,PKCS12_R_KEY_GEN_ERROR);
    #####:   98:		PBEPARAM_free(pbe);
    #####:   99:		return 0;
        -:  100:	}
    #####:  101:	if (!PKCS12_key_gen (pass, passlen, salt, saltlen, PKCS12_IV_ID,
        -:  102:				iter, EVP_CIPHER_iv_length(cipher), iv, md)) {
    #####:  103:		PKCS12err(PKCS12_F_PKCS12_PBE_KEYIVGEN,PKCS12_R_IV_GEN_ERROR);
    #####:  104:		PBEPARAM_free(pbe);
    #####:  105:		return 0;
        -:  106:	}
    #####:  107:	PBEPARAM_free(pbe);
    #####:  108:	ret = EVP_CipherInit_ex(ctx, cipher, NULL, key, iv, en_de);
    #####:  109:	OPENSSL_cleanse(key, EVP_MAX_KEY_LENGTH);
    #####:  110:	OPENSSL_cleanse(iv, EVP_MAX_IV_LENGTH);
    #####:  111:	return ret;
        -:  112:}
