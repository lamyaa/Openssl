        -:    0:Source:p12_utl.c
        -:    0:Graph:p12_utl.gcno
        -:    0:Data:p12_utl.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* p12_utl.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include "cryptlib.h"
        -:   61:#include <openssl/pkcs12.h>
        -:   62:
        -:   63:/* Cheap and nasty Unicode stuff */
        -:   64:
    #####:   65:unsigned char *OPENSSL_asc2uni(const char *asc, int asclen, unsigned char **uni, int *unilen)
        -:   66:{
        -:   67:	int ulen, i;
        -:   68:	unsigned char *unitmp;
    #####:   69:	if (asclen == -1) asclen = strlen(asc);
    #####:   70:	ulen = asclen*2  + 2;
    #####:   71:	if (!(unitmp = OPENSSL_malloc(ulen))) return NULL;
    #####:   72:	for (i = 0; i < ulen - 2; i+=2) {
    #####:   73:		unitmp[i] = 0;
    #####:   74:		unitmp[i + 1] = asc[i>>1];
        -:   75:	}
        -:   76:	/* Make result double null terminated */
    #####:   77:	unitmp[ulen - 2] = 0;
    #####:   78:	unitmp[ulen - 1] = 0;
    #####:   79:	if (unilen) *unilen = ulen;
    #####:   80:	if (uni) *uni = unitmp;
    #####:   81:	return unitmp;
        -:   82:}
        -:   83:
    #####:   84:char *OPENSSL_uni2asc(unsigned char *uni, int unilen)
        -:   85:{
        -:   86:	int asclen, i;
        -:   87:	char *asctmp;
    #####:   88:	asclen = unilen / 2;
        -:   89:	/* If no terminating zero allow for one */
    #####:   90:	if (!unilen || uni[unilen - 1]) asclen++;
    #####:   91:	uni++;
    #####:   92:	if (!(asctmp = OPENSSL_malloc(asclen))) return NULL;
    #####:   93:	for (i = 0; i < unilen; i+=2) asctmp[i>>1] = uni[i];
    #####:   94:	asctmp[asclen - 1] = 0;
    #####:   95:	return asctmp;
        -:   96:}
        -:   97:
    #####:   98:int i2d_PKCS12_bio(BIO *bp, PKCS12 *p12)
        -:   99:{
    #####:  100:	return ASN1_item_i2d_bio(ASN1_ITEM_rptr(PKCS12), bp, p12);
        -:  101:}
        -:  102:
        -:  103:#ifndef OPENSSL_NO_FP_API
    #####:  104:int i2d_PKCS12_fp(FILE *fp, PKCS12 *p12)
        -:  105:{
    #####:  106:	return ASN1_item_i2d_fp(ASN1_ITEM_rptr(PKCS12), fp, p12);
        -:  107:}
        -:  108:#endif
        -:  109:
    #####:  110:PKCS12 *d2i_PKCS12_bio(BIO *bp, PKCS12 **p12)
        -:  111:{
    #####:  112:	return ASN1_item_d2i_bio(ASN1_ITEM_rptr(PKCS12), bp, p12);
        -:  113:}
        -:  114:#ifndef OPENSSL_NO_FP_API
    #####:  115:PKCS12 *d2i_PKCS12_fp(FILE *fp, PKCS12 **p12)
        -:  116:{
    #####:  117:        return ASN1_item_d2i_fp(ASN1_ITEM_rptr(PKCS12), fp, p12);
        -:  118:}
        -:  119:#endif
        -:  120:
    #####:  121:PKCS12_SAFEBAG *PKCS12_x5092certbag(X509 *x509)
        -:  122:{
    #####:  123:	return PKCS12_item_pack_safebag(x509, ASN1_ITEM_rptr(X509),
        -:  124:			NID_x509Certificate, NID_certBag);
        -:  125:}
        -:  126:
    #####:  127:PKCS12_SAFEBAG *PKCS12_x509crl2certbag(X509_CRL *crl)
        -:  128:{
    #####:  129:	return PKCS12_item_pack_safebag(crl, ASN1_ITEM_rptr(X509_CRL),
        -:  130:			NID_x509Crl, NID_crlBag);
        -:  131:}
        -:  132:
    #####:  133:X509 *PKCS12_certbag2x509(PKCS12_SAFEBAG *bag)
        -:  134:{
    #####:  135:	if(M_PKCS12_bag_type(bag) != NID_certBag) return NULL;
    #####:  136:	if(M_PKCS12_cert_bag_type(bag) != NID_x509Certificate) return NULL;
    #####:  137:	return ASN1_item_unpack(bag->value.bag->value.octet, ASN1_ITEM_rptr(X509));
        -:  138:}
        -:  139:
    #####:  140:X509_CRL *PKCS12_certbag2x509crl(PKCS12_SAFEBAG *bag)
        -:  141:{
    #####:  142:	if(M_PKCS12_bag_type(bag) != NID_crlBag) return NULL;
    #####:  143:	if(M_PKCS12_cert_bag_type(bag) != NID_x509Crl) return NULL;
    #####:  144:	return ASN1_item_unpack(bag->value.bag->value.octet,
        -:  145:							ASN1_ITEM_rptr(X509_CRL));
        -:  146:}
