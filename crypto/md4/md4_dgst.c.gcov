        -:    0:Source:md4_dgst.c
        -:    0:Graph:md4_dgst.gcno
        -:    0:Data:md4_dgst.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* crypto/md4/md4_dgst.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <openssl/opensslv.h>
        -:   61:#include <openssl/crypto.h>
        -:   62:#include "md4_locl.h"
        -:   63:
        -:   64:const char MD4_version[]="MD4" OPENSSL_VERSION_PTEXT;
        -:   65:
        -:   66:/* Implemented from RFC1186 The MD4 Message-Digest Algorithm
        -:   67: */
        -:   68:
        -:   69:#define INIT_DATA_A (unsigned long)0x67452301L
        -:   70:#define INIT_DATA_B (unsigned long)0xefcdab89L
        -:   71:#define INIT_DATA_C (unsigned long)0x98badcfeL
        -:   72:#define INIT_DATA_D (unsigned long)0x10325476L
        -:   73:
    #####:   74:fips_md_init(MD4)
        -:   75:	{
        -:   76:	memset (c,0,sizeof(*c));
    #####:   77:	c->A=INIT_DATA_A;
    #####:   78:	c->B=INIT_DATA_B;
    #####:   79:	c->C=INIT_DATA_C;
    #####:   80:	c->D=INIT_DATA_D;
    #####:   81:	return 1;
        -:   82:	}
        -:   83:
        -:   84:#ifndef md4_block_data_order
        -:   85:#ifdef X
        -:   86:#undef X
        -:   87:#endif
    #####:   88:void md4_block_data_order (MD4_CTX *c, const void *data_, size_t num)
        -:   89:	{
        -:   90:	const unsigned char *data=data_;
        -:   91:	register unsigned MD32_REG_T A,B,C,D,l;
        -:   92:#ifndef MD32_XARRAY
        -:   93:	/* See comment in crypto/sha/sha_locl.h for details. */
        -:   94:	unsigned MD32_REG_T	XX0, XX1, XX2, XX3, XX4, XX5, XX6, XX7,
        -:   95:				XX8, XX9,XX10,XX11,XX12,XX13,XX14,XX15;
        -:   96:# define X(i)	XX##i
        -:   97:#else
        -:   98:	MD4_LONG XX[MD4_LBLOCK];
        -:   99:# define X(i)	XX[i]
        -:  100:#endif
        -:  101:
    #####:  102:	A=c->A;
    #####:  103:	B=c->B;
    #####:  104:	C=c->C;
    #####:  105:	D=c->D;
        -:  106:
    #####:  107:	for (;num--;)
        -:  108:		{
    #####:  109:	(void)HOST_c2l(data,l); X( 0)=l;
    #####:  110:	(void)HOST_c2l(data,l); X( 1)=l;
        -:  111:	/* Round 0 */
    #####:  112:	R0(A,B,C,D,X( 0), 3,0);	(void)HOST_c2l(data,l); X( 2)=l;
    #####:  113:	R0(D,A,B,C,X( 1), 7,0);	(void)HOST_c2l(data,l); X( 3)=l;
    #####:  114:	R0(C,D,A,B,X( 2),11,0);	(void)HOST_c2l(data,l); X( 4)=l;
    #####:  115:	R0(B,C,D,A,X( 3),19,0);	(void)HOST_c2l(data,l); X( 5)=l;
    #####:  116:	R0(A,B,C,D,X( 4), 3,0);	(void)HOST_c2l(data,l); X( 6)=l;
    #####:  117:	R0(D,A,B,C,X( 5), 7,0);	(void)HOST_c2l(data,l); X( 7)=l;
    #####:  118:	R0(C,D,A,B,X( 6),11,0);	(void)HOST_c2l(data,l); X( 8)=l;
    #####:  119:	R0(B,C,D,A,X( 7),19,0);	(void)HOST_c2l(data,l); X( 9)=l;
    #####:  120:	R0(A,B,C,D,X( 8), 3,0);	(void)HOST_c2l(data,l); X(10)=l;
    #####:  121:	R0(D,A,B,C,X( 9), 7,0);	(void)HOST_c2l(data,l); X(11)=l;
    #####:  122:	R0(C,D,A,B,X(10),11,0);	(void)HOST_c2l(data,l); X(12)=l;
    #####:  123:	R0(B,C,D,A,X(11),19,0);	(void)HOST_c2l(data,l); X(13)=l;
    #####:  124:	R0(A,B,C,D,X(12), 3,0);	(void)HOST_c2l(data,l); X(14)=l;
    #####:  125:	R0(D,A,B,C,X(13), 7,0);	(void)HOST_c2l(data,l); X(15)=l;
    #####:  126:	R0(C,D,A,B,X(14),11,0);
    #####:  127:	R0(B,C,D,A,X(15),19,0);
        -:  128:	/* Round 1 */
    #####:  129:	R1(A,B,C,D,X( 0), 3,0x5A827999L);
    #####:  130:	R1(D,A,B,C,X( 4), 5,0x5A827999L);
    #####:  131:	R1(C,D,A,B,X( 8), 9,0x5A827999L);
    #####:  132:	R1(B,C,D,A,X(12),13,0x5A827999L);
    #####:  133:	R1(A,B,C,D,X( 1), 3,0x5A827999L);
    #####:  134:	R1(D,A,B,C,X( 5), 5,0x5A827999L);
    #####:  135:	R1(C,D,A,B,X( 9), 9,0x5A827999L);
    #####:  136:	R1(B,C,D,A,X(13),13,0x5A827999L);
    #####:  137:	R1(A,B,C,D,X( 2), 3,0x5A827999L);
    #####:  138:	R1(D,A,B,C,X( 6), 5,0x5A827999L);
    #####:  139:	R1(C,D,A,B,X(10), 9,0x5A827999L);
    #####:  140:	R1(B,C,D,A,X(14),13,0x5A827999L);
    #####:  141:	R1(A,B,C,D,X( 3), 3,0x5A827999L);
    #####:  142:	R1(D,A,B,C,X( 7), 5,0x5A827999L);
    #####:  143:	R1(C,D,A,B,X(11), 9,0x5A827999L);
    #####:  144:	R1(B,C,D,A,X(15),13,0x5A827999L);
        -:  145:	/* Round 2 */
    #####:  146:	R2(A,B,C,D,X( 0), 3,0x6ED9EBA1L);
    #####:  147:	R2(D,A,B,C,X( 8), 9,0x6ED9EBA1L);
    #####:  148:	R2(C,D,A,B,X( 4),11,0x6ED9EBA1L);
    #####:  149:	R2(B,C,D,A,X(12),15,0x6ED9EBA1L);
    #####:  150:	R2(A,B,C,D,X( 2), 3,0x6ED9EBA1L);
    #####:  151:	R2(D,A,B,C,X(10), 9,0x6ED9EBA1L);
    #####:  152:	R2(C,D,A,B,X( 6),11,0x6ED9EBA1L);
    #####:  153:	R2(B,C,D,A,X(14),15,0x6ED9EBA1L);
    #####:  154:	R2(A,B,C,D,X( 1), 3,0x6ED9EBA1L);
    #####:  155:	R2(D,A,B,C,X( 9), 9,0x6ED9EBA1L);
    #####:  156:	R2(C,D,A,B,X( 5),11,0x6ED9EBA1L);
    #####:  157:	R2(B,C,D,A,X(13),15,0x6ED9EBA1L);
    #####:  158:	R2(A,B,C,D,X( 3), 3,0x6ED9EBA1L);
    #####:  159:	R2(D,A,B,C,X(11), 9,0x6ED9EBA1L);
    #####:  160:	R2(C,D,A,B,X( 7),11,0x6ED9EBA1L);
    #####:  161:	R2(B,C,D,A,X(15),15,0x6ED9EBA1L);
        -:  162:
    #####:  163:	A = c->A += A;
    #####:  164:	B = c->B += B;
    #####:  165:	C = c->C += C;
    #####:  166:	D = c->D += D;
        -:  167:		}
    #####:  168:	}
        -:  169:#endif
