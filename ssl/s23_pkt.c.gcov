        -:    0:Source:s23_pkt.c
        -:    0:Graph:s23_pkt.gcno
        -:    0:Data:s23_pkt.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* ssl/s23_pkt.c */
        -:    2:/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
        -:    3: * All rights reserved.
        -:    4: *
        -:    5: * This package is an SSL implementation written
        -:    6: * by Eric Young (eay@cryptsoft.com).
        -:    7: * The implementation was written so as to conform with Netscapes SSL.
        -:    8: * 
        -:    9: * This library is free for commercial and non-commercial use as long as
        -:   10: * the following conditions are aheared to.  The following conditions
        -:   11: * apply to all code found in this distribution, be it the RC4, RSA,
        -:   12: * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
        -:   13: * included with this distribution is covered by the same copyright terms
        -:   14: * except that the holder is Tim Hudson (tjh@cryptsoft.com).
        -:   15: * 
        -:   16: * Copyright remains Eric Young's, and as such any Copyright notices in
        -:   17: * the code are not to be removed.
        -:   18: * If this package is used in a product, Eric Young should be given attribution
        -:   19: * as the author of the parts of the library used.
        -:   20: * This can be in the form of a textual message at program startup or
        -:   21: * in documentation (online or textual) provided with the package.
        -:   22: * 
        -:   23: * Redistribution and use in source and binary forms, with or without
        -:   24: * modification, are permitted provided that the following conditions
        -:   25: * are met:
        -:   26: * 1. Redistributions of source code must retain the copyright
        -:   27: *    notice, this list of conditions and the following disclaimer.
        -:   28: * 2. Redistributions in binary form must reproduce the above copyright
        -:   29: *    notice, this list of conditions and the following disclaimer in the
        -:   30: *    documentation and/or other materials provided with the distribution.
        -:   31: * 3. All advertising materials mentioning features or use of this software
        -:   32: *    must display the following acknowledgement:
        -:   33: *    "This product includes cryptographic software written by
        -:   34: *     Eric Young (eay@cryptsoft.com)"
        -:   35: *    The word 'cryptographic' can be left out if the rouines from the library
        -:   36: *    being used are not cryptographic related :-).
        -:   37: * 4. If you include any Windows specific code (or a derivative thereof) from 
        -:   38: *    the apps directory (application code) you must include an acknowledgement:
        -:   39: *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)"
        -:   40: * 
        -:   41: * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
        -:   42: * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   43: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        -:   44: * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        -:   45: * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        -:   46: * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        -:   47: * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   48: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        -:   49: * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
        -:   50: * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        -:   51: * SUCH DAMAGE.
        -:   52: * 
        -:   53: * The licence and distribution terms for any publically available version or
        -:   54: * derivative of this code cannot be changed.  i.e. this code cannot simply be
        -:   55: * copied and put under another distribution licence
        -:   56: * [including the GNU Public Licence.]
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <errno.h>
        -:   61:#define USE_SOCKETS
        -:   62:#include "ssl_locl.h"
        -:   63:#include <openssl/evp.h>
        -:   64:#include <openssl/buffer.h>
        -:   65:
    10000:   66:int ssl23_write_bytes(SSL *s)
        -:   67:	{
        -:   68:	int i,num,tot;
        -:   69:	char *buf;
        -:   70:
    10000:   71:	buf=s->init_buf->data;
    10000:   72:	tot=s->init_off;
    10000:   73:	num=s->init_num;
        -:   74:	for (;;)
        -:   75:		{
    10000:   76:		s->rwstate=SSL_WRITING;
    10000:   77:		i=BIO_write(s->wbio,&(buf[tot]),num);
    10000:   78:		if (i <= 0)
        -:   79:			{
    #####:   80:			s->init_off=tot;
    #####:   81:			s->init_num=num;
    #####:   82:			return(i);
        -:   83:			}
    10000:   84:		s->rwstate=SSL_NOTHING;
    10000:   85:		if (i == num) return(tot+i);
        -:   86:
    #####:   87:		num-=i;
    #####:   88:		tot+=i;
    #####:   89:		}
        -:   90:	}
        -:   91:
        -:   92:/* return regularly only when we have read (at least) 'n' bytes */
    10000:   93:int ssl23_read_bytes(SSL *s, int n)
        -:   94:	{
        -:   95:	unsigned char *p;
        -:   96:	int j;
        -:   97:
    10000:   98:	if (s->packet_length < (unsigned int)n)
        -:   99:		{
    10000:  100:		p=s->packet;
        -:  101:
        -:  102:		for (;;)
        -:  103:			{
    10000:  104:			s->rwstate=SSL_READING;
    10000:  105:			j=BIO_read(s->rbio,(char *)&(p[s->packet_length]),
    10000:  106:				n-s->packet_length);
    10000:  107:			if (j <= 0)
        -:  108:				return(j);
    10000:  109:			s->rwstate=SSL_NOTHING;
    10000:  110:			s->packet_length+=j;
    10000:  111:			if (s->packet_length >= (unsigned int)n)
    10000:  112:				return(s->packet_length);
        -:  113:			}
        -:  114:		}
        -:  115:	return(n);
        -:  116:	}
        -:  117:
