        -:    0:Source:nseq.c
        -:    0:Graph:nseq.gcno
        -:    0:Data:nseq.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* nseq.c */
        -:    2:/* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL
        -:    3: * project 1999.
        -:    4: */
        -:    5:/* ====================================================================
        -:    6: * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
        -:    7: *
        -:    8: * Redistribution and use in source and binary forms, with or without
        -:    9: * modification, are permitted provided that the following conditions
        -:   10: * are met:
        -:   11: *
        -:   12: * 1. Redistributions of source code must retain the above copyright
        -:   13: *    notice, this list of conditions and the following disclaimer. 
        -:   14: *
        -:   15: * 2. Redistributions in binary form must reproduce the above copyright
        -:   16: *    notice, this list of conditions and the following disclaimer in
        -:   17: *    the documentation and/or other materials provided with the
        -:   18: *    distribution.
        -:   19: *
        -:   20: * 3. All advertising materials mentioning features or use of this
        -:   21: *    software must display the following acknowledgment:
        -:   22: *    "This product includes software developed by the OpenSSL Project
        -:   23: *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
        -:   24: *
        -:   25: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   26: *    endorse or promote products derived from this software without
        -:   27: *    prior written permission. For written permission, please contact
        -:   28: *    licensing@OpenSSL.org.
        -:   29: *
        -:   30: * 5. Products derived from this software may not be called "OpenSSL"
        -:   31: *    nor may "OpenSSL" appear in their names without prior written
        -:   32: *    permission of the OpenSSL Project.
        -:   33: *
        -:   34: * 6. Redistributions of any form whatsoever must retain the following
        -:   35: *    acknowledgment:
        -:   36: *    "This product includes software developed by the OpenSSL Project
        -:   37: *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
        -:   38: *
        -:   39: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   40: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   41: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   42: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   43: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   44: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   45: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   46: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   47: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   48: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   49: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   50: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   51: * ====================================================================
        -:   52: *
        -:   53: * This product includes cryptographic software written by Eric Young
        -:   54: * (eay@cryptsoft.com).  This product includes software written by Tim
        -:   55: * Hudson (tjh@cryptsoft.com).
        -:   56: *
        -:   57: */
        -:   58:
        -:   59:#include <stdio.h>
        -:   60:#include <string.h>
        -:   61:#include "apps.h"
        -:   62:#include <openssl/pem.h>
        -:   63:#include <openssl/err.h>
        -:   64:
        -:   65:#undef PROG
        -:   66:#define PROG nseq_main
        -:   67:
        -:   68:int MAIN(int, char **);
        -:   69:
    #####:   70:int MAIN(int argc, char **argv)
        -:   71:{
        -:   72:	char **args, *infile = NULL, *outfile = NULL;
        -:   73:	BIO *in = NULL, *out = NULL;
        -:   74:	int toseq = 0;
        -:   75:	X509 *x509 = NULL;
        -:   76:	NETSCAPE_CERT_SEQUENCE *seq = NULL;
        -:   77:	int i, ret = 1;
        -:   78:	int badarg = 0;
    #####:   79:	if (bio_err == NULL) bio_err = BIO_new_fp (stderr, BIO_NOCLOSE);
    #####:   80:	ERR_load_crypto_strings();
    #####:   81:	args = argv + 1;
    #####:   82:	while (!badarg && *args && *args[0] == '-') {
    #####:   83:		if (!strcmp (*args, "-toseq")) toseq = 1;
    #####:   84:		else if (!strcmp (*args, "-in")) {
    #####:   85:			if (args[1]) {
    #####:   86:				args++;
        -:   87:				infile = *args;
        -:   88:			} else badarg = 1;
    #####:   89:		} else if (!strcmp (*args, "-out")) {
    #####:   90:			if (args[1]) {
    #####:   91:				args++;
        -:   92:				outfile = *args;
        -:   93:			} else badarg = 1;
        -:   94:		} else badarg = 1;
    #####:   95:		args++;
        -:   96:	}
        -:   97:
    #####:   98:	if (badarg) {
    #####:   99:		BIO_printf (bio_err, "Netscape certificate sequence utility\n");
    #####:  100:		BIO_printf (bio_err, "Usage nseq [options]\n");
    #####:  101:		BIO_printf (bio_err, "where options are\n");
    #####:  102:		BIO_printf (bio_err, "-in file  input file\n");
    #####:  103:		BIO_printf (bio_err, "-out file output file\n");
    #####:  104:		BIO_printf (bio_err, "-toseq    output NS Sequence file\n");
    #####:  105:		OPENSSL_EXIT(1);
        -:  106:	}
        -:  107:
    #####:  108:	if (infile) {
    #####:  109:		if (!(in = BIO_new_file (infile, "r"))) {
    #####:  110:			BIO_printf (bio_err,
        -:  111:				 "Can't open input file %s\n", infile);
    #####:  112:			goto end;
        -:  113:		}
    #####:  114:	} else in = BIO_new_fp(stdin, BIO_NOCLOSE);
        -:  115:
    #####:  116:	if (outfile) {
    #####:  117:		if (!(out = BIO_new_file (outfile, "w"))) {
    #####:  118:			BIO_printf (bio_err,
        -:  119:				 "Can't open output file %s\n", outfile);
    #####:  120:			goto end;
        -:  121:		}
        -:  122:	} else {
    #####:  123:		out = BIO_new_fp(stdout, BIO_NOCLOSE);
        -:  124:#ifdef OPENSSL_SYS_VMS
        -:  125:		{
        -:  126:		BIO *tmpbio = BIO_new(BIO_f_linebuffer());
        -:  127:		out = BIO_push(tmpbio, out);
        -:  128:		}
        -:  129:#endif
        -:  130:	}
    #####:  131:	if (toseq) {
    #####:  132:		seq = NETSCAPE_CERT_SEQUENCE_new();
    #####:  133:		seq->certs = sk_X509_new_null();
    #####:  134:		while((x509 = PEM_read_bio_X509(in, NULL, NULL, NULL))) 
    #####:  135:		    sk_X509_push(seq->certs,x509);
        -:  136:
    #####:  137:		if(!sk_X509_num(seq->certs))
        -:  138:		{
    #####:  139:			BIO_printf (bio_err, "Error reading certs file %s\n", infile);
    #####:  140:			ERR_print_errors(bio_err);
    #####:  141:			goto end;
        -:  142:		}
    #####:  143:		PEM_write_bio_NETSCAPE_CERT_SEQUENCE(out, seq);
        -:  144:		ret = 0;
    #####:  145:		goto end;
        -:  146:	}
        -:  147:
    #####:  148:	if (!(seq = PEM_read_bio_NETSCAPE_CERT_SEQUENCE(in, NULL, NULL, NULL))) {
    #####:  149:		BIO_printf (bio_err, "Error reading sequence file %s\n", infile);
    #####:  150:		ERR_print_errors(bio_err);
    #####:  151:		goto end;
        -:  152:	}
        -:  153:
    #####:  154:	for(i = 0; i < sk_X509_num(seq->certs); i++) {
    #####:  155:		x509 = sk_X509_value(seq->certs, i);
    #####:  156:		dump_cert_text(out, x509);
    #####:  157:		PEM_write_bio_X509(out, x509);
        -:  158:	}
        -:  159:	ret = 0;
        -:  160:end:
    #####:  161:	BIO_free(in);
    #####:  162:	BIO_free_all(out);
    #####:  163:	NETSCAPE_CERT_SEQUENCE_free(seq);
        -:  164:
    #####:  165:	OPENSSL_EXIT(ret);
        -:  166:}
        -:  167:
