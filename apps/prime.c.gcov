        -:    0:Source:prime.c
        -:    0:Graph:prime.gcno
        -:    0:Data:prime.gcda
        -:    0:Runs:10000
        -:    0:Programs:1
        -:    1:/* ====================================================================
        -:    2: * Copyright (c) 2004 The OpenSSL Project.  All rights reserved.
        -:    3: *
        -:    4: * Redistribution and use in source and binary forms, with or without
        -:    5: * modification, are permitted provided that the following conditions
        -:    6: * are met:
        -:    7: *
        -:    8: * 1. Redistributions of source code must retain the above copyright
        -:    9: *    notice, this list of conditions and the following disclaimer. 
        -:   10: *
        -:   11: * 2. Redistributions in binary form must reproduce the above copyright
        -:   12: *    notice, this list of conditions and the following disclaimer in
        -:   13: *    the documentation and/or other materials provided with the
        -:   14: *    distribution.
        -:   15: *
        -:   16: * 3. All advertising materials mentioning features or use of this
        -:   17: *    software must display the following acknowledgment:
        -:   18: *    "This product includes software developed by the OpenSSL Project
        -:   19: *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
        -:   20: *
        -:   21: * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
        -:   22: *    endorse or promote products derived from this software without
        -:   23: *    prior written permission. For written permission, please contact
        -:   24: *    openssl-core@openssl.org.
        -:   25: *
        -:   26: * 5. Products derived from this software may not be called "OpenSSL"
        -:   27: *    nor may "OpenSSL" appear in their names without prior written
        -:   28: *    permission of the OpenSSL Project.
        -:   29: *
        -:   30: * 6. Redistributions of any form whatsoever must retain the following
        -:   31: *    acknowledgment:
        -:   32: *    "This product includes software developed by the OpenSSL Project
        -:   33: *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
        -:   34: *
        -:   35: * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
        -:   36: * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        -:   37: * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        -:   38: * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
        -:   39: * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        -:   40: * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
        -:   41: * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   42: * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        -:   43: * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
        -:   44: * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        -:   45: * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
        -:   46: * OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   47: *
        -:   48: */
        -:   49:
        -:   50:#include <string.h>
        -:   51:
        -:   52:#include "apps.h"
        -:   53:#include <openssl/bn.h>
        -:   54:
        -:   55:
        -:   56:#undef PROG
        -:   57:#define PROG prime_main
        -:   58:
        -:   59:int MAIN(int, char **);
        -:   60:
    #####:   61:int MAIN(int argc, char **argv)
        -:   62:    {
        -:   63:    int hex=0;
        -:   64:    int checks=20;
        -:   65:    int generate=0;
        -:   66:    int bits=0;
        -:   67:    int safe=0;
    #####:   68:    BIGNUM *bn=NULL;
        -:   69:    BIO *bio_out;
        -:   70:
    #####:   71:    apps_startup();
        -:   72:
    #####:   73:    if (bio_err == NULL)
    #####:   74:	if ((bio_err=BIO_new(BIO_s_file())) != NULL)
    #####:   75:	    BIO_set_fp(bio_err,stderr,BIO_NOCLOSE|BIO_FP_TEXT);
        -:   76:
    #####:   77:    --argc;
    #####:   78:    ++argv;
    #####:   79:    while (argc >= 1 && **argv == '-')
        -:   80:	{
    #####:   81:	if(!strcmp(*argv,"-hex"))
        -:   82:	    hex=1;
    #####:   83:	else if(!strcmp(*argv,"-generate"))
        -:   84:	    generate=1;
    #####:   85:	else if(!strcmp(*argv,"-bits"))
    #####:   86:	    if(--argc < 1)
        -:   87:		goto bad;
        -:   88:	    else
    #####:   89:		bits=atoi(*++argv);
    #####:   90:	else if(!strcmp(*argv,"-safe"))
        -:   91:	    safe=1;
    #####:   92:	else if(!strcmp(*argv,"-checks"))
    #####:   93:	    if(--argc < 1)
        -:   94:		goto bad;
        -:   95:	    else
    #####:   96:		checks=atoi(*++argv);
        -:   97:	else
        -:   98:	    {
    #####:   99:	    BIO_printf(bio_err,"Unknown option '%s'\n",*argv);
    #####:  100:	    goto bad;
        -:  101:	    }
    #####:  102:	--argc;
    #####:  103:	++argv;
        -:  104:	}
        -:  105:
    #####:  106:    if (argv[0] == NULL && !generate)
        -:  107:	{
    #####:  108:	BIO_printf(bio_err,"No prime specified\n");
    #####:  109:	goto bad;
        -:  110:	}
        -:  111:
    #####:  112:    if ((bio_out=BIO_new(BIO_s_file())) != NULL)
        -:  113:	{
    #####:  114:	BIO_set_fp(bio_out,stdout,BIO_NOCLOSE);
        -:  115:#ifdef OPENSSL_SYS_VMS
        -:  116:	    {
        -:  117:	    BIO *tmpbio = BIO_new(BIO_f_linebuffer());
        -:  118:	    bio_out = BIO_push(tmpbio, bio_out);
        -:  119:	    }
        -:  120:#endif
        -:  121:	}
        -:  122:
    #####:  123:    if(generate)
        -:  124:	{
        -:  125:	char *s;
        -:  126:
    #####:  127:	if(!bits)
        -:  128:	    {
    #####:  129:	    BIO_printf(bio_err,"Specifiy the number of bits.\n");
    #####:  130:	    return 1;
        -:  131:	    }
    #####:  132:	bn=BN_new();
    #####:  133:	BN_generate_prime_ex(bn,bits,safe,NULL,NULL,NULL);
    #####:  134:	s=hex ? BN_bn2hex(bn) : BN_bn2dec(bn);
    #####:  135:	BIO_printf(bio_out,"%s\n",s);
    #####:  136:	OPENSSL_free(s);
        -:  137:	}
        -:  138:    else
        -:  139:	{
    #####:  140:	if(hex)
    #####:  141:	    BN_hex2bn(&bn,argv[0]);
        -:  142:	else
    #####:  143:	    BN_dec2bn(&bn,argv[0]);
        -:  144:
    #####:  145:	BN_print(bio_out,bn);
    #####:  146:	BIO_printf(bio_out," is %sprime\n",
    #####:  147:		   BN_is_prime_ex(bn,checks,NULL,NULL) ? "" : "not ");
        -:  148:	}
        -:  149:
    #####:  150:    BN_free(bn);
    #####:  151:    BIO_free_all(bio_out);
        -:  152:
    #####:  153:    return 0;
        -:  154:
        -:  155:    bad:
    #####:  156:    BIO_printf(bio_err,"options are\n");
    #####:  157:    BIO_printf(bio_err,"%-14s hex\n","-hex");
    #####:  158:    BIO_printf(bio_err,"%-14s number of checks\n","-checks <n>");
    #####:  159:    return 1;
        -:  160:    }
